{"_id":"@ethereum-waffle/provider","_rev":"156-f9e92b42dde5b9bbe685a8c054a690fc","name":"@ethereum-waffle/provider","dist-tags":{"latest":"4.0.5","beta":"3.0.0-beta.3","alpha":"4.0.4","dev":"4.0.5-dev.238c11c"},"versions":{"2.3.0":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"2.3.0","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"private":false,"license":"MIT","main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@types/ganache-core":"^2.7.0","ethers":"^4.0.0","ganache-core":"^2.9.0-istanbul.0"},"resolutions":{"web3":"1.2.1"},"devDependencies":{"@types/chai":"^4.2.3","@types/chai-as-promised":"^7.1.2","@types/mocha":"^5.2.7","@typescript-eslint/eslint-plugin":"^2.6.1","@typescript-eslint/parser":"^2.6.1","chai":"^4.2.0","chai-as-promised":"^7.1.1","eslint":"^6.5.1","mocha":"^6.2.1","rimraf":"^3.0.0","ts-node":"^8.4.1","typescript":"^3.7.2"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/provider@2.3.0","dist":{"shasum":"6d01d792635593e269f50bccf15fad9ecb1a4f87","integrity":"sha512-EHeYKHcdMFZ/OMCeT1r6xGms/mkj52JIeWrZajK1e3tAVzVld92iUhe9IoJ6kUaQGQEUOhYVPV7UqTYHpbJCSA==","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-2.3.0.tgz","fileCount":24,"unpackedSize":12990,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeIC0BCRA9TVsSAnZWagAASC4P/3yGVtulCC0b+MKC83er\nEc4uclsZENppXO1Xxd/DF5ou5nTvpE5YQpNElS5uyrKle6l+dlooxmwarysV\ntvE+3FMJBVMLWP1MYnrb5Wd5uTTAyXJA3tdCeJmGoh+VQQESRqH1hjsrOUWd\n6hmVuEcWnsVLMpql53muyAQxqrVNHebJ3yjNz1htUK0jJfQoPALpkYt+HiGX\nYhBt4UkkI31/NAtYfZkPuILdcekwhBTesICCbrGk/JEtZy4+gmldUsKj8ZWj\ngk649BCstnXgbGDUTvaxXXlhr+Uzr2DNHmdlngCYm7pgetXif58Z2279DQvF\nIrBFO9SBZe4E4D8Uozh5IXUUGBx1dBFVbVIziCh+hLiLj2aXERMv7BWzaN45\nQEL8RMvz2th1PdABOZG7fEffZoVC9MGg4/7C3jpEudbqY9BOfGXIBxU4vSJV\n8hgntuZ58pB7Nfqoiu+tWwxdpfT7ftpp1r2v3xAfq0h9ntPdfP8tpkqq6he8\nlOe9iCL+c81gzkKurhdUFgTqv+GAmaZnP2wa7TqsBrtEwlCEjrsq5njMDt1v\nwvCDlZ+yW5qnM5Xg9/c0ymMWrjJ5WUCHWLvf2/ZOM/BO223EfN8oCF2K0JKW\nTfc17NwGRkd1ylxFZlMsEuhBg0AIN2aArc8XWaVYph7PrvmboLWb+4rQmwaH\nNOy2\r\n=YK9R\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCHyk12+PKl8Wl4Z6K8OMgV7eNkFNvaUl3rBCI2RSkYtAIhAOtZn2EiqbPH1uCxriWwJX4YveEY7jFlSd9bNik9N6By"}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_2.3.0_1579166976859_0.9391260541232191"},"_hasShrinkwrap":false},"2.3.1":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"2.3.1","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"private":false,"license":"MIT","main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@types/ganache-core":"^2.7.0","ethers":"^4.0.0","ganache-core":"2.9.0-istanbul.0"},"resolutions":{"web3":"1.2.1"},"devDependencies":{"@types/chai":"^4.2.3","@types/chai-as-promised":"^7.1.2","@types/mocha":"^5.2.7","@typescript-eslint/eslint-plugin":"^2.6.1","@typescript-eslint/parser":"^2.6.1","chai":"^4.2.0","chai-as-promised":"^7.1.1","eslint":"^6.5.1","mocha":"^6.2.1","rimraf":"^3.0.0","ts-node":"^8.4.1","typescript":"^3.7.2"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/provider@2.3.1","dist":{"shasum":"aaf6642fe8d246114b996e56906311c34f575d36","integrity":"sha512-S9D3I7u2JafVawS+shMnMQiS6yh4oBXb5IBKuQEM6t3cXOdrHgTQEAwlOR0yUYmrnx3gBF4MJ2xkg1Mjpa+5bw==","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-2.3.1.tgz","fileCount":24,"unpackedSize":12989,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeIU7/CRA9TVsSAnZWagAAj8QP/jAcE+SrTdgWtH72WCxu\notTZUWfpN1iOsa4InUTAzM2hxIvUNuRNEAvubOIwv0lBLfM8xe4A5fRkFTtT\nxDCDZYmKfUsn/nAmjvsMYWkxeFR5tu8mKAagzTarlS+00Icvzc+CZry2n/id\nzPs0t2D2X5EgeTxgdJ8dpPhcK2ENhjrbQFsZagdwui0lIpu5dl4Mt0Ej0D21\nasAp+MecEmPogrknov0MKAN770NKzkz2v/OJa+6SseEAQZQ12WSmzRk1Kg92\nPpFT3DSfYmkEJa/x9MgVmh2GFFiiDScp4DT/jIMFmm+1uKhlxZqJa1P/bQQf\nS1b8MV6f7R92eTmc0IuDD+EfcykgM7ZLFmI7x0Cmxj5/zEfWfFu4wqopXRMk\n6c4ujK4xqrrt/jJfR5EN0RBEAEbHfJAnFMFA18yisrCjZE2jFNdK/Vnab5RG\n511lylAeDBUWZZXrjmMV8sbyAWpyiAeFZAV1C7qoBhgedE61HqcLAvdWVUBn\nU8Q8nPaNBmqcvLR0PcsPTwpS2FFJbQRIOxRSbAgrF6jyQV9CPVR7LOcdVioi\nnr51Ib3dji6LNYL2U5DeTcnE2PUspc38+jY9O4TL3HvbjiZqZ4C0VXLqcW/A\nM0yN9Rl2gGHutyI0kCHvl+I3ISdgEqySP+1l8CA0oBMM+qInXgUTmVGEP9uR\nvBM7\r\n=0lFq\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDqqMDml1yIbPxZ7wtm1/4QpVKFmNdbR75tr5PJTWMWDAiBo1zH7vxInlLOeseMhpJJK4lWr8JVspuUdbUD3kAK3fA=="}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_2.3.1_1579241214562_0.19334973151825152"},"_hasShrinkwrap":false},"2.3.2":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"2.3.2","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@types/ganache-core":"^2.7.0","ethers":"^4.0.0","ganache-core":"2.9.0-istanbul.0"},"resolutions":{"web3":"1.2.1"},"devDependencies":{"@types/chai":"^4.2.3","@types/chai-as-promised":"^7.1.2","@types/mocha":"^5.2.7","@typescript-eslint/eslint-plugin":"^2.6.1","@typescript-eslint/parser":"^2.6.1","chai":"^4.2.0","chai-as-promised":"^7.1.1","eslint":"^6.5.1","mocha":"^6.2.1","rimraf":"^3.0.0","ts-node":"^8.4.1","typescript":"^3.7.2"},"bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"homepage":"https://github.com/EthWorks/Waffle#readme","_id":"@ethereum-waffle/provider@2.3.2","_nodeVersion":"11.15.0","_npmVersion":"6.7.0","dist":{"integrity":"sha512-O89T6DGyxDxZq7FR+OIvH3K2kHwlAB+MT0J8eJvLboflxlyOZ3lftlsJkj+9CHQo1Gs4sc1D/5tSObK/a1vhcw==","shasum":"19c11a2d6e9bf41579a41c5aa286005160821299","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-2.3.2.tgz","fileCount":20,"unpackedSize":13238,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJePTUUCRA9TVsSAnZWagAA1ucP/i7K/H3kou5IC9As9KO/\n9wDLRV4PnYm01ahED0KOQZMFo2MmT/h84qxn1U/FoZOXZQrFi1HadJFr+b/l\nceerDu45zQRnoQznA+EDneLt+nO4UhxTCBYvR7pWN/7bdlWhIw4OP9ZgOL9Z\n23pXnAljCc1wIC4Yr77VLNpJLalcYTEnb9JODGWGA/vnPlEzf9xMYK1ha3QZ\n12xYbGwHV7BEctCpLyrhDHAs/n8eMKUx6puh8cKpm+AlKWbWJl+DzPlHGIgX\nDdWY/RKAW7jtxpfNK6CK0mO9I29AaJLAas51wLiVVTFiZ55NKchjX9bQWZQ8\npyezdEJLwON24Bz0M8GMdYhLfFJTySI2ySv9Pmk/JWKsgJI2o/KS8S76l602\nnNXg0UePpl2Fq4ud84obkZiTBmC6qWZyuJn9tmyo4n01QqJV4Mn1jJioSSg8\nOq7fJ905Ld435uwwrXVuaJc+HHHGAvyI2W01yu1LePnPumxuSVEiLIfcM1Sa\nTR3EPsDmh9HquBVSvD21J3aBDWL8Udt8NlO7Ac1jkjRMKvb09cMqlyAHyKGS\nmtOskT7Brb17mGCDwYmoXHDtC4m+1IWzY3pD+KCkm2qI3mJgXw89I5DFFSg2\nf2MAFCG1C8IYjF22Ft+RUnqZCWxmeLojyawsjbunvm2dJ6nf4z/Zuawhdy76\nCtyU\r\n=vLyi\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFmFCVO6Nbdprad6q/HMWkFGhDFFzbcoRoiolx5fBgmUAiAZDY6ckQ+2G24njked/cr2/e/3ae5aqYC1IEuKjmG1HA=="}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_2.3.2_1581069587903_0.6237871475267929"},"_hasShrinkwrap":false},"2.4.0":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"2.4.0","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"ethers":"^4.0.45","ganache-core":"^2.10.2"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/chai":"^4.2.3","@types/chai-as-promised":"^7.1.2","@types/mocha":"^5.2.7","@typescript-eslint/eslint-plugin":"^2.6.1","@typescript-eslint/parser":"^2.6.1","chai":"^4.2.0","chai-as-promised":"^7.1.1","eslint":"^6.5.1","mocha":"^6.2.1","rimraf":"^3.0.0","ts-node":"^8.4.1","typescript":"^3.7.2"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/provider@2.4.0","dist":{"shasum":"d40b1585e22a67fcfa6aed9756b12622bbef25aa","integrity":"sha512-2XCX1l7d39sBCrzvZIUOPrN+8roC4NtLQ4Xkrqv8N+rZ75IjeUXG+BAOpwloXzSY3rhqigeddOST8UixR731TQ==","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-2.4.0.tgz","fileCount":25,"unpackedSize":15678,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeb3idCRA9TVsSAnZWagAAur0P/0U2s6ECKvU/ueqBatG3\nVK2PAZliMx+kC6wTGswM4FTwDR7QXeXasFnxvvneT+hekU2qvyFod6i0TIO8\njfe30yv2a7uQbt79coTlYv8nOpH9MRvDhHfEqXHB52W0ZlbIss1bs1ya9/4x\nbPxOm85Fu0JX9e5yvPq5DWo3wEKfBWYu2XUFf9dXYAYOycesVNXqWvtI8xdP\naZHqA9LJbh7SlGGpZAAD0GBOAeu0XUZ17VNIuwIUVospA/YV6GeQsV1bwxNN\nhdP7DQmbGUIHvJJFH2TG+ftiwkK2xlbx+ZzInPkIr6eRAJTCxYHHQUTOoIbD\nhuL0SJnQiYe177w0s4J3GmuOSj6KGMQLokr0AvQMprVPm3IMNOlqTMnPyyA0\nA9zMjJr8lff/nlgw4ZMiuvvsPpK/LAzJ9ef+3eoDI2nV8cq4YnxFoj58Seqw\n0gDKnTPFX/Q2qpSoMgk7tm6Mr0TvDeCwL+/R6vBaMDGO5d0DahIajdcswP3w\n5UXeF/AWFY5T95pVeyKwwttsb6knAEx4tIDn++y7qst/Mknu9NjqIXcbXeKi\nPu8F9FZUv5zEi+pK9h/Yq5U/D8UPmI6unYgDfIm2ILFhuHEWpcmKtVWNu/I8\nKpQwW59YwD2mmEv0wFZ9YeZtD25Osn/Gljwnlw4OiIj07qJtaLAU+69rw83+\ntao+\r\n=CL/C\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDrP3KdXTrRswI1kBf6vOPefeLgnuTcAUBY+PhsilrmrAIhAIczCNaJKbQllIu/+iZy9A+4P3vAtWyHOyyBd/3gPmiN"}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_2.4.0_1584363677399_0.005128657421957117"},"_hasShrinkwrap":false},"2.4.1":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"2.4.1","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"ethers":"^4.0.45","ganache-core":"^2.10.2"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/chai":"^4.2.3","@types/chai-as-promised":"^7.1.2","@types/mocha":"^5.2.7","@typescript-eslint/eslint-plugin":"^2.6.1","@typescript-eslint/parser":"^2.6.1","chai":"^4.2.0","chai-as-promised":"^7.1.1","eslint":"^6.5.1","mocha":"^6.2.1","rimraf":"^3.0.0","ts-node":"^8.4.1","typescript":"^3.7.2"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/provider@2.4.1","dist":{"shasum":"5480be31f9c655864e3eede374759973d20947ef","integrity":"sha512-OhRQfQlR6BsgGUEaeeaQXztbRQ0v/AmwEdmWHmBwJN6NX/FjLmOTIyF3LBWBFHH4K5GgSCDhFs6w5Khz+ojRKg==","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-2.4.1.tgz","fileCount":25,"unpackedSize":15678,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJekFcQCRA9TVsSAnZWagAA0lUP/1VA+N17++rCPMbYFhcT\nlg3ZL0styNk08Vb+JUF0KhwTfSosm33E5XvRMzosF1Iczz1MsXMcXbh50pkS\nOHPthSFxUy/4CC+Ohqe8hrata+/UcVpUl0ACzyRPbaENzxKvNDoRiWXrQqd8\nbbMFElej5IrWhRrWkHKyFibd3mQtOOqL0823qbQLQIx4gryoKyKqZWhT1p0W\n+XCHYzYpjFj6kSQ0UEGM3fLYREYz2EcY8zNg8dTgL34NHnpWKe5v6IgFimkM\nsMEC4q42QGbYH4QzZmIRJhXeSbQKGX2QPis+poFZI6mvUWj1DFvb99sIiIXK\nNPLuZfJHc9aROyZDGjs8i3UXgklsKK2W/VUz2cXSZC9Zkxu81Y4QCh9NSpwk\nQmNDBiDHiKW40dYmcvlHlFjjbud5JD7IWRpiazfJShmFSevGescS+xvc4/Ba\njgmXMYyyxLhGKsPLXKTL17Fe0zvJyUSvBBomoqzwsovRCBuJK62I1RxDowKV\n0XKfN9gBY/c/5nfxy7BOcxtsXruqYlyjxn1fbKmiZKjYBOnqz/eRRccfDdZf\nk5XcjButiVJKpK2qFr5WzIwEddQnfWVhsmTkyvJKXUc0N8KUBfrLHG5YSbW8\nWOZGmmaEZCtAKSzALvRBwFYZQIuLqxIvwtfvTRTUsE9AWtneNIM4bm4Wa21m\n41gc\r\n=FuoZ\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDzFwu2lzL7Kw/BmIuWJndgu3UstHpDWssbJlQHDPUUmAIhAIDOb8/YqRugvsRML5XyuPjp9DviQwQhTSvQtcuDRco2"}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_2.4.1_1586517776146_0.8239543921156107"},"_hasShrinkwrap":false},"2.5.0":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"2.5.0","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"ethers":"^4.0.45","ganache-core":"^2.10.2"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/chai":"^4.2.3","@types/chai-as-promised":"^7.1.2","@types/mocha":"^5.2.7","@typescript-eslint/eslint-plugin":"^2.30.0","@typescript-eslint/parser":"^2.30.0","chai":"^4.2.0","chai-as-promised":"^7.1.1","eslint":"^6.8.0","eslint-plugin-import":"^2.20.2","mocha":"^7.1.2","rimraf":"^3.0.0","ts-node":"^8.9.1","typescript":"^3.8.3"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/provider@2.5.0","dist":{"shasum":"1442eb6ea07111f32271f671665b20c56fccb6ae","integrity":"sha512-KD++/IQaBTnbuEfKuUiEC9RMIrnrSkKwo4WjdmysuJgNljSAYRdwquCJUSSUw8ZbuJZkWZXbQyFLUE/XKE14Og==","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-2.5.0.tgz","fileCount":28,"unpackedSize":18777,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJesXWSCRA9TVsSAnZWagAADnwP/0fdJrudeodFW+R4U/Da\nQTOlq7Tu107c/BxE1XfUeXe+9Y1oMSzkDQBaZ5K1xKkigoj1VvtqiS8fIsvf\nE8fmYWNW+JQhzZFCWiH1NnlDnbx8MnRheLaX7Ngma2TzqZ9ZXnpdn7Dq5glS\nCNNnAbvnJ1AbLPnj9LxrYo+crKQYbvvF9dWWcJptgqo2m8a4vlbDJ8a7Aq7j\n2de1P8b16Hx0hyvv0ze4kaUHQG5EGE2UIL0Mk3FbrNahrqgbb01efXtIu3ep\nJgILsBEhwx2WDROpwkgHx+8umXuXyJoSXmq1XOqu+n3V8u80GBiM4IFCDp8z\nxYtsExmB9I+EVXy8x3ZDrMRxib2+vibcHhpbQ4mmHf+opZrLdwpWYZx0EVyq\n7pBGscRsyPq9p3pS9AZO4T4CwLZqq2JK0TqrLOEC6Hq/Uun2Yum63TsUxaLD\ndVALI2q3JVWYXA8AZXtFqMocAm4xBK5ylDofNLuFlDC1wtsNgWKLpVmMJPg5\nnHzj/RQVEteLJct3RVcUJgV0f0/xXOytNIdVI3NjwhBui/ZD9XuEMgl51JEv\n1Laj0ZpsSBMLU4Z7imIEk7OqbDbehOsn1oOl0le/FVP6/XL+DjRlllo/k7Ak\nRKQiYQpmt2DoWvXqQbZ7dmkryAgC+JE45/LT8VJUx0p8Xgk4PltTKOdUL0uR\n7zbh\r\n=I1ig\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFvWuI5TPGrIcJj7Z0T5DHc66fn/dSzVW739n85m7QdbAiBDXGAiGo6P8SbAkCiuB0EFyEv1zbL/r+rftSDbNB457w=="}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_2.5.0_1588688274328_0.17867556033949983"},"_hasShrinkwrap":false},"3.0.0-beta.1":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"3.0.0-beta.1","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"ethers":"^5.0.0-beta.184","ganache-core":"^2.10.2"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/chai":"^4.2.3","@types/chai-as-promised":"^7.1.2","@types/mocha":"^5.2.7","@typescript-eslint/eslint-plugin":"^2.30.0","@typescript-eslint/parser":"^2.30.0","chai":"^4.2.0","chai-as-promised":"^7.1.1","eslint":"^6.8.0","eslint-plugin-import":"^2.20.2","mocha":"^7.1.2","rimraf":"^3.0.0","ts-node":"^8.9.1","typescript":"^3.8.3"},"readmeFilename":"README.md","readme":"[![CircleCI](https://circleci.com/gh/EthWorks/Waffle.svg?style=svg)](https://circleci.com/gh/EthWorks/Waffle)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\nExamples:\n```ts\nconst {MockProvider} = require('@ethereum-waffle/provider');\nconst {expect} = require('chai');\n\ndescribe('waffle tests', () => {\n  it('wallets have non-zero balance', () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/provider@3.0.0-beta.1","dist":{"shasum":"734091b09885c4a718d5da190cc0cb6d6605dadc","integrity":"sha512-I0UVWljUrtTLcgN7g2e0RXFvLN3mpggJGWBtS4eGI3uwhQPoDUp8z8mMKGth4xXuijQ2GBZwimLoSIMzmyI+SA==","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-3.0.0-beta.1.tgz","fileCount":28,"unpackedSize":18782,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJesbDdCRA9TVsSAnZWagAA93EP+wUPUb15l6eQIP3WKsKE\nCQQt/QScBsKpV8y2XeAKm7tHqR7c1goxmgDuE2h0E5UYePdY1Y4EKEC7D9VL\n9I35C9ovDdO9gWg2FTs6EJXu3xGoO1opLs6x5jUXNdd/KASzMr5RPFwpY1EY\n+/F6LIzXAtNMzgoP1ttdGsDxmFsF4E6OMJjqqbGy7xWl+0pv8zPVlMAfrvYn\nskw5xFnK4eZ3mkKdfisp4snS6pgBbkgUEB/4e39mYf4kn3sjxjPUkBL/9Pbd\n5M/lbjAHnpsEnU8/L0ashG8lgrk+0YL2/l+/q01pS5hMnZmXEmTdyJg2qzZ9\nPHXMM4xf38TK6uFsaMvF+UN0djO/GLmtkLs4ChNfFvhefM8ymeqEVVzCUc1r\nWbD7eJXxh870fYwH91/+mIN8KYhJy2aMHu98JAtmAbXYgzUVDGVW8BiiBwSx\nHC5VldWZtLha9AFMeLknk45E9WP+tIqo4WGTkk4L95m6NAzOll+LGRVkzIGE\nGhtPU1DpKpYwkXGNoiEW4oLX7wototEPXoCZ3D8xMjiiDAHrsAVNjLufe0UA\nHxdGxmRlLytrDv8z/Iha5D7qNSkXMPyzHdLZOnCPGPaem3PtyfdmQ3dF3l2i\nfUO3PJqvkHmzHwkBIYr/L1S+blcpkYIcKCo61izs9EXs/0wuKKp39VCC6kEM\nuWyT\r\n=Y8gN\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD0XRwv5OxxsWi5Rn0BsQ6OTUBFdnvYzZcKtkzC9Jb3fAIhAPLeh9t5ZvQNNW/l45VvkTPuw/ec6OJYCcV0qlhjzeFp"}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_3.0.0-beta.1_1588703453432_0.5904182107196747"},"_hasShrinkwrap":false},"2.5.1":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"2.5.1","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"ethers":"^4.0.45","ganache-core":"^2.10.2"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/chai":"^4.2.3","@types/chai-as-promised":"^7.1.2","@types/mocha":"^5.2.7","@typescript-eslint/eslint-plugin":"^2.30.0","@typescript-eslint/parser":"^2.30.0","chai":"^4.2.0","chai-as-promised":"^7.1.1","eslint":"^6.8.0","eslint-plugin-import":"^2.20.2","mocha":"^7.1.2","rimraf":"^3.0.0","ts-node":"^8.9.1","typescript":"^3.8.3"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/provider@2.5.1","dist":{"shasum":"fba3c120239c4928caae82db6b1bc4a4e294017a","integrity":"sha512-J2yAB7F8eLIPHghcEKjPHBD4Zuix5mM8V4c5JHO20FTrqElWJbZ8pkg/aoztPms2JEt9gEvadAFTcxhd9eYDnA==","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-2.5.1.tgz","fileCount":28,"unpackedSize":18777,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJexVBKCRA9TVsSAnZWagAA6B8QAJtEZuvRVeGrjrgOTGHm\nYJFdxq9sElr0/8lzYOqKbEH5rMwDzP4MuANtf/ptYAiBzYQlCCIKymXbVXIg\nd5cNRykJtKdfG6xO3mL7Om9g/Lc+Wk43GpdcQXCd1NxnSFSkwCjL+l9pJwDj\n4BYhf9AUrg4xq+Es7WLZyVtnQe7HZf4Xr6xk5AgQduYgQrgxwEbBSjOU4bBB\nS9qtaArp1/yAdYxJyolWLqtWgm8gf5SsgxxuOWpzaF4jssjezvTQkLCT9rXr\nOHBu0VY9h/aZUgCExrU122RtZi0lNf7vOeK3wmk+Khs0qhq1CfjiU6u6CUbp\nsfc+CjQ0pscVHPr/stNj7QlW7kYA8dYmF6d0XOSlPfElk05KvaApi2K6MvJ2\ndquJz40yG5TDBuSXstNrPwwowCzyjmaZPFldMQxUENLm+v/Al6ZAjnonDzlZ\n5NdKD/LposdA4bIFZH9BvwAAROZoMykgb8PIwFNJvCIMeFJQqRypgSNmix8H\n3wxF5gBOila81pR5KFJbviYKf/hCqOnZSLdaKfuuHWBTK2Yl9+YrGLJwqKJS\nvFVXYdsx0LglK1eevE3oyfd54w1u0po8GNm5/sSYqZIwDvVLnWS9+vanGff9\n4o/aASf7aI3+cWdrUmROXQT7n++UJFgPRtlnpVg7Q4R9BPlNL1clnWzUy2ly\nrj+r\r\n=mdkV\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDSgRDPDmhZekWHBtYh8qBFfIxlFnHjvPSbVLHglDWoXgIhANJOECtx9GwdrKjlBYfirWM2TKOZaK89zEdY4sKSbu8X"}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_2.5.1_1589989450456_0.17481335135092513"},"_hasShrinkwrap":false},"3.0.0-beta.2":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"3.0.0-beta.2","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"ethers":"^5.0.0-beta.184","ganache-core":"^2.10.2","@ethereum-waffle/ens":"^3.0.0-beta.2"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/chai":"^4.2.3","@types/chai-as-promised":"^7.1.2","@types/mocha":"^5.2.7","@typescript-eslint/eslint-plugin":"^2.30.0","@typescript-eslint/parser":"^2.30.0","chai":"^4.2.0","chai-as-promised":"^7.1.1","eslint":"^6.8.0","eslint-plugin-import":"^2.20.2","mocha":"^7.1.2","rimraf":"^3.0.0","ts-node":"^8.9.1","typescript":"^3.8.3"},"readmeFilename":"README.md","readme":"[![CircleCI](https://circleci.com/gh/EthWorks/Waffle.svg?style=svg)](https://circleci.com/gh/EthWorks/Waffle)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n###Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/provider@3.0.0-beta.2","dist":{"shasum":"76a12732477592dfe6f76b3098393e17ddc1bce2","integrity":"sha512-qN6u0sAGpzBBtjfNhM/qrVRTtE/04/PZlK1pgg+CmMNB7t05kTnKp6uSWC5JINoJ+hTEiuCvWi2NPhg0nS4hDA==","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-3.0.0-beta.2.tgz","fileCount":28,"unpackedSize":20372,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJezAyZCRA9TVsSAnZWagAAsMEQAKLnZkcYEFzZTBrKuTtu\nTW0t2MApWsjsu//1xYVWBR5UpmvHsNcuRfpjB3504fLIQJWgXI+SQ76wXczb\nhiJUjllN8SOf29jk2hVoGJA4ulsoPna4Im60Uvl3RWNDlTgoh5HWEz+FpcnV\nEIX6D4UC5eTGX3pKCgjN+gr48eW1o9jI0JI+3/qGUFIclEA2I6kRu9ZqEhTG\nefxHxhIqlD487hseKIYf/tD16fl0B+ENfGkTgIBsd7oV2LmlMHSrJvf4+rfX\nW3sCv/0VefEl/JoAg5ESAfEs0R7rxeJ7vjUhaGVeKP/P+wjdRmpc7SGcAWcC\nhMVHGFPhzlsPc0p5r/q12pHTcdjXb6ivWGM3AMosZxGhXS2FxOwEV4ewSj5g\nNFT6ss+P5j/DgbuLVePrXSTTY4HJ6vr+599cXsBMj13ilEP7PkIznlG78dG5\nkRMF3Ss+DdriFeeuV0+A509dznFZ2ONJqlckXZOAwJiP5TsvfJ9be0lGaOVP\n+AvQ/oeVG7fet59bzfv5UayDhHK96saWbSwku7htDe4dbrfCr5xetnmgztq+\nJChKhFl9RVRe93dguLTI6PFFLdJ+s8Kn8teUaGd9VuTeJ1SWcZ8xxORbtj2E\nihgZi8AH3tRCJGHvo3VlOxYBvo49I1bO1MHhKAU9J9XMPFr7wSz52Z/wCsEe\nhfYA\r\n=C8Wl\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCx6MY2eorw/rFijzwjc5/VbkGOuLrN0uJjIQ7c+Mn/UAIhALyve4yV5eh/7UZnhAuJ2d2rcY1ALMKwDgqvcuJ4Qcq8"}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_3.0.0-beta.2_1590430872714_0.09441919305495228"},"_hasShrinkwrap":false},"3.0.0-beta.3":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"3.0.0-beta.3","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"ethers":"^5.0.0-beta.184","ganache-core":"^2.10.2","@ethereum-waffle/ens":"^3.0.0-beta.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/chai":"^4.2.3","@types/chai-as-promised":"^7.1.2","@types/mocha":"^5.2.7","@typescript-eslint/eslint-plugin":"^2.30.0","@typescript-eslint/parser":"^2.30.0","chai":"^4.2.0","chai-as-promised":"^7.1.1","eslint":"^6.8.0","eslint-plugin-import":"^2.20.2","mocha":"^7.1.2","rimraf":"^3.0.0","ts-node":"^8.9.1","typescript":"^3.8.3"},"readmeFilename":"README.md","readme":"[![CircleCI](https://circleci.com/gh/EthWorks/Waffle.svg?style=svg)](https://circleci.com/gh/EthWorks/Waffle)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n###Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/provider@3.0.0-beta.3","dist":{"shasum":"36c6e5d7bf09a7124367306dfa3e631da5105239","integrity":"sha512-5/Ef/AG9uaIiuatWzt7HBdm4HtBdQG65w0BhLg+9rJXWRFGRJW92I9d8V3wpWmwxul6o81HtwPC31uFHpdwXGg==","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-3.0.0-beta.3.tgz","fileCount":22,"unpackedSize":17007,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe4260CRA9TVsSAnZWagAAGEIQAJDMOUiEjqSX5SomP41a\ni7R60AOUUdPG9Cdxr6XIYKDkwJOgbqNUYn3k6wNqb/sYPntODwOKmEoX325Z\nivpnZSX25kynaVprscYMuB5Bpkrm+uklw+y8qEOWqHcKjtvdr0/JtvrfOlW7\nJXP/XngQRXw63zGo29dOLmUZwmsrmJKGzk6tb0PHccz7UVlyeWX9d92xPXIg\negRYQIvyYwH9gzK2uuG5YnwXyspJvMvRTIu/CCvZ3l7I/JjvGCtrmzJEu9G4\n7Kso6B/Eye0sbbrDKLSxl3XJSwIyQar1MbHAaB8CG5KsAHuz0MSFo09aHBin\nDF3cTJVLZPsNRAft4nqeGWxE4DqoERvvlQL9KKLokpVYhZYS+MZHAOYbeugI\nN0mp/DhgGwpCyQxksfZFeo0RvNNUsiPgBc0iCKO53IlYDP0+vB1WAhHtO6M8\nGvPLjYZTkEIRJ/oQ8CmA+jtE3tRAuHUqdIpuzIp4fr3IhTRS5iNfgq1Zmrf2\nauyMKhldePSs+L3s5Mc63rH707iZPCFALCy25ZiQbKaTkHYFkMx/fsUb0lvr\nh2yuoeINbii8Nt8gZ5qXxD3y4NzGXSE9iXqwDjjQ+kr/+ZPEoGLPi4rH0Iap\nVZS6nauzY/PuNB4oEXnKJkCLOGKFW9BMn3FRikYSfb0BZRXWNvTujgLO09sQ\n9RyI\r\n=zN2P\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGomeiGCBgjt8MJbBMD7/JQ24CVR+hh6J4M2vj1R6f2DAiB3GmhtNTDFPRI77E+OJVk9TdHAIGZ+I19S+JNr2DS1gw=="}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_3.0.0-beta.3_1591963315442_0.3761275247539093"},"_hasShrinkwrap":false},"3.0.0":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"3.0.0","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"ethers":"^5.0.1","ganache-core":"^2.10.2","@ethereum-waffle/ens":"^3.0.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/chai":"^4.2.3","@types/chai-as-promised":"^7.1.2","@types/mocha":"^5.2.7","@typescript-eslint/eslint-plugin":"^2.30.0","@typescript-eslint/parser":"^2.30.0","chai":"^4.2.0","chai-as-promised":"^7.1.1","eslint":"^6.8.0","eslint-plugin-import":"^2.20.2","mocha":"^7.1.2","rimraf":"^3.0.0","ts-node":"^8.9.1","typescript":"^3.8.3"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/provider@3.0.0","dist":{"shasum":"cca3c3d2a5cca43c90d8c988dc74618dd5cff306","integrity":"sha512-aCxjI9zNA4Iu7pubvH6W9bSJe7mv+SpqO+ggX+41HgbY2GBEVU44+0KEgVgBhQednmlDO9l7WBnXZFB1TO3pqA==","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-3.0.0.tgz","fileCount":22,"unpackedSize":16984,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe5GjFCRA9TVsSAnZWagAAyUoP/19AQRhgQOaL5tfHB332\n28fw+c7HPMN6PMrXSwThMhkEcJK3s904O1wTQA/PPeLrk4JRrA+9Q2DenhEo\nZuptiaVq7CNG3ChZ/oeJYP8c2XOW1IqtP6YLW28tJaNEVAemRTkfRTquoPkK\n7mNvhV7BF8PN37UCXTuwam4/dPw3iFBXfdCDXCwz5QIBKQas6AFRCrj3zS+F\nuX6rgqOW1jtZ3/5x+vw3OieL+y80hsKEuGo7zAY2bSB2FzXL3mZTAZupqIOP\n4/kN04Q0jyeR/myNyjieqC3gQ6Fer99b3ooRbcsKv8bC1V/JdMT0Xc+il9aM\novSCBjwh124vza6CLFjwMtMDGadLMQ6BqhEzWOXjbwGREZdIcF81htQ7CPiS\nMY4brTwQLbRbX4V6d5hkt0X/47PORpzRfPPpzxNCpJDcGndsuJ5maZHkg0DY\nDida6oyVjcpWAmrhOzypifWJ1QaP352JHHMcCISyKmozl2X60jDjQMUPaTBq\n6Vk0XWgiqGdcdHkdRKsb5kCYJXg5YzD5GFbAADwIRyQH5rVRxWZjqNHeruEC\nV4schxMGWOzumbcTuoF8rZvGBkj8IpFdG3IB5Xz1fatvpomOB61vovnzpJOk\nV0ZRn/uh7hFOawUm6XDyjCoeBsRisJtsSC586yzFAtR2RhfT6KE9eYw71e3f\nmSdP\r\n=Spse\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDtD/clz+twK9i2V0fHhNz0Gf4YhocLWlJQ5foQ7iwfYQIgK1t1gnF5N6OhENFoYdK2axOa2rRafrPIU8eyU1eL5ng="}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_3.0.0_1592027332963_0.42689270270965585"},"_hasShrinkwrap":false},"3.0.1":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"3.0.1","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"ethers":"^5.0.1","ganache-core":"^2.10.2","@ethereum-waffle/ens":"^3.0.1"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/chai":"^4.2.3","@types/chai-as-promised":"^7.1.2","@types/mocha":"^5.2.7","@typescript-eslint/eslint-plugin":"^2.30.0","@typescript-eslint/parser":"^2.30.0","chai":"^4.2.0","chai-as-promised":"^7.1.1","eslint":"^6.8.0","eslint-plugin-import":"^2.20.2","mocha":"^7.1.2","rimraf":"^3.0.0","ts-node":"^8.9.1","typescript":"^3.8.3"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/provider@3.0.1","dist":{"shasum":"2e89e198433beb75d0a0d7fd45bab6af8125dd64","integrity":"sha512-IoMFWgglaEmo2LC1/J2JM+uUGhF1YFIr2B+QksL36y1wa+UtpDPvCpnUNTSuVKS6J9t8uz/FhQdROzBdRX/aPg==","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-3.0.1.tgz","fileCount":22,"unpackedSize":16984,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfAaoYCRA9TVsSAnZWagAAHlIP/AhaVnI9vUeHk2JqkKPO\nw/J7dBu4zGai3d6cbA3nGruxNyPzQj0hOJVoziSnU4LutBGjEPsPGYS+qG6E\nhag5FsMWHVdfVlZJ9LhsCA735P9FuD9NRkHLPIxe9mifYjqpOwaP9FRD7i7F\nFV0PLbCyNBQ5ocywGnW9biiEbnQbhiPWZlNoHuZIM1tc4NZ2fd2ElxoOxj2f\nL4kj/qU3rupflsezsc1+WkNEc6N7fm2Uc5RQCMNdwl58RSRVGrnWdimny+73\nOuHG4Z3VoUN4vKhRKMwc2cUTXhXLCc4lBCuwAdta+0UchNJ2UMNcX10rB7aP\nuZ1rU223o4nIo3jOg34GpRenf85ZMGhgSV5WcSd6uwuhGuhq57j//n7zEuAb\n3fJTgT1t0bNS+3t6Eq4wBRRP95vnwxjVr8rrBKStqJT742uedcXwT+aNjmm6\nOAxCgWT6BFgyx5qGaCtqosWYZ9l+XhmXnOOm7WFNyzkMnB3YkRh5eG8ei6o7\nuxgSNtEaVNUuzeAJ2kkG9w4PbFdhbWSpVECspjLoEpiBKOS+DkZVoXPBWo08\nzAfFweBeDctMl0xyNRD4fLV6GN/3heshJxHzDMzTT2EhEUNbPaAVWvqKTBEX\nu7rAu8v27CCBbtWIE2EeWoLcdeBUZXFbJtdTk2ascCC+IhFzcuiLzbWfGiJ3\nspp8\r\n=ufKX\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDu4rktzRUEOMnN8xeBNArxE1yfc8HTM30ScKfeRkAXkAiByP7dKP8U/8jkXE/xQuxtjbi5LVLMVgHBH8kCsgKV1Lg=="}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_3.0.1_1593944600383_0.19189359250854943"},"_hasShrinkwrap":false},"3.0.2":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"3.0.2","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"ethers":"^5.0.1","ganache-core":"^2.10.2","@ethereum-waffle/ens":"^3.0.2"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/chai":"^4.2.3","@types/chai-as-promised":"^7.1.2","@types/mocha":"^5.2.7","@typescript-eslint/eslint-plugin":"^2.30.0","@typescript-eslint/parser":"^2.30.0","chai":"^4.2.0","chai-as-promised":"^7.1.1","eslint":"^6.8.0","eslint-plugin-import":"^2.20.2","mocha":"^7.1.2","rimraf":"^3.0.0","ts-node":"^8.9.1","typescript":"^3.8.3"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/provider@3.0.2","dist":{"shasum":"2416237ca97c1f7d8dfca990fe85c9f27d921f4d","integrity":"sha512-jIbaW4mSBZmzIRUxBSuutwucdxXWOp5e3m16ds6PRnMBNd8civ9LwPM6RqwxC8pNTq/APMf6bFqLJo4UVW3PIg==","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-3.0.2.tgz","fileCount":22,"unpackedSize":16984,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfCYGzCRA9TVsSAnZWagAA4dcP+wfVJYodV+3h9QwGFEZT\nhvJnCbuXi7dnHXUr4TZn6fj4G0dRiUuJXDqbLovtDk/7fVzMFXRzERsDW1+H\nUerq9B+NRRTC6lfEFyxHc4OosFTXasOGOU7qsLWUNt5bKa3w8x0t5CKAyHBZ\nnvUn96Og4O7XqJLWhdNOF31vWSz+SRp4u8wDo7l4dHhvDZ5QDC4Ie9KbJn0M\n+yjg6WUhtqqd7n103AWw7nHluzOdnx1OpX8pCb4UnPkqt+YubC6YOIxyCUOb\nKjNcEMnKM8tikic88t/YH4rZi2GvzO+m+n3fpNPiWOGTtEm8cowRO6AAzqZQ\ng+6IMhrW5UqDO7BVID4g72+zSAKfk/chjTVFatlAWJM4vFxfn6nL21DG4OeE\n15W5koxA3TQXllYy4HJslqpWHp5tZKJFXZI/n2nENbjUPr6fI/v4dB12ACJW\np6RvSqdgiJtc0hLWT33omg8tikuehDJ5pUVukLtpvDnKVd51UAbmRFXvFQdd\nDHA+upN/7V4R1wK9+DvU5Z0tDx0ZvzxczhGl1F2/gWkYBEZshTKsE2GpoU/F\nFvVaL6VXhOCAJJJRshXQsimMZXr5v7oF9RGn2B2tRMy9UzGt87CW/X9otYj3\nEKwUI6q9A2dUmFw4qv7WiHqb5FmJvMdSAjnpHyUXnn7gUR1POCjz/L7xHc2e\nqi2E\r\n=ce4t\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICziKaD+IoN2ZJf4A/hajML0Qb4JLJ0X5cS61BpPPC+mAiANjifMBjkc2mONAqRLZj/FbfPwVGg8xf3C1imEe7NXDQ=="}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_3.0.2_1594458546989_0.4527285019304985"},"_hasShrinkwrap":false},"3.0.3":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"3.0.3","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"^3.0.3","ethers":"^5.0.1","ganache-core":"^2.10.2","patch-package":"^6.2.2","postinstall-postinstall":"^2.1.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/chai":"^4.2.3","@types/chai-as-promised":"^7.1.2","@types/mocha":"^5.2.7","@typescript-eslint/eslint-plugin":"^2.30.0","@typescript-eslint/parser":"^2.30.0","chai":"^4.2.0","chai-as-promised":"^7.1.1","eslint":"^6.8.0","eslint-plugin-import":"^2.20.2","mocha":"^7.1.2","rimraf":"^3.0.0","ts-node":"^8.9.1","typescript":"^3.8.3"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/provider@3.0.3","dist":{"shasum":"358915f3a79362bfa8680a9106c755af10969d37","integrity":"sha512-ZAoWoaM65TSaCPG6sJWfDnVll5bEw9DqJ2LBvJyW+jpH4GpMiyeftV+C5EtkNISAxIy2gyU8QLrvU6Z7nYq6eA==","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-3.0.3.tgz","fileCount":22,"unpackedSize":17056,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfTRvICRA9TVsSAnZWagAAo00P/1Cq11m101Dnz19ua/Hs\nRGQ2szPTtisf8w4YiYcAFqDbn6cZJiyL4b+puVZV5M9HJ8jElx1YW8qa9p8J\nP82hNnvkPKIuTsVueSgvUDUcjdUT/kNJ7EE3kJuQ7hJvkTgqgUS7540SPTIl\nRk2g9oU4WALtSAf7QNP5T310xZCPCRRNHkkw7yc6tAR7Kxjq3U/wTErQKHpw\nPgcvlPZgHmdafBuIoBbvN1WKXXFFaQnBK052thI2ltl5pyRhLAzGpU7urMIr\ndqSaLWyogr2r9FB4GsW4bCfrB/OJEHAYChF6kAJmfKF28fUhmrD3oQtxhhBA\nkqeJQtt+ewC2K7sfs92RnaUZU6SDZctDtcYOxNWroQoOn/PCer4MHGQdc5RJ\nSy5owT0n7Tl6tdBXf63y5+rK60adii4hi67/S2I+UUxbmuVsNRVNG7XdZaRp\ncSOBU9Gz1zJvd9eLtP8nYoNXLJzFd4lfwk4UrovZzBl1t1ewlrorJo5uuVdG\n4iTBqkcrY+2qVA4GM0DN0+LE2ZShVRX+yhZgRYc1Cqo27j9ZfxjV0Ft5YN5t\nHXmcCWrbQ2XwKO6e39/PzmRrLDlQE9b4LeNDlD0TiDjd72EeCiNkMVtrGiLZ\nghLf7NeUeANKioEW3VqLZzkAKZqJEHfZBBExpo8fRLjP6f8jboz2hijzszAU\nZLc5\r\n=1iGM\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHsK2xAPXOJN149TqG42T4XRJCQ03F6DOzm8JmGoZtvyAiEArE8b7IrBJuC0eOyfAN7xQsWcapdcRdoYsoTvQQwVRoo="}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_3.0.3_1598888904012_0.3291363118164694"},"_hasShrinkwrap":false},"3.1.0":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"3.1.0","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"^3.1.0","ethers":"^5.0.1","ganache-core":"^2.10.2","patch-package":"^6.2.2","postinstall-postinstall":"^2.1.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/chai":"^4.2.3","@types/chai-as-promised":"^7.1.2","@types/mocha":"^5.2.7","@typescript-eslint/eslint-plugin":"^2.30.0","@typescript-eslint/parser":"^2.30.0","chai":"^4.2.0","chai-as-promised":"^7.1.1","eslint":"^6.8.0","eslint-plugin-import":"^2.20.2","mocha":"^7.1.2","rimraf":"^3.0.0","ts-node":"^8.9.1","typescript":"^3.8.3"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/provider@3.1.0","dist":{"shasum":"f8f668501db163b99d6c653083faa07eb28b5324","integrity":"sha512-MPlmtYWVEjObSrneZQKHprRe00Da768IdT1+hyWq5x6uXluYdqo5hZc9LVNTd2f9WfHasZ8YWZLUC/wsEb86ig==","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-3.1.0.tgz","fileCount":22,"unpackedSize":17052,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfT1UlCRA9TVsSAnZWagAADRkQAIHjfqNym8yHTJw1wORv\n2cm3qWjN+EqzGxcD0877PT7VE2SjqEujUXMxD1VR1mhY7PDllRB7HvP92xSM\npaaANwXpKsY+0jdOc9DvXAvmxNuc87H7xzrAWxDH9xV2SSqjlNUpqj4A/tTd\nTSvNt1BQrOC8J2We7W2/nEsb9NpgQTTkfiX9+ZKLuq0nvI0kV1Jois6xNivY\nVUH23cd+B6sUtFTT+8IYrwA4DWe/SVUXmahiwBIdgc97OE6kHY/xdBwMXObQ\nKm7ezOo5pC5MFEQJzLsXxKSANeg1NPzXS1OXLIvN/Lnns6SPbBhraOesrVs5\nAQobJJWVVa72siT0goO8jeEw2JMvoTcD0eGwwvms7IuAZLRIXo13E7RInbfl\nWzuualFKRMBcetLblAWm/ZohrTGo1oBK4E8l3Is9hrENIT8SxlnV/9+3+5E/\ng0zLUhBGui9A9vt9wTG2RlKEA05NHmVThsYUZjIPMA0RBrQ3cXgdcwgAx2Vp\nozVjPL23c31chRHofdnW/6tjHpB4M31lfbOXsK3PPVo3Jkx1VVYlW3q0vlw+\nIVIsv/MCBsYOdJGMpu6Zglp6mdy+Gaorl35wpi84pwFX2WWKWnJwkP91a10H\nk6+VogXz8Zjyrht19XFLefeBrR9bPTey76nascDpZ1lNGuYdEiixZ4UH7EAB\nhw4X\r\n=JRHl\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAJCGWC+uH+77GFdTWtcLDpj21gTWTgFHuZkgTl5OTq6AiB4ymuLF3PWch2i/TsJLdwvHOdpJfwmqxmWZTcpZAPJdQ=="}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_3.1.0_1599034660618_0.8781076331096982"},"_hasShrinkwrap":false},"3.1.1":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"3.1.1","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"^3.1.1","ethers":"^5.0.1","ganache-core":"^2.10.2","patch-package":"^6.2.2","postinstall-postinstall":"^2.1.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/chai":"^4.2.3","@types/chai-as-promised":"^7.1.2","@types/mocha":"^5.2.7","@typescript-eslint/eslint-plugin":"^2.30.0","@typescript-eslint/parser":"^2.30.0","chai":"^4.2.0","chai-as-promised":"^7.1.1","eslint":"^6.8.0","eslint-plugin-import":"^2.20.2","mocha":"^7.1.2","rimraf":"^3.0.0","ts-node":"^8.9.1","typescript":"^3.8.3"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/provider@3.1.1","dist":{"shasum":"74ac4f64a83f8d975d7e9e09f5b5f1ce8c794d19","integrity":"sha512-2gwa7+OKSuJBvKR4Y/ljhvmQd2J31NY0n5ygLrykMrk/HMEGhzBKFu94O+cndnYRhHrB4Rl8sWcFH/0H2Qqx+Q==","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-3.1.1.tgz","fileCount":22,"unpackedSize":17052,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfbzLZCRA9TVsSAnZWagAAnhcQAIuSTgEvS0p1B9NSuMzW\nbzXe7pGTx0A/eJOklRXGyRhA5BKXBgO7YRWoeAdf7oUgC1gQ6aer36FAy1Os\nSq+GxSPCdf56KrtVzPUw+OKC4YNMz1bBBDJ/8v3yV7TFs4MZkG8lmAf6gXPC\nUsi1EpMO0Z4kzMUP5ZLzMDYUDD012zf1H+zUZ0CCo8/aqmXAzQGI2aMuA/nD\naFBlBxeNseth8n9RV4o/n7BUZ00Y0Heb96RZ2NcSMJKrRo7x4wPehEczOG/I\ntH/CHUZTM9/710zOPb5HQY49eAFYAdXqEQxS+GDYnnUhz8fPiCZYxVsaVbLg\nspDBMB2C1sJEQ8jcx62ZYz8w6e99+qh1/mY/r9xjQdQ66ZDJofqSPpZFwymd\nXO09cs72fKhXCwwq9yiqlPZDSzxbXkTthjayW2EbnQXfyX4sjC7CD3dnhlTs\n3QWaywIW46AnOp+NG5a8yqezgJSEvRFRnrkikB6ywzcsRNbEuvoN4zqxun5w\nYlCUOMoX5v67tmzTCjLEg67GjeNEbbzmI/Ph6Ee9p11w9K9HKMK2hChRtWYE\nChubvo/VrZ/P2/CNCVTuulkPP7dil4sxfz01kg+bCVNmhdHJlJA+61HWl+89\nMkS0n46gyY9k1kHpyjopb09BiKPJKIARgsTCuS+zOeDwhnfZMtu0HYjbDEmp\nBmQO\r\n=zChD\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC8Ah0CgQMbv4E9eRssMwl0rVA+ECFhYXpkc46iTMc8mQIgQafAM+Nzay6Xff/1qjlh3Fwql0RpWHWWECqdcet43dA="}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_3.1.1_1601123033123_0.13361227573708856"},"_hasShrinkwrap":false},"3.1.2":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"3.1.2","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"^3.1.2","ethers":"^5.0.1","ganache-core":"^2.10.2","patch-package":"^6.2.2","postinstall-postinstall":"^2.1.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/chai":"^4.2.3","@types/chai-as-promised":"^7.1.2","@types/mocha":"^5.2.7","@typescript-eslint/eslint-plugin":"^2.30.0","@typescript-eslint/parser":"^2.30.0","chai":"^4.2.0","chai-as-promised":"^7.1.1","eslint":"^6.8.0","eslint-plugin-import":"^2.20.2","mocha":"^7.1.2","rimraf":"^3.0.0","ts-node":"^8.9.1","typescript":"^3.8.3"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/provider@3.1.2","dist":{"shasum":"8ff1d98b3725c9abbdd1b13d47784eccf57ae1e5","integrity":"sha512-RQTt87qmPJOFqF3QP1ASSt/kGUB2WJKfEwFMuAMP9ZQ2icRXtyLXseU4dKNAU0gc/BckqrXk5r1xzirwJp+ANg==","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-3.1.2.tgz","fileCount":22,"unpackedSize":17052,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfktNWCRA9TVsSAnZWagAAt28P/At4+itnRIu9TW7BWIBN\nag3awmAzW8uus6pmdu7FX7yo1uowtIlrxunkw6gdJIQnGBA6EtJJ0HyDubrP\nmfoqrH0d/E4pOvjNP8aKk/23Qf6yHEPMLQPzd940AGDyC1nbZUbCR2G6+5Dg\njZED0DpPNF/I38TvhKxxLJYaWhFjfI2Uz31zsBFakTpIXJk1dborYnYJ79rS\nuW2q5Y7uJJG4de4F8Pu3YEHCHU6/qBESSgFkD0GP/3PvbZ/YmtF7KPYXeIZj\nTp3KcTUojctw/W1VlUKqJlXLnesO3K4BdZpkI+uJq3tATaqtM7l3u+52zoY6\nGGU1utKrm3AGJMHBSFNZz79rrF6sel6d+6lNLytIPjRFmoRPmgtiHRJOwwMg\npNtsntbxpUuF5CIQzdb0WkhU5aSqJN8oGMC/BacjFa5rv5hglHFJLRTczQBU\nNO6YK8F3+UibvDfqVKd7U43kpTVxDh27C8K9qIVV8Upe0YM1dkzGaKRt9LrS\nmSeGCNbS7qjciEzwZX42CciB23O6WyVxRCh7mSn2OsEVM8Od7mETmY3WFAgq\n9I/qR1UPP6lOGofGjvI9T4lXDQpN6Cy8sDq6KexpMs+6wppS83RjvMVUoYsa\nkVRmG24hQvCddRDrbpQUBVogol2UXXHLbma5gRuSJllvRA33HU/BhUT3OTsO\nVoNC\r\n=T+wA\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDMRbpr+InN+oIUU3A1SNlVPNHqeNlzFqETdp1ozk16cgIhAMvxrPhtL0fDG5nU+GRlpE6YTjpHx4I8y12GcbPnfNJP"}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_3.1.2_1603457878369_0.939606041353773"},"_hasShrinkwrap":false},"3.2.0":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"3.2.0","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"^3.2.0","ethers":"^5.0.1","ganache-core":"^2.10.2","patch-package":"^6.2.2","postinstall-postinstall":"^2.1.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/chai":"^4.2.3","@types/chai-as-promised":"^7.1.2","@types/mocha":"^5.2.7","@typescript-eslint/eslint-plugin":"^2.30.0","@typescript-eslint/parser":"^2.30.0","chai":"^4.2.0","chai-as-promised":"^7.1.1","eslint":"^6.8.0","eslint-plugin-import":"^2.20.2","mocha":"^7.1.2","rimraf":"^3.0.0","ts-node":"^8.9.1","typescript":"^3.8.3"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/provider@3.2.0","dist":{"shasum":"501d4bbf04ffc01dced0107dcc9e20f24354387f","integrity":"sha512-U9KyjMKIZuK4gi2kzWIJkAXYjtg0aIlEQ0F4yKqHMRyqAiSM6M4VJgn6tHisxe3Ev9z/jSnutKT8dyAEwlIYdw==","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-3.2.0.tgz","fileCount":22,"unpackedSize":17052,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfnQ/vCRA9TVsSAnZWagAAKHMP/A8RVi5pQRRalFNGCEeD\nwmuq9WOe7VAoD9K4Z0IEvsPpHUU1JrXO19O94DTIv1xsORAqWOIxsUaataX/\nOD5RbA7vc7MGJ90tbmny9BeHte+zoqthbHF+zOcCo051JAm+p0BsKkNMwQqG\nS3JrVodPxEsDRzVE9ObRhXgikfWzCYrTRbqn6l35RAySKOaOX2s2uTgrV3rN\nX3NchWyTJYRfbwosp1ldTps8Yvh2EqCXSig34YWURjOFkOi/ioO4UBmCOj26\n74R9UDK1ooipK+WmIBor6YC3ZO3K4ypeOUav3L03Qc06o88O6g9Bg08UwoTB\nlGJrtTS8I/B5hh/teVJisaRNMSGKZn0Go5vRXXwZiR2YqHrIQaqxb2j078iA\nC6ZLxsxbT7KOAR0J6NUOoiN2vSrDrCKwJPTEmcNdPmIk6uHHlPj+joKmmcCW\nnx6apVaMPwAGo3y94t7oR0225QMHBePdaj3pkyyO/j0bKUpAMwHw+gA7A+Ps\nQiETe5JoHHxonJLgKrI4F5D8aU8b0EuMkIMFLyPyYovyOUMBksvkRpvWaI8Q\n0mj6WwwIZqNcVv9ajVU7hrgpdd2ObG7fT0Yp80WsimtP1OFQdslhCorNc5XV\nC/1jbYqPQH257y+mxSh5Hxy3SU+AqaD9lk+ly0xaPCR9HSC0vlPs3P/DNt9R\nsD6A\r\n=K9b+\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDNZk1oU+ZILY9c9ICKo82AToBzBGccfzaka8WlalBrJAIhAOIH1L2Th/v3SkqExdRnxak7zA0R9iQ0BZJqiZwPAMDc"}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_3.2.0_1604128750841_0.07383504692548315"},"_hasShrinkwrap":false},"3.2.1":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"3.2.1","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"^3.2.1","ethers":"^5.0.1","ganache-core":"^2.10.2","patch-package":"^6.2.2","postinstall-postinstall":"^2.1.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/chai":"^4.2.3","@types/chai-as-promised":"^7.1.2","@types/mocha":"^5.2.7","@typescript-eslint/eslint-plugin":"^2.30.0","@typescript-eslint/parser":"^2.30.0","chai":"^4.2.0","chai-as-promised":"^7.1.1","eslint":"^6.8.0","eslint-plugin-import":"^2.20.2","mocha":"^7.1.2","rimraf":"^3.0.0","ts-node":"^8.9.1","typescript":"^3.8.3"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/provider@3.2.1","dist":{"shasum":"d84c0603936f09afa69ecb671d56f527e9818e71","integrity":"sha512-doG18hThqldsYcZIIO0YoiwV+ERx0dCVY6bkg4FKZtoymNelf15zNycb881c6QD9RnLuz6A2Jp9lmnrAD+IvYQ==","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-3.2.1.tgz","fileCount":22,"unpackedSize":17052,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfvSu+CRA9TVsSAnZWagAAut4P/0fghDkFCyJQihb8uxgM\nUOoV8OnBPlUT+8U/wNGnd/bPVIibTgiAiZS0SVgzaX/c8BRCC1NbtZM5iNRi\nna+gd3BC9fTE1M0QFZEy0zJD/5fV50rHqzru2crl0K/XzOTYvdgMK5dzSjE6\nb5kJ5/J3CsUeXzsIY14um9D3+2bmpRhCi1ajzRahbXHgGheEdHqlE01uPs8z\nvcFd8yCc3iq4XGGBMoSgICOqlDR+9Mdw+oIscNARxyu0GAn8R+7SN6pKKR/y\nZrP/UiTyiInU62zgKXEwxxu6u00VLgZQTn5ir+JJTYDa2iRS3+Jb2cWATbq0\n6ShXaxjLTfax0uJLT/nXeJ3mTfhP2/czGLkaYdox4tIWzDZ1LOQMCv92RQag\n/YBrC6EpniR5pMJWThkE38dXVwzZMjtG6pje3wnzyucTn+ROOb9mtkASvtHm\nyg2xsD/rY1oqe9WOl+ugO+XKKSAIqMEhM2vvuX7/+DQGYwDN+MebiFw+IZTW\nJIfE+9AdOvyQInjw/jF88kltlpAYAcdq1xrwHyux73AS0KqVwBYSxUveq00T\nis1EY5YDR2hY18o/oJQoB5SV3fyqGQ4zgopoUmZ9K9JLPAV96fJ4MpRPNjr7\ny9/D1rKRBX776vsBQQbJb34BNyNRgzSywCs45XHwP5rdF/ZU9vqhpNXMP5iG\nfTVg\r\n=xo98\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAoeoj3MjteG056xv9gYu8vAAMjuI3WPQEu/B8iUU4QnAiEAsdA/GyEskOa80wvb2Cmee6lBMOW3CgiUakW1l0bcmWY="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_3.2.1_1606233021934_0.191854533835504"},"_hasShrinkwrap":false},"3.2.2":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"3.2.2","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"^3.2.2","ethers":"^5.0.1","ganache-core":"^2.10.2","patch-package":"^6.2.2","postinstall-postinstall":"^2.1.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/provider@3.2.2","dist":{"shasum":"6ab422015641f340ba71739d6ab85896277281e5","integrity":"sha512-2UCNHsgr1fiI6JA7kmpSqt9AdOajGRK4Wyh24DeoAkCcZuaOdUY80fEmkSzhq8w3jIIvWRUQajBJPieEKw5NIw==","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-3.2.2.tgz","fileCount":23,"unpackedSize":17364,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgDFs4CRA9TVsSAnZWagAAWaIQAJMULLM3IoKYC5JKUZSW\nYRTEqNECJ0CXeIsXZudr1mn1xPCHJuj+Gg/OaHnz8/QDOu3UD2gWt5GMydIr\nYpMZ5e/mPyJZO5qUv5zNb7mX8SLq0GAnbGNphNKa2111I2P+MTL6xz+ikn4x\nbK6a2FTbxFkGvv363SIpRAZnf28cWtbbCZ3Y+2yxXS4I6h5corZil+eR6Eh+\nlYymbNQ4UdN1521fJZQIfGY9rPj/jNgHtKK3kCGDdHrluDTE3GjN5YiAVwjX\nfFuZiE0e9vDSfbwWPFkWwxUR7ITRoR9BfePbqznYSzLSjzdjXn92ZxvpF7QV\nnrIj7PQupNleTs1skHW5+QSC7a0iJJcuxKeGuG7x1xKxqFZ+12OuVhcuachA\nV/bTpKeV10LJbAlBtrwdTZk4cGV9glawLuHKWZCLIAeq08T1gv06vfv5Ty19\nnufv90D4ZC2yX/nYhxcwuNZ2mElf0ir8NtIrOTzoGKICPe/nqR7rW4ao6fKd\nomHTUTEZZPI8zO8oth8k6jwFVFW/O6t6Z84xtsDSlditZaojr/+S3hmOkOZ0\nGyWpZ9RwsDkle/O/FcpXagSMwj+2QgPMP560LKLmJCzuCuN8RO28QIsi/BWZ\n8U/Bcvl+DHd98z+YKDa5B3pswR6uL+9ONfzMlXmRFqJ9l5JsME5WuC8G2E7p\nmh16\r\n=QH1T\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDktwpvk5ZKQv0mGO8PC32SNe/5FggzlPdOyfoN5MgbswIhAM+EHQ4ERPO0ugK9K4WbFjJ6gnBhpZwojSbMKulzceuS"}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_3.2.2_1611422520010_0.8491468901762289"},"_hasShrinkwrap":false},"3.3.0":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"3.3.0","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"^3.2.2","ethers":"^5.0.1","ganache-core":"^2.10.2","patch-package":"^6.2.2","postinstall-postinstall":"^2.1.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{},"_id":"@ethereum-waffle/provider@3.3.0","_nodeVersion":"12.18.4","_npmVersion":"6.14.6","_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"dist":{"integrity":"sha512-JcHGwDz8ciqwDXcZXLzOif8AY2n4fUG5ju0ZQCGRkYiRHHTrbqzwWAtFsEHetWAxCi3VGlSgeN833DGulnQaZg==","shasum":"3cacdb597ab04127c4c0b8a5b13e95ea33e932ab","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-3.3.0.tgz","fileCount":20,"unpackedSize":17693,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgOpbRCRA9TVsSAnZWagAA7EAQAJ5gsoXMw1PJFOX4piCI\n+eD79Lb89tlpIz0iE/lKcqjbGyyLccLuWE0PeySowiLG7I8ZkI/IUJqs9jI7\n6VyiDlQXqVv+tvOmnGiF7m3hjCzXYveJVSlfDClmI/RA99mdR9yvEmD2HQpq\n4bm/dHTbjGWZ6ouboO71r7Csuc8IpK8a0V1PcbQvIlY8O+5NmvPCKjSfLBm6\nJOja/6Uh3CoSlbMS/UYGpvCM41LQJ2WSKqdKBn5kHM8gT0FjJFfMbc8xxRrU\niENlDukaBxuWRXKP45tJRNYlj3DHRnfTb0YWXYR1iAFkqulMCL/le6n1/QlY\n3JGR0NQIwyVXJN/U9RoKeLuwizbs7pmiLLrs83i/9XIelDJUHUr9RfVFvmpK\nyo/BqBNEoCN6gnT+92W/IVnDhL5ikp0HoWmAwrKTHhNEYQBAbTPLWSolnRY2\nB0XEiMH6T4M/CjWJ83vHZJ85sFZoUJbyQGGVnuqyaBD92gBcwBtDK3jePAt6\nnYSDbKgQnR5S30GIWXH9PnEqHFwRX22Y9ZeAhZOiKzjnWElAiB/q6DB5hHFN\njbgXDjxmlgcVB9px55DrJJ67Ee/26V7XaJxEaiHMikr3qaW3rhEKiVQQerIn\nriS50bAbuHjZtOl1gdx48GxqyiX+mMjQ4v1RVl6FXYin1CZMAKEN3FpVnTFd\nfWiU\r\n=i5an\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICrBof1WJ87C8CvOXCUWuDtBqy2pN0A6X3H6C6DllLn5AiEAjILuY9sd4TyM8XVK9ZWT+6GgM85Pwz++Ai0BOUHPcQM="}]},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_3.3.0_1614452432742_0.47697048721892266"},"_hasShrinkwrap":false},"3.3.1":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"3.3.1","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"^3.2.2","ethers":"^5.0.1","ganache-core":"^2.10.2","patch-package":"^6.2.2","postinstall-postinstall":"^2.1.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{},"_id":"@ethereum-waffle/provider@3.3.1","_nodeVersion":"12.21.0","_npmVersion":"6.14.11","dist":{"integrity":"sha512-I7iziCqvkVhfaYKRRjUoEK3JHne5PffLd8dokI9RvDighKn/OA4P8mMb400EGmuDG5NTVTM5hdnTa2jIYwrhyA==","shasum":"62e13fc45ce918a3992b18e17279e32ed22a01da","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-3.3.1.tgz","fileCount":20,"unpackedSize":17655,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgVaraCRA9TVsSAnZWagAA6usP/A25pxDkR9Rpkcvxjh2k\nShfefQy59/nCPqyWE3bT8Yi1fyRgLUaoxxUv1403ywTcp0lgvURQftzRU7Eo\nligz+kHOKw86eGWaBB9m4nAt1pg2Az14frbS8vawHzomc7uYXO2QcuP7PVf8\njqn2QV05DalJ3D2B/eG0hmWu/Fp5Q//biRabaphiyyKG6W/2WrWFdFnePWPG\nTzBTo5aq24HGM4uyyyQoOUnrgqBHDVOoo7NUYrCKHrsW7oiS+QqGMnCIB5z4\nMTWUUVrsx/cct4xh3g6ozurCUAKaKKSoDSJhzIpvRUl4AaDgPwAsIGU21+F4\n7iS6JOOgqFnBPNBJP+/X7aPU2j5a4//N/8viOQlss/6DO7pQ6wu7PvK3fov4\nbMZ9K9iCEC7m/YhjsZavN6RvEbmqwwbueQY9zcbLslKa9B/5uSeg3prjHkpo\nAvOxg22Tu08FTRZs6gPOXNpW1NkIoNNam55gx0NcNUCyU+HxdLYOTlG4KIZv\n3v3w8vP1Sv+PBgi+xqk8TIQULb+D0UqiLSKo6/PBGP6T2QFSYabmLkRM1QOZ\nJFX62DbGFe7U/z9pNi0WjHBdu1DRHlWpfmuIvBvqkyi52u7rUxJiCQdHJdyH\nukZ5eJBBZHB6eLWitySPFt5dvfeDK8HN015IHAOXaw5ih1V+hf2w97t8IUvy\nzV26\r\n=D5Rw\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC9xdf3JFQqsomb4ASaFxPoBSiLEVWUrpyFa16gWKKdjQIgepub5EjmN4CkzdQc4SWUcEs9cZXKqw5Yu7g3ZOfWqds="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_3.3.1_1616227034211_0.002938324201377629"},"_hasShrinkwrap":false},"3.3.2":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"3.3.2","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"^3.2.4","ethers":"^5.0.1","ganache-core":"^2.13.2","patch-package":"^6.2.2","postinstall-postinstall":"^2.1.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{},"_id":"@ethereum-waffle/provider@3.3.2","_nodeVersion":"12.21.0","_npmVersion":"6.14.11","dist":{"integrity":"sha512-ilz6cXK0ylSKCmZktTMpY4gjo0CN6rb86JfN7+RZYk6tKtZA6sXoOe95skWEQkGf1fZk7G817fTzLb0CmFDp1g==","shasum":"33677baf6af5cbb087c3072d84f38c152968ebb1","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-3.3.2.tgz","fileCount":20,"unpackedSize":18073,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgWxDrCRA9TVsSAnZWagAAwvQP/jMEV/C39GctqX/iJmP2\n89n/6WeubDM6bRmPlSu9kLiTR+62fsU+7dfa6v/0wbCWGZ8aygMrAKfuH0LR\nQYkBVJtr1AlUdr19r42y+D7eLYjzxcHLhH+RAYYcR79KpBILS0TEofw5nuaB\nS+SP7J1hn5YQ3Lf/F0Wsj/OC/To4Ux/S4F6X+34raj2WEQotcAw4F1mHkwdJ\nVoc2/vOpcWzdCeSH6frT4A+LTA8JGHftCiOIn48Js/1pV85U8MNKnjWF0y1c\nVIq3/iuilVkB4Mel2V4Szzi7ethaUV6AZMQClg8APTQLUS7BATnG9EillV12\n0MTD0tTNuPSo/qH3rQrjZpuD8EUCUeMKBk0B6xPSNL6rx6iiFyyD7hyYumD8\nkBFdb0LPf20Sag4i8bBk/WdDZY0127MYUD0zUD/B3gfYnMb+N/73gmAcH+aI\nEHju1p6pab6+U8HkuotLsCPh1oNbHroOteu0ZD7npORJF/N94JcycRkEOLzt\nh5JYn2Lzk9TkBmg4hnr7VDvszZXb3mIE+PqcotV8ru3wKhXhusOr/aYgnw2Z\n8Lpm414tCJRsaXXfTDGfWylTxVGxXsClKZAtWkLBi0IMSDU0Lb+j+xh6hsoW\ni5dfAjeHzHLUAiy4bT+gjaamM53u9iww9JULLVgD/n89TbyoxbJb3/C1kv+n\nomwH\r\n=d87t\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCCoRkLIvPxABuEDHgobhgoaUgyu8ctoNbdWxwsisP1ZwIhAKk2Czo7GSG27xvPq7epv9Cq1zm96Oft5htVI/Jo28td"}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_3.3.2_1616580843032_0.22676589714138418"},"_hasShrinkwrap":false},"3.4.0":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"3.4.0","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"^3.3.0","ethers":"^5.0.1","ganache-core":"^2.13.2","patch-package":"^6.2.2","postinstall-postinstall":"^2.1.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{},"_id":"@ethereum-waffle/provider@3.4.0","_nodeVersion":"12.22.1","_npmVersion":"6.14.12","dist":{"integrity":"sha512-QgseGzpwlzmaHXhqfdzthCGu5a6P1SBF955jQHf/rBkK1Y7gGo2ukt3rXgxgfg/O5eHqRU+r8xw5MzVyVaBscQ==","shasum":"a36a0890d4fbc230e807870c8d3b683594efef00","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-3.4.0.tgz","fileCount":20,"unpackedSize":18328,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgy0cdCRA9TVsSAnZWagAAVR8QAJqgcJpJ0il4ZZCkVkzL\nzbPgpQSgdfnVOPwaJTr0TaCSZMG7UX4RD7sG+o1Q8vKFrerFoMT/XhEb0rbD\njJBr8rNF8ngtvV1L/PDDfbL+HQBIp3IOfqdSrDFn/SnQhWr0qNCFU+SKkx7i\nHtXHiire0SgqVf2/sisUfQl0Q6t4dy7kBUCZGKqwBJe+V3BaOUIvfaum3vWt\n+UJvsPqQpBiden/5VC48xqKl1M8kiz8zDyItBtAcYubi+uJvsEfpaKZuf2yL\nKC6XbVA/F1xufeLF3xZA79DA63mu+pXRjm54p5f4/tIJBVpjkN4uHNnVYvTD\nRmhUTRJCkedGOaoAffzolraksuT3OrWcFvaYUXuQIlFA408l1mvWUJEviaQk\no1YbC/sWNKqkXT77b5fUmPPeGmkNAuUH9yKpcfoCastU8dfMab53GTVp++2u\nQjh18t8VzxI94ufLz4H4HoP1gtXTTLJqZ64Mn+zupGnHJJJoqOEWESfQEdqC\nm7iHrVDZ0cBYFaLrWb7depDmtM0AeRB4HMdXzr3XFyNN42U0gkPElkEaVTir\npqtIbMmPy8T92CsEv+/wF3Lusa/CvrqLYGDAvWrmclO3Fl6iDhgYI5Ab6ZDA\n6xFl8DTV9tJ7HrFPFuI9zP/jptylp4wTaDh8BNpPNXP6R/0sFu9E8xY9sj/a\nw9rp\r\n=0TpX\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEzIVzihK6GZJwU5RGfNKLP693w1c7BRrPf6gvaqxcxIAiA9dYEK4SoPXExc6esERjjwYU4Ny2JGx00DAIS0W8M7Yg=="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_3.4.0_1623934749208_0.8160385420821694"},"_hasShrinkwrap":false},"3.4.1":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"3.4.1","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"^3.3.1","ethers":"^5.5.2","ganache-core":"^2.13.2","patch-package":"^6.2.2","postinstall-postinstall":"^2.1.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{},"_id":"@ethereum-waffle/provider@3.4.1","_nodeVersion":"12.22.8","_npmVersion":"6.14.15","dist":{"integrity":"sha512-5iDte7c9g9N1rTRE/P4npwk1Hus/wA2yH850X6sP30mr1IrwSG9NKn6/2SOQkAVJnh9jqyLVg2X9xCODWL8G4A==","shasum":"d59f5741d5ee96a7d5501f455709b38d81c8be2f","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-3.4.1.tgz","fileCount":20,"unpackedSize":18477,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhxjDwCRA9TVsSAnZWagAAgWMP/Rh1GsArOv1q/2jsg5EQ\nrj1FtlnjT1Y9iX93kMoxLrGBVWRS4kE+C+F7/5YaLIvEFB9sMNFW79swK969\nrVaj/Atk/QcFDB5Rm4nk7H9J/cOxgjeBY7VZC9udTHdR6jMWSj6spfRImQxz\nlkMLvSSgOBmJO30hyy9o7MzWSLmRnEwvt0gENOoN5ISJlKMCeO4XyjAXinAx\n2WnUHM7JTpZ6e2XH6pvhX7dNddfyr11rnS/d1VyRjqMs8ada3cgb1sJGW4xS\nlTuQsxdoGGGl0JgKWCnMXl/OupvHW5Dw+0Ffk0XzDM6XZr4pwjQ1aD4gAAY4\nD4YSVu8Tib7S0xsT9NiUTM7UrkGOj5K9ClffZPmkPT+7wdXdeY7mFm1TP5Wf\nl12xNx0z8j9HIOJK9CFZd4s3kinSqRJpoKjMeZPxWqJlZnEbVrx0zP++/H9t\nI2T2ElZeEbVkXS8CdUwY2GlENJYB7lOstAjfRtvCHwzqD3mBy8Sehj561gBw\nyldFuTvR/UmeZ8wXrAKlXcc85qksEEJYWwOliqqwVZDdfFR7ftflejLEpA9K\nnZ7hVE49Kir3JUDCUTGl03uqGaAcNeNcxp1eWyvPvxCK2+1XnA8y0wUyk8Gu\ndsk43gkG0Cl6oa+oNNl2caGglmjmMCE/Xk/xSRHQ27eGTbySPEyUXpuQO2bF\nA4UC\r\n=GfGX\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGeevfV3XapxHhKdHhNl/8FzTqqDkDpSWD8vkucNjCNYAiEAw9gznstQN+HFF+1c7MLtT5q5x1tENzyVuFO9ZoQp0xY="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_3.4.1_1640378608405_0.5723001319370755"},"_hasShrinkwrap":false},"4.0.0-alpha.0":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.0","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-alpha.0","ethers":"^5.5.4","ganache-core":"^2.13.2","patch-package":"^6.2.2","postinstall-postinstall":"^2.1.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{},"_id":"@ethereum-waffle/provider@4.0.0-alpha.0","_nodeVersion":"12.22.10","_npmVersion":"6.14.16","dist":{"integrity":"sha512-PsdI8dWgZgzYBW+VFUBf8ZIf9DB8o/0RwKvlWMgjoJau2XupQg7c2sBAhvO9dZ3PtZDWNtCF7fYv7eg6Pe4ZtQ==","shasum":"614dd59842921a7c79ee555c0243078f8d04eb14","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.0.tgz","fileCount":20,"unpackedSize":18700,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiKgZdACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo1fA/+MedGMVAG3m73Pa+PD4DmjJNQZMf06QgJfKRWUTd2ztEzmBhs\r\nYXTo+5K9pjhgvAoecrNRc0Nc6u7iNjaKjwary/DIY3Oo7lC+KLFsRgIF+qyH\r\n3yjCP4laFO1RihpxQYHYKHGBN/Kke1U8BZwhe6D0Xt+LdOD7SFzEqFGzc+X1\r\nkegXFyYwKxYrUvU7Hah8ZK26I2l81NlOXYSlH3ywrxhnCHC8FlDtuHEBoSrK\r\nE/19/Z0/Yh/QL+5zxQXArnDYPQtsO9j/YCSMwaEzb7AknhMKijnm0u84+DR8\r\npjIovv2y5TOSr7IwRE5svyVNrMWhM+XTFjNZNwHEJo8wS9/OhZsvYu5cazhN\r\nSDb2rnBBX9wAQbxjSnPNWacIgnFA5PfsOIsHpDpS+lc3AHt2vEmJhNp29kZr\r\n3t8L3noewUuL+qN5t9l57+RQ46Q3iGIuOTa0CN402etpOD5Bo2iqqBf0PWhf\r\nqvZePybUvbHH5grlt+4tGUOiw15TdveYLm1A4pKsjGbwN13DNIm9xDv98mWh\r\n9BeA9ZjFTQxmn/AZcSoUM3M3erA7LihU0e+lYIUoj4KfUs8pqIpFfYAxY2EV\r\nx2OfOvWDpIhZLM4Hzj/4ZYoGlVYVi+wrJE5ScDuTjzLTJo8PTbNR/WMyHkW2\r\ndPOiJBI0srRkdALmFnFAlPAEAQhhJeN6mFU=\r\n=2sNq\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFPvBSWdpL1e1QHTE0Re6+o+DyIVcu+v9OLhQx2NdgCsAiEA06C3LaayxS8sqG3sepXcm4t0pRHZGFJfbc0xOlKb82I="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.0_1646921309075_0.16986858782411596"},"_hasShrinkwrap":false},"4.0.0-alpha.1":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.1","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","repository":"git@github.com:EthWorks/Waffle.git","private":false,"license":"MIT","publishConfig":{"access":"public"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-alpha.1","ethers":"^5.5.4","ganache-core":"^2.13.2","patch-package":"^6.2.2","postinstall-postinstall":"^2.1.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{},"scripts":{"postinstall":"patch-package","test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"_id":"@ethereum-waffle/provider@4.0.0-alpha.1","_integrity":"sha512-kadxvYuLhSAsBagxh8U0wYIssjCGwUTK3VITGeqsT/93Jomq5LzvM05zRcLsmbPTwedxB2PpM9MzLNHgVDS6Pg==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-alpha.1.tgz","_from":"file:ethereum-waffle-provider-4.0.0-alpha.1.tgz","_nodeVersion":"16.14.0","_npmVersion":"8.3.1","dist":{"integrity":"sha512-kadxvYuLhSAsBagxh8U0wYIssjCGwUTK3VITGeqsT/93Jomq5LzvM05zRcLsmbPTwedxB2PpM9MzLNHgVDS6Pg==","shasum":"f1a836be405d1f4dbf8a210886d5e3dd445b2454","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.1.tgz","fileCount":20,"unpackedSize":19008,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiOvfYACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqcDQ//XXNobkR6+bSeFTkfCeWuFHMGgWzRjA83+tBALOfNR5fO5Zr8\r\nFgk875aQrN0s8ymhQvgM4unaSdP8xkNwPDqY4kQw7jcGhOEVsNhc1LbgIRG7\r\ngO4FKMu4xXt1lzJOx6GfrkG6ScorE16k9UcwKMBaY2txgdX+1MVVzpLc33GV\r\nwK0qE981foPLro6rkhJnw/p7EbaJ/wh5vtZXW3W+xU78xyMqj6rXLx4cBL99\r\nJ5uZ+IACB9Oj8M7rt8b6h6wgTYFKn9volvDPmYYjkUfwCcVCiq0bq3YCPESD\r\nNPOK18IeBVRl0M/zMe/4W5wgWNJttGHys/2cDjUJkwf6g5eNTWKFHHGg3Cf0\r\nl0IN9/+tzAJw5s9sbAVRrJfciGx52JaCngvH1TcD77mVrCDb52VX9tACD/5s\r\nwP6b4+XzPnN+6OnenUPNnrGDY7/mhyImjyB4Md3xZzjInPQn6ZcVzEVMEj+e\r\n7FhVDtLgXKnIynAJCerW/7U8l59Y29jJmSfdhAuy9pAIU00LzhvD4OYGd8D6\r\ncf4MMmATRJ37IdKYtvMVaOTfiuBxDoxHehvpZIswrWvUZ8Sb18lxOqXkxeCL\r\nkxG/XSn82rcqLScOOG5vcK42HPwqNMEzvh3FO76PoVqdeAtHhQCIll8Dmyss\r\nTGU1TStgMdjvYP4x3sC5gj2ZNfgNIsIbyfU=\r\n=YyWg\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICw4FwjKFExhKbWYA8Kap+9JwPf2+8eIdcvXldNzPkE9AiEA3vViMRNkVUZpOty6L8KIaROZ0YL2/qU4lqBnOsT71aw="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.1_1648031704125_0.6219198306981111"},"_hasShrinkwrap":false},"3.4.4":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"3.4.4","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"^3.4.4","ethers":"^5.5.2","ganache-core":"^2.13.2","patch-package":"^6.2.2","postinstall-postinstall":"^2.1.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{},"_id":"@ethereum-waffle/provider@3.4.4","_nodeVersion":"12.22.10","_npmVersion":"6.14.16","dist":{"integrity":"sha512-GK8oKJAM8+PKy2nK08yDgl4A80mFuI8zBkE0C9GqTRYQqvuxIyXoLmJ5NZU9lIwyWVv5/KsoA11BgAv2jXE82g==","shasum":"398fc1f7eb91cc2df7d011272eacba8af0c7fffb","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-3.4.4.tgz","fileCount":20,"unpackedSize":18477,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiOxXeACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqwPw/9ETqaZvIcCe/nVLI+8oLdPu0szI6p0zlOJrdCXDQ0wSRZ0Zol\r\nPrNKGcX62S7m5UlTf5CsSNhTOU18ZLg39K5qTqGOHzeHz9M1pqyOFf9QVR7N\r\n2X980+F417+c3501nui5sNZHJmTfIPRkcPsPtnS25OrQ4cLdyaPrdWfMc1QZ\r\nxw6cXwpGGuXr16t+5IHYY1ZAwdkB00659qI8mhuO/7oIYgdhVHuh8ajDlud/\r\n8ZgLJEduJ06qCWAKG8QsLdaV+BRwLreT9EPN4cKQT5K7K6TdJXXYfNRNpH/M\r\nL9piQuXP2IR6ENMNrZdx5h98x1aKU6o6JPznVocUp8QVx+VWDJ1oSAZw0yC+\r\nLRUtfS91UO6qNywKPKGjZYJsjGMi92JFAhmp7XeXlKJK08nR2vzHu7RdPuK6\r\ngCs0y+Ukp/jH/iAFkRxbr5mRDdB/GjXDMVPabezHX8qX2vwOtLndlPYGd9bV\r\n6QGI8HJ2Cg16UyA8oNzO2ycWFTI7il4DWDuJq9ISrrR9MFMeV0BGmYD5V2Iw\r\nd3P193sNKLykders5soxYb9yjSHTmLJqh2iwkkT+/vQQdwMnsT6WgjxVTFUX\r\nvoB+Yo1M3DAhuPQ/lacrCvNmS7WoJLCu7F+DnoSlYOWPVbjcGTV3QiYSbSjP\r\nD14PN0/4S77YnvVtcKBlXCUFvDmNIn8qfPI=\r\n=1QnP\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCm6HF0ZBhFLaCUxRhHMPON/0QoLCrIE182A8WvygVr8AIgQN21BCEa1RqlNqMeAOzu7bmp2+rK4lrNm1KBUDpp+co="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_3.4.4_1648039390151_0.02668573515124084"},"_hasShrinkwrap":false},"4.0.0":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","repository":"git@github.com:EthWorks/Waffle.git","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-alpha.1","ethers":"^5.6.1","ganache":"^7.0.3","postinstall-postinstall":"^2.1.0","patch-package":"^6.2.2"},"resolutions":{"web3":"1.2.4"},"devDependencies":{},"scripts":{"postinstall":"patch-package","test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"_id":"@ethereum-waffle/provider@4.0.0","_integrity":"sha512-H/UB0nQtFR8pg9tOo26E0KsaL9fOFtkMwzwTAr2S3ioRBB9LkYj8SvKPa0homHAVZ2cQXCB3RweL6yfeEK8V+g==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0.tgz","_from":"file:ethereum-waffle-provider-4.0.0.tgz","_nodeVersion":"16.14.0","_npmVersion":"8.3.1","dist":{"integrity":"sha512-H/UB0nQtFR8pg9tOo26E0KsaL9fOFtkMwzwTAr2S3ioRBB9LkYj8SvKPa0homHAVZ2cQXCB3RweL6yfeEK8V+g==","shasum":"ef58a99ec91d22ac912549723e650ada2a3b2489","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0.tgz","fileCount":24,"unpackedSize":40472,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiPIMpACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoNOw/7BRW92yxbRbIeZqCF2CM7eXELoIOIUexyYJpSIEuGPJE/bHQP\r\n/QxxHxoQkxFojve7mRQsb13cYvLYVEGazLaKTb2QJjhbwQic7QJXrbRF0XRS\r\ndVvAmcl0JcUb9EnobeeeVz2Xxhq2tSzCuyXEv3o6k039C8kgoM2klLPcS4ki\r\nu+jm2D6133Y/Y8S3Tvm8xkZtKhcAyRcPmUK5LCkMeEtDkcebwOLF/4hxrJyB\r\nbcBWlm9k3Nb24lO1Qgntl+krEjAUDzKu8WIIEO2LBdjY7snRfxDMPw5djkOo\r\n3vXbbl10xVXlELLXgGU6Et3isFCSxNj/82+vEa27smC8xfzgsM33oEE7EFr4\r\n5R25rBl/6hdtcZH71eR/+1CdYsT9Ek5Z4l5+057HLKC402YN6hQJufIRPf1/\r\nW5xju4ntSHgbfVGggBa76yB5nEaCQDheQ7P5/WXu07ZGrAmb67VmB8hgFmVE\r\nOIY7u73xNb205f5Rucq+kMIIuAZHZ5l0F/zLFE7wzMMC1WIZn1wi1DMVpunS\r\nuSXdlvmOLGGQNT4h+d5huKjGnXWCUf8lPGJ0ciV9+RPHABbfLNjHtIPKGpUG\r\nyWoM1AJu1ewo/W1YFmmucdva0Jgp0i+KrqiOIeUdJe6KWB4/I3ymx31cnuRJ\r\nX+J7PH2CcPNRVQ+q04GrpavMGhLUO2nVSgQ=\r\n=95XR\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFhG/6sQCpOyn+uByopAQk+nwTMGcY/MS8Fus7OdSwP3AiEAuULYKsYFoIv8kbL8cAG2oHQARUA6JKNyn1UD4M/xzkg="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0_1648132905729_0.024589308063992288"},"_hasShrinkwrap":false},"4.0.0-alpha.2":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.2","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","repository":"git@github.com:EthWorks/Waffle.git","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-alpha.2","ethers":"^5.6.1","ganache":"^7.0.3","postinstall-postinstall":"^2.1.0","patch-package":"^6.2.2"},"resolutions":{"web3":"1.2.4"},"devDependencies":{},"scripts":{"postinstall":"patch-package","test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"_id":"@ethereum-waffle/provider@4.0.0-alpha.2","_integrity":"sha512-NIA2TJ70ZZoBqMkMWQMtWYve6hHFPOfCKwNwHD6hckht2o75acT9fBD4yZLLNwB8usu6H1HU92Jp9+xSXPPW1Q==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-alpha.2.tgz","_from":"file:ethereum-waffle-provider-4.0.0-alpha.2.tgz","_nodeVersion":"16.14.0","_npmVersion":"8.3.1","dist":{"integrity":"sha512-NIA2TJ70ZZoBqMkMWQMtWYve6hHFPOfCKwNwHD6hckht2o75acT9fBD4yZLLNwB8usu6H1HU92Jp9+xSXPPW1Q==","shasum":"d4963ffac60e3026bfc0cc0066dde31f69c6528f","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.2.tgz","fileCount":24,"unpackedSize":40517,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiPIkxACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoP8RAAjsfs5ngEY7a9lGOUDIsiU+eUtIWohJe/4PXAs1IhyTFEJE8C\r\nY29xLMSZEzwUuC2MptkQDxaAuc+muHD+hjCmK/EnPVo4/ZOdEF5aDzxcGhvK\r\n48FC6lOpelWQLopUay/v33fwGsP8HCGMoNQVxqJGeo1Sl7aI4RyKACoKPETM\r\nzZtm/tSDgyvnPkVgXgkoBO+ReMqvbbUi3eIHrOvfb0kF+/onYsAVoprd3M0p\r\nrpeSkximKdXOB6lL98n+noP2uR2Mmmk6ARjJLcqz/qN0Al2IetfopJqVN/Gt\r\n8WbEUnX7Ly2SvebldlBvQMzubYP/nM4J9Ha1Rc20VxYAKdKJfFyKZj1vOIIP\r\nOItDdNX+tmqVVgHCNw2yhgtPAISEwnqtkYjgdB4uQVT/c+930PLEfQdrqcsp\r\nTyggiwFEF64VHIw6OIKQYo6Vlb1+1I7RoOV4GsOeiDaqIgPJyMTe0GMypIXL\r\nNNelKixVrALM/SaJvsLiSmAL7hkUF9byXE++YURZstMc4mMlg7YOjbNn9jQ2\r\nC8bwZM+CjLQLZJ8k39QpDkqDplWxk2xrZob8Z57jdXaGnEVQCVEq8SVRBtyr\r\nvVv4/A8Jk7bkzLbA2g25XUV+lJp6Tzo5k2UlVrNUqWX0yXLh1THBHuDOY3t7\r\nTeOyZBjB0mQibLIojlpjRo9K2VWKZK+BUHY=\r\n=nNvP\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCN7KNzabPFXeE7z4iyU/KIUge9DH+JUpz2NOJjpTzaMAIgMoxtujW9oFxTG9tIjHR1xhNydgwe5yNzBo3QABOOvZ8="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.2_1648134449311_0.5775156752341584"},"_hasShrinkwrap":false},"4.0.0-alpha.3":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.3","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","repository":"git@github.com:EthWorks/Waffle.git","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-alpha.3","@ganache/ethereum-options":"0.1.4","ethers":"^5.6.1","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"_id":"@ethereum-waffle/provider@4.0.0-alpha.3","_integrity":"sha512-WUdK2Aipaz76vs8+XQ8aGNYw4tQcApmTefFX/lRtNkJXmmXbkNuuNxPQmJuoL3u37Go2dxiAQNHSUWuyh81kMQ==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-alpha.3.tgz","_from":"file:ethereum-waffle-provider-4.0.0-alpha.3.tgz","_nodeVersion":"16.14.0","_npmVersion":"8.3.1","dist":{"integrity":"sha512-WUdK2Aipaz76vs8+XQ8aGNYw4tQcApmTefFX/lRtNkJXmmXbkNuuNxPQmJuoL3u37Go2dxiAQNHSUWuyh81kMQ==","shasum":"614e34267ba6d85e82c2fe8176c2d6588178bb4a","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.3.tgz","fileCount":24,"unpackedSize":40475,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiPaXCACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpXMw//axlWhfLekCRH/e2++hjBol2rMW4NnvxqVdgiGl0R7j+dKLuu\r\nRlOF7t9Gt7zFFWZFtDu1gh2/JFK8udm54MIINUj3Tgq4B9p92s9meYT7vxa/\r\nyzAt/jO6l5V3/APKCGtLcwlu067DFY99cjUID4fkKfKNYbyUUhA1/J6LprML\r\n9gm32Kpq2WhrGMQa0smDfm2eDj0qavJFlSwmpTlfMQt69QDFnt1UKu/cQbFN\r\nMb9IGOHrEsxq18SDLwZ3pZpYQ+NEKqIkAxVaoEKRhA/2N9eIC7IKs6iq3PdM\r\nU6bRMDkGLY6EVWEykwbVAGyBCfanIYlqZsCdRkpDpvlJih/XfDQxCOiLkPpp\r\nF4SMGZGzYjGVteJQm4a2X+fnDOqq3E8lxkBxSLW9qZQO0hlW4qyLEzfgwjBu\r\nq5mBt8Wrz1pIpHZS1su71k4sGquEhT16trTxDB/VnHrMz/VkpjERQMb+QnLH\r\nYYSyY5ZkqmWZ8zLk+MrW4Jl1tKJpJAS+CEwwJwACVt7r58JW0hJH9nGmP20l\r\nN8uY2B4C71DZdtTNQv3MNW1fhKR1EzzJpfF7BJv90mNnrMJRuKIjbWS9R3FB\r\n4FtizqvvhEyTOl/Aggv07ciRAo+ZMhADg44foqwCUzb0634BPHTpllgklmSd\r\ncpvoFkoNFae5eWe7Ro/00+RwXMqYcgR/hSk=\r\n=ayZ6\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEVKYAvo0LFe/TtZ2aBTu+ln3E/Txybj18KTkJbwKCPZAiAirHfb7OqKHqRAvDgNLiAsCTidWfRGHTieCRYgx8IWPg=="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.3_1648207298110_0.9326181161593339"},"_hasShrinkwrap":false},"4.0.0-alpha.4":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.4","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","repository":"git@github.com:EthWorks/Waffle.git","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-alpha.4","@ganache/ethereum-options":"0.1.4","ethers":"^5.6.1","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"_id":"@ethereum-waffle/provider@4.0.0-alpha.4","_integrity":"sha512-SrF7KQnqt/wFedcjagZOLy6xaGmm5egQZdrqquWZHj4FWVjDCmREbnrG07P2mJchmxfOPLEozEidhGRrXo7Auw==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-alpha.4.tgz","_from":"file:ethereum-waffle-provider-4.0.0-alpha.4.tgz","_nodeVersion":"16.14.0","_npmVersion":"8.3.1","dist":{"integrity":"sha512-SrF7KQnqt/wFedcjagZOLy6xaGmm5egQZdrqquWZHj4FWVjDCmREbnrG07P2mJchmxfOPLEozEidhGRrXo7Auw==","shasum":"55724f2f56fa560b5481064190464c4f750b978d","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.4.tgz","fileCount":24,"unpackedSize":40475,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiPcs1ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoiWQ/+LEp0l1BWtTlxO9qkQh1pGozhHHhKA9AEsno4+RKqvJ0c2UNT\r\nLPcsJsDpvOcBAvgG2589DrTnYVmyFoq9yMsR3EI4KyD4ccjixHElWPK6d2Fd\r\nNkpC3fTno1eZ5/iS4uBNJxuIK0bieCXgFOIDrKhwEHSZ+/MUPeA1hI1JzBDF\r\nNY1uWf3xzOep51GTdcgQ//0kvzk6unDnZuYnR3CEpExEAeq80DiBOJx7TIOR\r\nPPHXfCRIcFtI9mFvDiEP8VWZjV2z7jtfZwjK3z0C2jZtkhMRSRta4GdqmP/u\r\nwQWn4GFlayeqSnQ9mzyhvnRPyOkSIPV304yAjcnodvQJSBa521+X1vipYc0w\r\nNK1n9271nrEfJcYjSzGl1yNQZjdV1j4MH6LqVPDi/fTsK9fhYfMz0nu9f+Ne\r\nUXl7YbBY2MYUzhYTtWW/xQzb616m1AMTIS4UP/y7b8Aq4fcJxEBk9r9LwE+g\r\n3ZBISc7Hj8Vz3+tM2rCZgb2VEHBIpD6xbNQngTcddDwRF2g81/Mp0h2zLpf0\r\n8/zF60cjraGNi0nXsnGcWFJOD8hQ87h8GjolzOX7UX1JlOU1NpvzyKrwbPJD\r\nTjqXsNCq4SE1L3jMLDTfsRF2KdqCwPk/xNka9G58usCde4aJ+5sbjffkf9ne\r\nKyfkEnKvs2SpcVXo9gwXJYPcx6/P1+1ZqBU=\r\n=4a4Z\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCIVJT3wDDOJq4Kp+7Uv5+MOzll6v/p3JGIZjMYiDjr2wIgSBYg3HVIC3X2su2+h0oZnPqwnGU5U3kgGRxs8xSIG/k="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.4_1648216885742_0.22033729472042385"},"_hasShrinkwrap":false},"4.0.0-alpha.5":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.5","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","repository":"git@github.com:EthWorks/Waffle.git","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-alpha.5","@ganache/ethereum-options":"0.1.4","ethers":"^5.6.1","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"_id":"@ethereum-waffle/provider@4.0.0-alpha.5","_integrity":"sha512-voAvDyl3Fn7qkoyJesk3/HPFc/f2p5HevGC64A2+mXwhNd9mdCWvOsYfLIqFgRsJO2AyFXEcoWM7fYq5pJ7nQA==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-alpha.5.tgz","_from":"file:ethereum-waffle-provider-4.0.0-alpha.5.tgz","_nodeVersion":"16.14.0","_npmVersion":"8.3.1","dist":{"integrity":"sha512-voAvDyl3Fn7qkoyJesk3/HPFc/f2p5HevGC64A2+mXwhNd9mdCWvOsYfLIqFgRsJO2AyFXEcoWM7fYq5pJ7nQA==","shasum":"727f781c97673b7806061b84fa4ab1942dc12d3f","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.5.tgz","fileCount":24,"unpackedSize":40475,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiPeTgACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmogsA/9EWC6utxQ2KT4rB8+uQd7KduG6ta5Y85KSE1Qu4/Yi6xeK/8f\r\nlol5PnKjkh7/hkUd/bMwpZ9K5WnMLGaKXyqewgbAbt9JjjB/xRZEpWN7pidF\r\n6ysDCK9OyrmkmL5u/t0K2qhWj9Otf1IgrsqsQy2KibRGJPY+EGG/aSnl1qoY\r\nwZaPe3LlstxUlOgAcrq/qMe4SMXMM3NnYZv0d3usPSv+2CSemYJVT99bcITp\r\nxAQAIEHJSg9WwLhUKIsMxwLa93oVCNY0K8/V71RGgUQPqqfzZt1Fgndm5fxW\r\nyttjFQ+5BnnRNXd9gkRdg4ir1+Yl4XbdoJMzcH9qmLWqi8jinZkU91U0j8Sb\r\n9YX9k9puqE/LUw1ZEBwG52TmMQgxbzBNcPGtQxvtzdlfhlZapgzlyuMpgGvt\r\nT6Wr4FkNtV4c0g5I2+NOnrGhbWN0PtapeokdYAEcfNM82I5E46YUJLSU1oaE\r\nIGFhpDzAnKaILxY5vI1/pmg5zldolA6RrV631JFOo4f2WfLkJdaCcMqeyXnW\r\nDxg7oe80kZepRZaA1GKTBcLn3BZ0mKdIukSH7F2751Z41fcmBdICk2JXmW+a\r\nYmTEY4xoZ9cB4wiK2PSb0NvWJG0CYXqxodS8p0DAdJPQ7Ca7fZ8xC+dE4vFE\r\nSrKBK31Io6r2XE8h3OTkbX9wbE1hp9vgjng=\r\n=Rgg0\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGaenvRxKkXltKCVSF09Q5bFCzRAc3+a8GCkgGvW26OiAiAJ2I3QzkbqOZTGa1RJ6RzZF+aFR7KXTyJ75Jcb/JIMnw=="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.5_1648223456507_0.5722846667013255"},"_hasShrinkwrap":false},"4.0.0-alpha.6":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.6","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","repository":"git@github.com:EthWorks/Waffle.git","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-alpha.6","@ganache/ethereum-options":"0.1.4","ethers":"^5.6.1","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"_id":"@ethereum-waffle/provider@4.0.0-alpha.6","_integrity":"sha512-qoBzi6fcID0FBQZ4tO0BYOQpKvxywoP1eQDj38zYbZMo8mDZGxlJnvR7QhfpdK08P1Bb1Z9pDWEm3UZk5SDT/A==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-alpha.6.tgz","_from":"file:ethereum-waffle-provider-4.0.0-alpha.6.tgz","_nodeVersion":"16.14.0","_npmVersion":"8.3.1","dist":{"integrity":"sha512-qoBzi6fcID0FBQZ4tO0BYOQpKvxywoP1eQDj38zYbZMo8mDZGxlJnvR7QhfpdK08P1Bb1Z9pDWEm3UZk5SDT/A==","shasum":"2126ed9e33275064c38e9e2343ee8ffc9d2f9625","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.6.tgz","fileCount":24,"unpackedSize":40393,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiQcoHACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqIlBAAiVqh5dRsfc7+BWE+veDJkZCHT1O8S/yejP1n+EbP53OlqxZe\r\nwxTdEgXUFK/dUcQltl04zkXOqKiLCkAtoE0fqhkeQQh1gPhLb45itjkx9bgl\r\nL6XuUxkqJcogAyUrjXX+ZQ4EBHIQoTa5Kv0GYbO8+s9ukflXXopk7R9Z9Wvl\r\nM/r5OaQvQ2nmDYZBalyeTk59cVNO2sQ9km4xzbKoCfO8/QQIaPzeJiKKkRTA\r\nPWuDfqTV4tNDvNWXqUXqnz974mnnO+FFU+Q5WGknZuNOE9GYI5nEgVv26U08\r\nPlG2p8iT6jfTQCSnCeHh9e/yBNJUc1aCusZtsQ9Lfze9hMrg/kF+g4xHZA/F\r\nSH192/dwvHuY4ZYJFIQT7nftAWiSmmYCUMOOkMKDlMn6vMd/QDGUiCnAowQq\r\npqpySmxjIax0g/8RcFGr+oyf+K9ZlcIrtryQf7HzUML3cfuBZi1r65kGEs+T\r\nTGgbYGPc2lBB5BBnBtXR8CzEz3W1ihO9F8bUS9xIJhoUW8TGrMd4wcVVrps2\r\niST3apFp3FaZzYAffE6xmXV4Wj3C1DiZkVvTfW4gdjT4I1NamzZ/6HYupQAX\r\nL/0JrUmrwTp0P/6tOk0rOQLruZK0MqIop/OQKTMnB6pmCNZZ22kDuwJLvX1V\r\n5+C5VwHLg6PnCRvEeA5rZTAL1lXSYAJLEFs=\r\n=agwF\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEZWl9KD+x3f/yBpNedAVGT4yAzkEoBNmvT0+p7roExyAiAX41ZsrTvO/QVtIjFuYqKcFAOc94C1rJvzQbbT5luP+w=="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.6_1648478726835_0.6593653170032339"},"_hasShrinkwrap":false},"4.0.0-alpha.7":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.7","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","repository":"git@github.com:EthWorks/Waffle.git","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-alpha.7","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.1","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"_id":"@ethereum-waffle/provider@4.0.0-alpha.7","_integrity":"sha512-HLUECfNBJ1OVK57aRdrKHyrmfLS4UQxO09rSvYKJdSEyBSIPNIvhUAaNHoh8/Wx3HJGcSxfoI8u2KuabUzrV/Q==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-alpha.7.tgz","_from":"file:ethereum-waffle-provider-4.0.0-alpha.7.tgz","_nodeVersion":"16.14.0","_npmVersion":"8.3.1","dist":{"integrity":"sha512-HLUECfNBJ1OVK57aRdrKHyrmfLS4UQxO09rSvYKJdSEyBSIPNIvhUAaNHoh8/Wx3HJGcSxfoI8u2KuabUzrV/Q==","shasum":"80da2ed9570609ac5d76913cc9ac4ac7a5755a0f","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.7.tgz","fileCount":27,"unpackedSize":41862,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiQd3rACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrpaRAAlJKKv1ie7liN8qP8ZOO+azks9pN3E2Vu7p7uBdKEsH3MhLhx\r\n56qDeEQG+z/tsd8oW2+wK1vDB2g/t5+I36fZ3kR5hyd3xgB5ILEhjXI8JFS0\r\nLQIazSAzktnJBgNRIBlgA+KrOtDOsZ9C1PrHQeNInsmc+JM2bLnkWWBddAdh\r\n/r7t2zPVMc5A/SyJjO0Z27ESjSw9nukP7/4rJCY7MzM/ZTHjn30EVSor4HEd\r\nz67G6Ab/Y9Uov6k49r4vSLva8hgEfzK4XlyuI54MiFibF1R5uO/DRJ1k4TLm\r\nmRB6hbCX1AQw228Yb1+uvf93cDwgluF1HeLi50VXBSbuAHS20Hjvi3Bsau7w\r\niA0tKpXRw6bJGN8+zWXCw6h31Ty8xSkYafIW0WidH736Vgqzt8GZMgpxOrzQ\r\nzNpgIFhYQoXr1lQgXo4s2LWDariGRvLjmHPisL+DaP7WFzYsJcWUlrkoJ2S0\r\nELmta27D7j5Csky8O3HrebGQcghNMFJsI6oRvXtQwMQa/st4uKDBUm7tsxXD\r\niNbSujH/1vn4bMYrIqxYO3kGc2eMT5ub2F4zs101QtMxTGYVjwTB4Pwvj73w\r\nWBSwwkuLjJDXwlvJEcoSHDxyMQY0RfJHy3Owa9jhcWU/wacg9FGJnASYpdxK\r\nNEAsAvfMReRM88yVRKv8aoun35p4+w2K4ik=\r\n=+Niv\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCQqNCSlEiu+hp+PkWxkxoRzfXAsEqDHNrdSn4/LiymVQIgVQmu/Gwax9b7iG7b7jW2RhSI47+ss3idHTX0hGeFlSA="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.7_1648483818802_0.8733480285011621"},"_hasShrinkwrap":false},"4.0.0-alpha.8":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.8","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","repository":"git@github.com:EthWorks/Waffle.git","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-alpha.8","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.1","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"_id":"@ethereum-waffle/provider@4.0.0-alpha.8","_integrity":"sha512-xBe4wIYQAAlVGY6EHhz9fpAIxQ3a/frXuSkyY/fyoWc4iaGePI4uV/96SMV14LehHO+n+RWkVmQY7+5saRs8ow==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-alpha.8.tgz","_from":"file:ethereum-waffle-provider-4.0.0-alpha.8.tgz","_nodeVersion":"16.14.0","_npmVersion":"8.3.1","dist":{"integrity":"sha512-xBe4wIYQAAlVGY6EHhz9fpAIxQ3a/frXuSkyY/fyoWc4iaGePI4uV/96SMV14LehHO+n+RWkVmQY7+5saRs8ow==","shasum":"7a88cf16ebf793ec7cec0649a07fee1d2606af38","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.8.tgz","fileCount":27,"unpackedSize":43645,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiQxbSACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqc+A//WaMMSeAKoCM2JFiYosGmdRzvkbdusCCF78yslNlb7OGp/loN\r\njZihu4B0d1NLdE9l3AftwrUmPhj7Fl8n5WqOJxtCkrF4wG9MfhLciV/4iq2C\r\nB/5CSyet8QIRjLYegNIlrxyLQR+DvqNzTkI63k7EPj3I4MO0opQ/PPp0Vk7F\r\nNbRri/poHSzQSlmK9XhofljQ963dIG1hi3ki8+EpHy9z8ziDCiv7KROew8FM\r\nZ4B19fdKwEc1o46ZvkIaPpRXJWJlP+6Yd10beF7bKUDhnWcSLggCX+ynd9sU\r\nfg+kv/MzKMrJNTovE71cflCoqd7B2H/K+JNl8qcn2s2KPfz/s406E7K3kprO\r\nd1grYI13NvicjmDa6BCfCsqvALbboOv876OyOIkdPjhv60yCuf8nfRALZGST\r\nSMEKz4EKLO6NDsjdtgwDGIYt8tSPrtwteuq7gkR2IAhKienp7rIXTOjkzFHw\r\n0kDzcKdAuaAH7auein8SnpPg3Y5px3tcCwUbXu1wJPALWytDfNjmkp7yMou3\r\nwvfl6Qzl/RojhszrDqxbne4chXIN6HygjSYIXSbjdbno+Nl0JFOitkjFGe0L\r\nLys8TVleEb+6BqU/FpoA44pdwNG99YfyL5nKuNCMMijczu7xhbxnjtcRYS0L\r\nhg5XQuwnFgqoZU7jDC717O4VJjhLmq1dUdw=\r\n=H41T\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGenhPViNVH+HSjUDknyBtOQzcOiD2Dyc3Q5FGjpUgjkAiAdNCQsGP2+uUIzriKP/Z7Ujx04Pf95SDZgDae6dZCTGA=="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.8_1648563922576_0.16358155781761652"},"_hasShrinkwrap":false},"4.0.0-alpha.9":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.9","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"workspace:*","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.1","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","gitHead":"e7299db6b37b027b6aeafdacb75f45c632898674","_id":"@ethereum-waffle/provider@4.0.0-alpha.9","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-IUG3GcJNfKP5jOLZUVs7c82fLxhfv0a9MPnpmgLKf7CiLwuvQ1odura3iGrUkRPcr/qrodmv+jhpUUyAF+esHA==","shasum":"1013809c8b1279d046aa2430f14e04a929e2e91d","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.9.tgz","fileCount":28,"unpackedSize":55539,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCjcxvnK9a03/bdnvwZNE5ZOCLjGhRx9p/BqceUsecz1gIgKt/xY10eRtOJMVo9zoQq+sawqX8JgHr+fqadfYE8MPA="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiTGAWACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoAlg//bOjJfpmFs8YYZyEGXFlLnbA8CEhpZEbqcx802qTMiA7Uh75+\r\n4w7fsFPHX14kUCcDykrYI5wvEyFJ10bIG5fawi24W1YJhJJ+IvP/oRXG+dKm\r\nIqcs2niZi4r9qqZjeeRcO1HMCpDQVhG4n1H4wRvd+PsY2K6uVAbUnVgsrccs\r\nNdmuFGm9xAdo4jotG8xIfis5tz+oOnDXoUq+L1b4HSbcfG8cMudLjgzfk/BZ\r\nclb1GkT4T4Pyr6nPrUXO2l/UUp0p6UlWhZQR3Cm767p1exBibWxNrDck9WN2\r\nsza81gfzKIX6K0t3bBtV+4ZlOEFN7d69mKqXJSaL24tUcx7Q5vEGwWVy4J48\r\n0GA6NN/WbjMBiWbUmmxTPmqpqrg4+RvQ/t/LJaWEJU7VzcE+zqRFnkVJ8X7L\r\nSGMJEx6RhD+y+HFK0WCmq34mFnG3Y+xko+VLTsr7QVk3TSOJpLyJk4R+dRpP\r\nh18NFnbQZNbJC0pY4OSzJAp6+pPPlD57ugvDgrBtgXICCz94zt9o09cOV+gZ\r\nmy9Mv1aHFb4JVPEvIiTOYdylODlIbsRdtQm46VaX41w5O7WN7HP2nN5PlrUk\r\nzSMJwot11rEcs+vrbFgvNIHx19tnEFgt9gmu2ChH8qKkgBi51n3PtjhEeu3Q\r\nWujAvjAPyRbZLDS4wqhZFBQ05d401QNpNbw=\r\n=N8Zf\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.9_1649172502799_0.5194584065641401"},"_hasShrinkwrap":false},"4.0.0-alpha.10":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.10","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"workspace:*","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.1","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","gitHead":"528e32b3e375eb66b2f111ad8c2d5da95d51c15b","_id":"@ethereum-waffle/provider@4.0.0-alpha.10","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-68ix1CiKX4ub5ayBT6c9S83yBhBNf7oiPAp5DN2OxMeIp26OYErCS+/Y3mbTEiWqfdM4UmkD++NW9OB9hPEaIw==","shasum":"d019ca4c45339279c4c81febbfcd24ee76f7e4de","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.10.tgz","fileCount":28,"unpackedSize":55539,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEGSZ0rqfQ4jpq7kGDhdkkMNGCHVegTQAxBMlMadw9tEAiAQ4lg28SCbXbTGa6/rHKHkZDqHGG91Jd7qUtDWFXno/w=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiUAjgACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpHnQ/6AtFxrbItWj70ZouF34zze0f4hj3rDBkaP/yGyq3qYUh02nKa\r\nb+U6Vou1brdQcSWOdph38Em/KhtX0EYd8SP7gOMAjLEgW2Tu69+ijXwH+OOY\r\ncO7GWcsXfAwHbGECjKb14QNcI0EojdUHrl9xdA6xaBuS1EM24HVh/naaHm48\r\npQbUQTewuHAdSiI0Lkr1J00C3ErgoN+7/Azmlnm3+oHvG0b/5NwHeh+JGUY7\r\nh2sGj7JwHGA5YjJZmYnmC9SNa6LjZFnI/lSFc158gomLmveTwnN2RUpJx5Yc\r\npbkoaYIsWTYhoQu+nAemPIhWkfEn/Zp4Hsbk5vYJgno1nnExgAs9S3gaFu1A\r\nbrwJvf49xnaV46LyecQfrmjqbqbNiHkKMWGso1VccKNicMbB6IC/GGQhOC+r\r\nsHyia9v/wSpvawXqYm+FLYYnTwt/mxdMNjE5h7BZGB8Xf/b2A5wDgnI4tRuj\r\nDO7pCiYAXgp/qcPWixCMlsjc5ruOhcz01VdwK1NgYMBv9IXc0ElP958r+IVC\r\nb2X9kUNvT93T5bX82IH5naGH69deTY5+TdcN2gnMf9YGHu8sHgxlxU7vRfnQ\r\n/BCfj5bGq/I7AsBU9IaNmigQLRfy5U4OsUMBBc/0c3iTJz2Q17PGEmm4/iPV\r\nWvbYSIGeaoGLAj9mH31YAJ/pllLO8ftXQ00=\r\n=WRz5\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.10_1649412320186_0.3548947041078836"},"_hasShrinkwrap":false},"4.0.0-alpha.11":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.11","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"workspace:*","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.1","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","gitHead":"ed044d59f258f45fa3e155fe6f9b271ce9d39de1","_id":"@ethereum-waffle/provider@4.0.0-alpha.11","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-5XEqX5rq+KVyvBmU1j6YKraJF34lIFNR73WYlbFodh1/uUNz4wtnZJvQCXyxZe1JfA0xhXk7GKjk5hjHv6f+0w==","shasum":"39bc44b244339036e8f531408f7b97cc3a6563c0","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.11.tgz","fileCount":28,"unpackedSize":55538,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFZ4tD84CTYmVumnpEWnhaxzKqETMWxbteXjb+Q/hXA/AiEA+9ENvfscMxDTiqrCBHaZc5RF0ntgN49a91LlZGoH2rk="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiUDcHACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqk0Q//bDYZYp1/xjAGuVCXjVg0/lkKizp6EZtPggtuhtiaGG5Mllfx\r\nJVzbIvvky3LO0Am12fOXI8LnwZkB7OjbMptsb9ju20Djk0OTRJZYBs8GXywg\r\ns8IGNnjvcZvwG8tF4iLtnGxDp38Pu/3ArHkJO4c0Eg7W5lEmVmzosiEHReWF\r\nA/eRFltP4EtD/fVK8WGZNWvhwmPII8CXkhmFvo0fxGP9f7GSqqqp3hqZgbl8\r\ngqmsZnlNq0PNCHWtkrM0UlLGfI7Pw1pyae5XDrSQcUmH+frUFzifAfXWDHY5\r\nDKraBK02DCw57Q4ARKcrCnerbM0ypFDboUXDv4EfH+6TrxAbipkw0dVk/H9W\r\nktizUtaemTS1OEQ2QnDs5TaWRt+GCsYjx80a+3XW1iC88HJRuzxUmwAYikVx\r\nSqZpyhXUwTGjKxAW+67cnuUYcW/weLe7bUttOIiipA9Lki8oE1uB7wnhTMkf\r\nm/F701Ajhx2QYH87ary+Ug0VPN9wO2wNSKWUT5Ead/ePheWiyzMF4SgYNbHo\r\n2qWlJwY0O74k/pSgnGJsUSMvvXZLyLWJ6Nz5EnzW0TTJOcwt8sPf0LsB3SY7\r\nUYDfPbjVojnINQGAg0bm0pmFP5DKahjwomTXp4HSr/jXiK+RAry5OpM12X5w\r\nDrHZCrg7GJ0NJ0DciIeBsjE9JTxlgHaucKQ=\r\n=e6Dx\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.11_1649424135101_0.4759330426580002"},"_hasShrinkwrap":false},"4.0.0-alpha.12":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.12","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"workspace:*","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.1","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","gitHead":"c63d7943b840e3695179ae9414a7429b63ab86f3","_id":"@ethereum-waffle/provider@4.0.0-alpha.12","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-mW6aBKLix12XLaDoBncOfmxeiMhpdSuomouV2AQrHck/cV/1KMg2YBhJpOLIUVys1Nqr6cTpV+FrgMJGYf03Fw==","shasum":"ab46a763bf6683151c61e14f0aef1a7b9e5f5b67","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.12.tgz","fileCount":28,"unpackedSize":55539,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIEMe7Ov3+iRDESmB++5LlOBKNBXvFkDVK4xtUWEIEYQQAiEAyVv09GIZa8ZqE/muXn8uE61wZQLn6aBtO2YMk7jWO6s="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiUDnaACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoQWQ/7B6yVXQPKFG7QWcEilgL81QIDpZeYQCaUDQldWmhKZNXLiwCO\r\ngg2v+t150s7qUVIGOCBi/s+3ANZIiUIB8+QLhDUzf8Be8vEXr891HYC4SVbd\r\npEJJie9c/AjkO0qvmBnpsLbM05ZIR27xTIHv/ooSGf3CYjlIrhgXpka0Bmp4\r\nrg732AEE2yygkGI13H+LYoVLRmgW5IpI3mEZ/0ucOanoD21D/0xAN+yUOl85\r\n0n7+6UEKxQAW3ucnkbIXkWryZogra7l4eVDjJOruw1SwQGIpjCL7HrzWZ9Rg\r\nfhaCQglsDeX3M5tWraZkKmcyGhvHV7IjRiaYBI3wtD8qBmd8y3d9bkLOwPjC\r\nybpYXD+BCWZdMQFn2teYCkdSlYXwBtp6TGl9pxCYKiawtV7FvuT27a3yXePx\r\ngqTWHD1fw5FnCn3oLXJ8cZYbtzakffuKBF/sIZ0SlCtcUaH4Kggfx5Ud4kwU\r\nEHMLFCuSsSDr6xGLBXGSul/+zju4lcXW8HJqeDXAoGs42N8x+PU2qH+1Ahyy\r\n7zf8mWRdQbNhYEzcHt2B3GuIb7nTSXZ/3iIlnlcLT1GNGhhKJY028B1YEQGa\r\nbeH6Y1kFoWo3RfKoRJJHVBqgDZ0WlzTXCfqAwtRUIAq/I/1NEER50nunE/1j\r\nNrQf8v9WEEI7+pR0CYl5YSfuMVTDq46L90U=\r\n=jL4p\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.12_1649424857956_0.707028357404277"},"_hasShrinkwrap":false},"4.0.0-alpha.13":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.13","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"workspace:*","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.1","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","gitHead":"fd1ce01affd04e81de568ab2f51bfd0ce0142654","_id":"@ethereum-waffle/provider@4.0.0-alpha.13","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-bTg+IevtU8L2GNzCQkQLqfwa2UOeOZl9o7WaHQkAUPuRERamzJnmR18PT1f2h82zuk1LPlprYGsd9O27q+mtMQ==","shasum":"d5dfdb902e42dd694363f69ed75427946d3c5dc7","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.13.tgz","fileCount":28,"unpackedSize":55540,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDIZBNWJRoE+5VAxyAQza5x6ooJhRQXcdzboA/qx+UKzQIhAKy7eG34zxS7qz2u/SWpENuxjep/wdB3WDn2GEsdSgov"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiUDt3ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp9/xAApRYxcxHKiAEY3syuveZa4dijX1clKCGdfc9iu/ejoQIn7iTw\r\na6RB7wig4W+yWQPA2mghtIPnKNR8GmSI2izG8TUfXMGq0p7nJloiOatmbDtw\r\nUXhYbS7dj9V1AZPKAr/RV8GRUfcjJODWOMzLODOhFMXaEYWY7Ae9+sWE16we\r\n7hIXRUanxBN2XwcRaqjlYJ40wuQmG8yR1y/Fzq92dg1h1DA/zjJW9fqwquJR\r\nCX+vma5MqJnP6I9Yz5I4gKJ4UnCE1PQXJujFSXs7xaXkYao77MzBPhKxvO6w\r\n1xgw9L2C7PuE6fdNvVo5ERbSxbXp/qAOy0UponMaZxAWZ07GzTWiaBW1vPel\r\nDxd08r48Ph8u8TdQIS65oxngzFeINbiL7whLrpRW0ULqvbX13sEDtJO4rZwa\r\nXNYTTlxiMipjxXBjoBaL6RZKsLFIcaO0CGXlwlfyMP5CZbYPTQxrq5h5gw1H\r\n30HHyuJHrEIToav+alR3/aO9WvFaIA6iblAuKFzPKkfgtQ9M1FJnBQKKeOJz\r\nlnt8nRcXOK8e4orb2vbc/RRem2SXh+ZCICwee8Of9B0csPUJMp9G/9mDt/ah\r\n3iiCYwMfD0ydHlIGrVlBwW+5FBqm2pwbdmfAQC8jWw6s6R5UxOJ/LdtEvfcd\r\nO/tNm0+4mMFe1UywE53iWUcoK6BQ+BfETSg=\r\n=0mdJ\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.13_1649425271311_0.5046640190309877"},"_hasShrinkwrap":false},"4.0.0-alpha.14":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.14","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"workspace:*","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.1","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","gitHead":"96210f0ea784ee0adfcdbd53044232b1f0c69e85","_id":"@ethereum-waffle/provider@4.0.0-alpha.14","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-BBqn/f4Ycca57Pu+m9xukzlUYU4sZ0Hk+9nUItgH0y+OOz3B5dkSieuqeNsWQqTiKFiM/Uc3o7uad3+wVbD3Cw==","shasum":"8a8ea3869ad81d8bc07998c327967b1ef6faa819","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.14.tgz","fileCount":28,"unpackedSize":55538,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDdn52xwaDZOujToWAIhwgNSAxvTC5xxg1o/Zet3LF9HAIgWp4jXtVidwKOfHEMintCbTj+Rv1TxuxtUQQwotogeuU="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiUD6QACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqr1Q/9FkmGQtc2TsOmyuwYMSxzPZTt2WmTgeI/c/Q2dhJ3ASLea4fN\r\nH34oLI74NTrSJez0OpbGY5/9iXfh0Z/3ZpN1K7XuPvif1nLkZwVUews8Vh+8\r\na3TDIOIcOPgbDf0U7+fPRI2PGnuKCnasSp53Dacr3e66DDhX838Y5QYD0gcI\r\n0M3svdijIZXfblYuYbArqrfDW+d+zoO4VdY0Bgezn414Y+kk1VvRjZ4pyAiv\r\n06iOAPZhhKnR9sq212NZ5kKQIhVykvRblG02osQ8LOe+ROZzdkERoBfakpWo\r\nmhLhs/5mF4FsU48jPhSavIcHvdRSYNIklyGH/zIbkxhef4I9j7M28R/j3t0v\r\ngWaVqKnwQYYnrWumzAmkQUs9lIghRzbLTVPxiz+uMOmNjOcLzjytDKQlk+sj\r\nKSI290tlo+Gn2T4yWiOtB/VWmPByBz7QbbZ4yzvpWnoBPVqS7nbV5u5Zq2KE\r\n4+fksZBkDtht7c3eldwSqRJ8aol1ZeyF+RuTO1txjEVucmCqw+M8+3BbhpMj\r\nXzPi5LnpLrvWcjfKSbs1MmtDCj3wwTmV9V3bN/5OXSKyvSsd6+zJmxwQ5FCh\r\nHJDIJkgBZaJIjHc4ji300triMvhKRqVAQeSIYXEpX0C7GvpLzx8mWgBHN4w5\r\n1mrrSdaFJo235bAr5rBdc7rBqsFLe5JiAjY=\r\n=XS2Q\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.14_1649426064568_0.38932057791179253"},"_hasShrinkwrap":false},"4.0.0-alpha.15":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.15","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"workspace:*","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.1","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","gitHead":"b94c36999046cdaa28e71ebb47f1a399b336b9d2","_id":"@ethereum-waffle/provider@4.0.0-alpha.15","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-YnuTx/dHO+doqBJgW3gcarrqmPiAcCmu+/h36KwxaZQTbKn+alUMOmjYXBj/maw2voyUTSYAaeQNy7c8nrxKsQ==","shasum":"46f983ce1d432d2304ae01a135326993c2c11e4d","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.15.tgz","fileCount":28,"unpackedSize":55539,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDagDA+RSsRYzImQMdPzdPHKBLd/xE1cRNywVoft4G7KAIhAL24eKuu9mxC+ONv4iBDX5zjyB4bHJb7Ht5UaQHQ2noG"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiUFxjACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqmnA/+Pn3LIpFW2c9c1KRzMm2jcVxiOMj93nWvhmQKaS945zFJfXJt\r\nB5mQsvKaCpEmGMo1BfsY/4lLYCTKh2ZpojRUNQGMIYJmgYFcD8SDfhVEkQ5A\r\nsYhsI6qQq7M31pO1f5vU7n6QvIcQgDeBIo0jUfw5CksBZXkExOoQcJFGNVwZ\r\nvl9kPdhmYwl1BCQie3JSmI5KfA0MRjgJwZMBTuQpfz8b9MDbhi0tIPBjFCfI\r\nhyB6fifLjeOkYBy5Jq9p21qdU9HR8FuumRSQweDtS8rgXc9cSBVwQtW95zah\r\n8UoHbYuk4BMvMApF1XVFMVdfKJZOQt5jz3liDY3lbPKF2IdqRWIi8e00d/GQ\r\nFc3VNvlJTfoG+rczw0cQVum7eR6nf20bAHWc6JEo96Q/k6g+DSwVAsBLqXOx\r\nQAPMzqBZ6VxYMqQf51lbQhlrjzk0AKVkGxZpAyM2rMc35oVPU9K+amroTbMl\r\nZ3/lO76SGyGcXzXCtH520pjNgdQl0Ibm/m0yZ9FNwJ3wpQvIDGG/LhaJWAnF\r\n9hCo94nsrcOoejqrfZ8XO9Ul74ytM/zKa36cV1vSk6o7wj6CDz6mWPnIgEoE\r\nnejsUtfldD3IQYjARAaVqwKJvnviU9GfjeHqCIqKjgB+Vxp7hmZ8pco90myQ\r\nxICTOg99FU7obdi1s3tU03e1sXU8B5k77PQ=\r\n=XJbB\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.15_1649433698953_0.4432453068815885"},"_hasShrinkwrap":false},"4.0.0-alpha.b94c36":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.b94c36","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"workspace:*","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.1","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","gitHead":"f89ed312e4403bc227a6348df418e87b609e5f21","_id":"@ethereum-waffle/provider@4.0.0-alpha.b94c36","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-qG00Iu8J+H1z+tXO+mDc8Wwcn7iPUkitTisPQynsmS71mh7SJwTFUwPnlTXfg2nba/VQ2sCipALHHczAlIG3Lw==","shasum":"ed8ba66847e7d06c1a8aac3ea9d02e19e894e8c8","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.b94c36.tgz","fileCount":28,"unpackedSize":55548,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIH1AoN2UbzqcADSRNwiF5UVoYqbULwmwHFytY0uE7nvQAiB+id0uVNj1Z6EwtzKu6piMNTC0xg0fywPy+ooew/pA6Q=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiU/JyACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqY/A//cyt0rhHN+bRBEASqoOrlVm/crBpq69I6ypuAmQVKKTLQPH2p\r\nXLMtUH7xDV4bk38/V68St97tawV4UdU4XmfAFssISDjc3bSy+csN1eg7Z9+k\r\nlHyWHs+/FJSb91dV/kkIcROTYpA5Z+D4o54rhmAOeWHCHtqM/OYSMA7q0/RA\r\nuTanexftoNgNFVEN9NK75rd5J58npEX6nwPKNGArlytmGMpkDfVZpmTxiE/0\r\n93IXPfBqvqgjXFVi2AhY7brn42S47ApN3KMYdUvYNEQSpdAlFmPIwcRPjvtc\r\n3bliM+WCJfEfUHx6UBmw0DMg/4/cN87yHUXfioWo51lygOxRvCK9pEyOk5fq\r\nYwmfhbYUbeHaCLWAzm7j7Vwv7MSUTgmKaU/M8gzSsAOK9ZRfn8sS/Fog3qYv\r\nkteg39yENDikdJsvFLQbqUexRyWctlOdtx+zZBp/soZdUEcZCNNXNoEQa3Qq\r\nkIOC9E1rOhP80TruFHSN3dhsEt7p87OO6CeK9Ny1E4P8xnuduMQm36OVM3yJ\r\nSYTKh4f7nQMoX6WsZXg/HkxUMtcB9NHUeMgl6L7UbPg7oa8NnPNpMMzL7JEw\r\nv0Hn3iC3X3bnDPWlHFNqAGQwfMuPT7ZLBx48gXT5wUKSVJrVPXVxImMt4C/r\r\nO2bUTo6j3SbFMX0xb2of6ch2T5NXfiet7bc=\r\n=hsPa\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.b94c36_1649668721926_0.5176694320801218"},"_hasShrinkwrap":false},"4.0.0-alpha.16":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.16","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"workspace:*","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.1","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","gitHead":"3e41a2ad0efba3dd8820f0d9445ce43434c723f4","_id":"@ethereum-waffle/provider@4.0.0-alpha.16","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-9eBGvVBGJJCeWFMWtivl4JZg2ZpmZyX7eAAbm74dmR8/s6e3gEqcpp2Dm02cSJewnnVWw0OWUgUV0X5OsmTjTQ==","shasum":"f2b1177c2ace7881bbe5daf297fb2940c5f3de32","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.16.tgz","fileCount":28,"unpackedSize":55539,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDRzH35gYehcZktPXhWYZKZ7vmrsx39k0C4Ekoc+AXVQgIhANoBX4TCJ1j/E99esxi1NhAJYhgJYo51PRr4zVAJ3Y+X"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiVAqOACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrHKQ//frfgPBJ1SUmTvzHzsLvCsYT1dWpssjo0oEwTNDDEhFqvjlBW\r\nnGY322msojN/QET8dNl3bQTSHN7WisT/ftXGSdlU8MXeoPgzRrtiD94mkE8m\r\nx3jMvOPa0wFgzVy7u390RIv2vFpHwJThP3dkM3ec+bfo/GTvDfz3lK2cMYij\r\n1Pgxf3ABT/MDt5qMVhgxY6YPuB86maAJokicSdZ6HPLHANEd9jno6OeSL/3e\r\nrEIwDZqsBQpilve/FzzSwen3oBOY58bBG/wjTtylU8vLVWDKf2rsjGj2zmjC\r\noysv0JgJcA/MXnkZ2YOrgfnKuS8j3qwyXnPyzgHdLt4bsJN7BRSfSPQDAwdq\r\nPF+/iClBCwFaq78Zh3LT5ja7vADKTqlDmAR8VdOXq6jlp9wRaF26T8IFa4rj\r\nFR3+dK9QAzwgYWnwp5voi7eDTGr64mnaphPI/gL/zrRhBlfX/bLP03c48q1l\r\nG8rwXjUL926Q3j6XvPBiTO6OBpZ3MqEWeIrW911ew1Bp0y65+Cnbl/Xpmrv8\r\nSWCz3y2/7n+f6e6NOF7+x3F0gwntk/trnd8XpZIsQcXcdNBHLzXcfUMbDSSq\r\nP3b+BTCeD7afultvUrvMly/J/CnrV2PMvkbGvrxkhQHDf/ib2tzY8mQE6Jo6\r\nokhDcl8jzhYoQwDGhT0EkcJ/+s7FvJwpbgg=\r\n=P+SK\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.16_1649674894313_0.1724640842472327"},"_hasShrinkwrap":false},"4.0.0-alpha.17":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.17","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"workspace:*","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.1","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","gitHead":"ffb59e3d7e2f00643a41a0c746b3a5bcd1dc0828","_id":"@ethereum-waffle/provider@4.0.0-alpha.17","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-DkK1uuEISs0Bc9yuEJHsEJC1e55Fkh/1FVNjJnz2qAOM6je19LFt2BfJrlqpaWJUbnKZr0C09eL/IIL2pRfTYA==","shasum":"1aca8b78e47f8fe64d00f16d7606f8c7b8e59d96","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.17.tgz","fileCount":28,"unpackedSize":55539,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDxQ+9yCKVb1rrQmiptADZ+1NxF+iJE8XhGvxyD8LaK2wIgIqBWBrvi60ZKNb9s8VW3kiwNvDtjn2sn/LeuF1Zuf9Q="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiVBVFACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmozJA/+Ot4/wYux4+DqbZobi/auufZyZA0Mz3JdmMvDipi98eMUrFAM\r\nuluJR3wSGoA/EIdtScKzHAdZpzTQtwHKgIOLtDQtq8rp3yB2xMUx7+3OL0my\r\nAypzstynD5yoMRwr0r6UDB5GrlVAQxHPChtNECGxoRFcpUffcheraEBYbT7I\r\ngJ+6V0uzG/7bSYpu5TNLQ+3oZTBLB2ZF8h8layHl3JCrxwnJ+Xye7r88itL/\r\npKGpcSA1uPMMURuUUXUDqugPddMOYUUgNd6jWfPq9rvBldj3eYCZFVlGwoJH\r\nX6I6A3zR8cJ7hr+CBK+O4nIOLBVhHAWRRecTYyLc7takvXu0SCAu5lodL6Sk\r\nwUto/SeKm9I17n1Sx5pGj/bjUdQH+p1qMjpNcqr3ANpniXTT/NYxKq8bmL1U\r\nD5PxNmiNku2PFOQ8Zy80/79B64lzT3eH2Vaoj9YYiMqgDd6DnjpN+ray/9BH\r\nlTceBcSBaZmqdTbSzQS4I23laDB4dnvtZTYaBLac3m7d34fQ4fLGwprIGzbA\r\nttSMPecupXHeOEpjTyyIwdIQKpUQIE5FzLgIvLcbmeLQSP7P2jStIT/W2dAH\r\nr3Qu6fGJk3MP7Liv345F1i1zB2cOD1jPXgBUE6RL8FoQZ3/7p93pC28MQlr5\r\nC/cRGosFBxIylvB934XHzoMFrBH1OtI+VtM=\r\n=9638\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.17_1649677637742_0.22970019737788272"},"_hasShrinkwrap":false},"4.0.0-alpha.17.4":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.17.4","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"workspace:*","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.1","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","gitHead":"7efc91f090bdc0170667653e969eb9d41cdd775d","_id":"@ethereum-waffle/provider@4.0.0-alpha.17.4","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-A/S3sI1B/L3XrR6L1AC+GkBY9O3TLo00uViUTbXV8wkxgVQ28lcFkLWRHSpAdPybUabglBoEIMP9hhP29jlCvQ==","shasum":"18e02f60c3c38ba83836b1a9ad470715b66cb1f6","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.17.4.tgz","fileCount":28,"unpackedSize":55542,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDvy+zZNLM8dL2qxuRra7cwuRm6Nios60qNJ9ELoCnj+gIgGVXjKaXDLGJXzwbbDW6Etso9TykJmc9/sJ+hgxQ8qV4="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiVYphACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpZXw//UUwe6K2UMizfbwrgR19BVETs1c6t1OzBF/+55IFx9yrs3/SM\r\nrq879o/iuRcWlXkH7KF7qnn1JKFqsA/P08mfNvdvWNn2ag9myKgSXLaT/cB4\r\nfnCaldIaNJY/+yqBcNFj5yM2H3Jtbzkzk8S/FOXS89kLjW3kG8dV24fbroON\r\nwKlO2K6DSO5MlWMN4f8w7ICarDC5VUzhIYxYoRNpstbE+T1hB+ALAF1gZzb3\r\nqWfbk9rDGWB9medDxGfFLnJS/E70MvLv+2JBWLiyhO7HgseHTyuDBmtiH26p\r\nMVwJrT/5fyOlFeJnyC55bztRCsBUDGUZwtf8KbwSf8nWVK4/oQWggzakMM8g\r\nglNnyDjo6qARXLeB//KKGFFq1rW3uPJOlzBjHgnlKr0ss+yg856by3z+UP00\r\nT/e/+SqeRiT2zPX8z7tVJN7w8zQ8vzkkC4v8RRgfVNr/ga95F5tjC6XYw5NQ\r\n98OnfhB/XbFCOjaCNeEoiO0aq+Uy/dSelYwnIQzkmwpKQMJgqeUEME3dwaIV\r\ndL5i6/kr9kiuOL1blq5x7SQJvGLBdc1t5+HIm+Q5DET+SjlqEBrG70mFXSJ0\r\ncPFs+SjjCN8lbF8teMm2AvDPjAPIkUICG6QDHsNks6UH/2k2yK33nkXZA4k3\r\nOEgO8TnUvmqZcOd4PUnk1mhttpAfEnObTbY=\r\n=MbVa\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.17.4_1649773153278_0.6311743933537812"},"_hasShrinkwrap":false},"4.0.0-alpha.18":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.18","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"workspace:*","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.1","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","gitHead":"bb64c0ab085262441f4106111a6a051e44459f49","_id":"@ethereum-waffle/provider@4.0.0-alpha.18","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-0pdI3gk+n2Z6dXETVJ1t337xMqQ5IlOFzWzSOZlnSDSRmru8J3/NHl7kbwEReOOKW2MDOSgcAlhaHW+Y5zeN/Q==","shasum":"b54e18f2c44273e2b09957624b742b3033af89bf","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.18.tgz","fileCount":28,"unpackedSize":55539,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCey2ZnG0RKAtjWF1TNauADrHwLfjUDrnq4nNkvOmoLWAIgGv6t3M6AeXHzdDncT6ayqMTNknvD/gGAjDq/t/SoMLE="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiVqLuACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrUiBAAi3OwcCDnQiKkjpgCOZm6bqWoykgScatew1EQEPDlmtF+s4Ye\r\nGEtXtNSsZshlJ4ewRey1Q7Uf2XTgrVQOEPnt1K1Pdu/8on/XsmD7goZatvl3\r\nxoYOVbrSoV0BaP+CgFLX7nT0qCGfmRi0892UsjL7xRA7VvdrmVMR0r945k5R\r\nZaCyVH/+wffDnlX6hc9zFJxVPyRd4n9Iy/l2fxs977IlDlSgvpckURIiWKUR\r\n4P9l61EJ9xIaJ5UTj2N9i9s1IWjLnsHy1DGJQIhHx3JE/WX7DDoKRXP20z/u\r\nrbnOmupm4NJg1WYH9M7pN/90bo4oPCbXP7tyUWu2uMqutVJ9swu02VlJrhjp\r\npSrO2ySBeCunIgRo4euiZDOSjIenAB4YebK7jRkVzwMKS/cWZK7AnIpgw/8K\r\nroOlvCd9VQ1q5YQ8QyfcA76b4m9xzpAsIdghuNMp4zNKxAj1UcLiTT99bo4E\r\nb0sfWXa7adUtRZ/D8f6m1sRIprlZ4aB+V6/7I1i2wR/Pxte+Taix5ltG0FG3\r\nRgxJ0fH5TJ2A7IJ43b5FpMZiMM2RcS66GRWirH+vAVr4FkScR5JDBl9vGG0n\r\nKMARp8HbOYtd+4kRCjjypFqoRT4meVOb97ihZMk0+vtnAWs3jwBFElPbwHKm\r\nMtIciWAcmmtoOAvytYrcLe3Sj89ZqljItQw=\r\n=RB7c\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.18_1649844974232_0.037422272288158975"},"_hasShrinkwrap":false},"4.0.0-alpha.19":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.19","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","repository":"git@github.com:EthWorks/Waffle.git","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-alpha.19","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.1","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-alpha.19","_integrity":"sha512-XU2yAR5cxd3bWePKSD/N5Ez+O2lGA+ly/5c2XYS8tQbKIUQ3v30QTjZE26xo/N3rXCrsGd1Yj0+xONKWGl+Vbg==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-alpha.19.tgz","_from":"file:ethereum-waffle-provider-4.0.0-alpha.19.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-XU2yAR5cxd3bWePKSD/N5Ez+O2lGA+ly/5c2XYS8tQbKIUQ3v30QTjZE26xo/N3rXCrsGd1Yj0+xONKWGl+Vbg==","shasum":"bf6a320ab762c71ca8ddc789f358648b53aec77c","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.19.tgz","fileCount":6,"unpackedSize":10585,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGhV8yMnoRoHSxZGSwIguPuOFMBIq1cAfcK4LWW003+PAiBceOis4WQCdOGQjwM30cdQ71JASxFDIZisBIHA+75YJg=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiVqt2ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmokmBAAlPin/Qua98k4hHo8GNffvM0gx1WBi5F1XnsahKVh9cvsbOgP\r\nYjiKDysCqnfpA63M/UX/fZ/jCYQBKigGigavoYVJGFc4kSbv9R9fa7cR72y+\r\nX8wX9fzKSA+JlLTRFh6zvavP3YBJIXJ3KbPAzLQR6+EmzZEnkEH9QrI0OdUZ\r\n0RAhY6YILe786lOBtlVSNkVRqPvV6gH9PV5SrG/vuHaTkc8OHolZCwQofY5S\r\nCxCOk0Wi2AFnDHhNDINPJEhQ2AYcGhZaQIhdleY5RG1wS8A1y5Kvc/GT2le4\r\ngcXYn4jlJGuDx5QNfevU3tM+DLNHZkQ0vQE8hgS2dc5LeasCGNTtRPzAkveY\r\nDkOZC8mQozuVulBeUryvzusVS0ipWI2DVVMkC975S4JToKv3NFDGhoG6xDSD\r\nm/oCLqROv7MHTqxGUV7jNgf8Ax63H4rB5K++XGg/zlEaECSnTbRbOBVncpcL\r\nUYJvwTmVYAaVcgRaCia4O6pYxqxRHgd3T/GARoeQX/EFwssFSn3zUIbB7xX2\r\nmHevgat4bDsH7NKG7NE2ngaj6ZDr1Ioj6bLxjXrqGzkW22QGf+uyDXuE0KT/\r\nnWbuKWUZqAahEifU3bfibEj9nLo3Mj56DVpc8BYdLO591is21eHXPlDJpNuF\r\nwavPtGPKj387ZUxCacBfHNJyh1M0QMh+Mws=\r\n=BAgg\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.19_1649847157919_0.7780197673193163"},"_hasShrinkwrap":false},"4.0.0-alpha.20":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.20","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","repository":"git@github.com:EthWorks/Waffle.git","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-alpha.20","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-alpha.20","_integrity":"sha512-di15sF+SbC1JrArl3NUn4O9YcVDBq5UdPm4kqbO+KW6SC3S8e+bl2cckrLn6Es8oZRa/9vmHWhwsEUhKZHNRmQ==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-alpha.20.tgz","_from":"file:ethereum-waffle-provider-4.0.0-alpha.20.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-di15sF+SbC1JrArl3NUn4O9YcVDBq5UdPm4kqbO+KW6SC3S8e+bl2cckrLn6Es8oZRa/9vmHWhwsEUhKZHNRmQ==","shasum":"0b229ea3f81caad47099a72d5b1d8196d32025af","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.20.tgz","fileCount":27,"unpackedSize":48505,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBfuprja6lJIR5/aNV7DPRoEqgZROSxCrRbBcuyaFEPxAiEA0+zFfg4goLUgNrVdDh+LNqQTpus+cpfnYod807nt+Zs="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiVwC+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpyyRAAhhsdCzyXdgrkOgi2gZQR2Xu7iLW2brkR9hKuMdtNOQt97ql9\r\nLGtG9X1ki1WZCLVhNmGYisucaU2JRf44pOrTFX/RRBoPMh1yKoGfKIriUYWe\r\nawpMSxbtAsRrh4BOaQr4lkLoRLTz4MI7zHnD3PiM26YZi8Ha+LombMUUxtLU\r\nnoeBTHehn8b5C9+8OOyvj2etYNwV0rDDblN3rNypBVm2/E5/2BmZC3eXw4a7\r\n/dIxyAFQcpy5jx1xwA82InVA+5GgXGZUtF3ANg0dGZjNHZyoYQFdfdq9QSq8\r\nQMzXIFkH3Q9WOgbK5E1tQHIkzjKzgINsmGhzhnd9A4oFPmGOIflnkczGWte7\r\n3D1HeJ9BZgQAtxBx5X5gfVpv8tuP9t/fuK7YkycK4Zl7cvWTHm4t5DMyWGe7\r\nQ+TI45CTXAY5f7kC36POXN31w2hHtdTqIOOfXCT0IOpy3l4N3x7OgE7StT+7\r\n++zRA9PmcfTPKwD+Qy7eYm8vPmi7jb7BjCLbXg73DzdPvO+iE41KzRmyjQ7Q\r\nXTufBOUrnKn+ktC5DDp353Esl+7LgkiM1IaeN6mdaLwEmHK1DFV+P7TAkxMl\r\nV1+LWB9YhzP+zUmwlQ7kfw7GmFb2o+wch6YPohE2/2MBhUwH6E4rCI8k5WX3\r\nZUaZH/76Ftz2l1k7ampGNpS9D2clMF+dADA=\r\n=jUk3\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.20_1649868990528_0.775780945957534"},"_hasShrinkwrap":false},"4.0.0-dev.b82389f":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.b82389f","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","repository":"git@github.com:EthWorks/Waffle.git","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.b82389f","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","version:dev":"../scripts/dev-version.sh"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.b82389f","_integrity":"sha512-eUtlp/6tsnlIAI8TaD+DSJSigeTyJf2F/kYNOcJuKGZdPjIztcdnWx860yOLroL5xbdrKsjOS5gPRYDigdhztA==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.b82389f.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.b82389f.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-eUtlp/6tsnlIAI8TaD+DSJSigeTyJf2F/kYNOcJuKGZdPjIztcdnWx860yOLroL5xbdrKsjOS5gPRYDigdhztA==","shasum":"bb618e4b23ce53d52c35f751f7d04250f93883a2","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.b82389f.tgz","fileCount":27,"unpackedSize":48559,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDq6O48SD2RgHFFup3Np7I91Y6gmlkZd//epv4SVhY6lgIhALXR0iMDxz/4Fx+T2fWnKchkfxx2ucPf2wiZGmOrQ7HP"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiYUNtACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoGxg//dgFWnT5Js1/i1AgdwOxdZ8HqC+Vdgzbq2UkbyemyB4DJ4QXj\r\nHuLdvtBqeETP9oaD7zxxdKhZ1TJhr5Dn/kpLRuvWyVVYveGvGVrSOzhdRqA/\r\nXoqjkC3Uy5VDtPuA9fayvIaR+7U4rEL6zMy+PBcKeboKkyhsjKw6dNFKkIk4\r\nL2Su5ziNkRbP7Dr1oISbDvTHWn0cHZKuC6p18LE+m/VV6Jz2ZlMcjD5PTyZr\r\n9TpfaOIMkfeuIBFBEsuh9KLIhSNvpTOzAV0FV5iCpq1PBDPJfQFw1J1ZrPur\r\nH7Byze0REe6ryD7/IBg84cppEt1FSKFukHnmShrKgx+6kci4b6hsBDb1P6n4\r\nz5WVr8KwuY1HCYNk/lAxVM+oYmlX9i5yRIAY4CcCuhWX60hYgjZtEfwqUc+Y\r\notVinrJlG5fIM+QtEM6e5f4nodEtHNl86UmlbuVIPwVeyPkAyKj+DDkTNzGH\r\nM1q0m0QiYvLUnTQ+u4F+uiLbJXqOLz4+ziRBS7M2GM/XNkfVmQCKr9BsGl5P\r\n9LatBGOQ6zSoIEEkwU4gRBxKCbo2ryJOLrcPGRRBHmW+6hHlR61LOi64Xz9H\r\nmaUeuFZPoFALBVPvtHoxEwR5fDrNA97OZxpoxf+/aQkBRgMFoUXnBUSnJHb7\r\npnDaIczbYvd0+YYxfDCYCszaf6I8tExC0H0=\r\n=v9qq\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.b82389f_1650541420822_0.5558080906274756"},"_hasShrinkwrap":false},"4.0.0-dev.8d4934c":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.8d4934c","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","repository":"git@github.com:EthWorks/Waffle.git","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.8d4934c","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.8d4934c","_integrity":"sha512-iyhd2Eifx18VJB1tFGBUgDEe5WEWF1qaJ2mbA8unw2R1KSF5B2DNhnGAv9y/z3g2SXisusB/cToz6oQFlwawjw==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.8d4934c.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.8d4934c.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-iyhd2Eifx18VJB1tFGBUgDEe5WEWF1qaJ2mbA8unw2R1KSF5B2DNhnGAv9y/z3g2SXisusB/cToz6oQFlwawjw==","shasum":"b806c632f074aac0481055dd245d9b5f7cbf3d5f","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.8d4934c.tgz","fileCount":27,"unpackedSize":48509,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIH6oLwVccFuMjzNUv+fgj+9hKklxZVm63p7l5jYGyktGAiEAqn+4N6rz3/TSKL6EWtjNZFRNRmOlNXi9XqgZGGhFrfo="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiYUy6ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr3ixAAjw4UIHMJafXiemlFrmzgMZNTewE2JqE7emc1QYxfD3C9LEmb\r\n7/0lRHcPMMdEq/5c7PVTO7wb79Uq58PqP/yaTAvq9CBYsJbbDn3nhO2s/+rF\r\ng2hApOzBNES/M8KrDmtgYWEqfEkac9bM3TqbSpPfQtp8dW659thxBkN2+pgO\r\nt1jhLE10tmDJafc6sIN1Hz96rkBfHn7ktAFUPs+zP3kBWVqFoH04cLVmyChm\r\nIodN2m4rJ2qxYykAg/sNIgMwiJVMcZ2ZGi1lQJsTbiJefDBDoLOlXpkbRZnT\r\nf+BcyMKdMpPhNM8VZe8Y1iCHyW+6WnPj+5fm/Q+VzWj0P+RnhFFMfJBsTDB3\r\nLRfjKgZ1c3ofr4PdvqMPBOmXUnjFjPYHqE4NBRTJk5r5GFvINIm3cHP6vj+h\r\nfT6enKVQWOJFrG5w99xbvy9PtRszkYEmyOlWuSzyGXTMiQr4+DcXVMs4cv6V\r\nEROi63mtoq7cIfsxb0eUAL3T/sICnUnpyKfdl4peHMLSaz5HAgtfS9zponqx\r\n+ZLGNL4sepl5u+uTMQmoRMWG3yeOOnEQNjPuSiEbnrLKPZAKuckLthKaL5Vj\r\n4IHD9oy70ITzdh4bOmP+egd2XdrhRPd3hN2v46BwMVbvdWhvmy/jVSeGb/BY\r\n1E2JVa3FlSgjIEvlHzS0hmIEUYZMpi1W+YA=\r\n=DcgB\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.8d4934c_1650543802188_0.23085057846840606"},"_hasShrinkwrap":false},"4.0.0-dev.baa1b2f":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.baa1b2f","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","repository":"git@github.com:EthWorks/Waffle.git","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.baa1b2f","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.baa1b2f","_integrity":"sha512-zTuafEBOsRlZyGydWpjTg/d8tgYC9JojkYaazc1adD4hrZittpSiGIPJrokFyW+MDhdd8RAdlGX+o1QV651YZQ==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.baa1b2f.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.baa1b2f.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-zTuafEBOsRlZyGydWpjTg/d8tgYC9JojkYaazc1adD4hrZittpSiGIPJrokFyW+MDhdd8RAdlGX+o1QV651YZQ==","shasum":"31d31e906dc38a0a6598cdebc33c5a56d4f3d40b","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.baa1b2f.tgz","fileCount":27,"unpackedSize":48509,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFGtwXpMbJyzEnoliSyAvuHPQfEiWd0VLuFEaxIVgN3GAiEAsBKIiV54dC3uY0VYvazyMeA36QJEyzkCGOHpD2/GrtE="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiYVKgACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmol6xAAnkX5HpHxfEY91PchiaQv6CqQ2irDRMLxFYl5LyLk9679sA7w\r\nKnf33+Y8GSdMKEEnxmxhISXXPE2FCIu4U8Cnri5dSa4J2UhwcdShOAs0Xzok\r\nxXmv9QcrNaZtxXKnjo1lVd3L2nMYuqqOFdhFXvA8RV5Sl0hpvb/pBC9QxzD8\r\nCteZ1h/bwGbxlbqdF8O5NiFXZ6cnyZWplehtbrtbDE9O4nIDpRhbnBNbCgJr\r\npzm93JMZAZSwTqxds36wkz6ILgWk4hJRyMfkiHhjEPiYwJIiRvB/Ji5pF8mw\r\nMUG09bM8QSgANKMZCzSZnhS+s34t7Zxyaa8RdhXdX6Nr9oCGDkeltX1ehTiv\r\nPRu0uSA4Nk2H3coTUaSx4/6iRaMKxcT2QOgjphx6g+M72A1q8P1Ksm/sMqWt\r\n5SA4oEVsYS2GigO4VfYzFfEVIJH5QCGe9A4AI3Zh9/OcObu5D4T3en0my8f9\r\nQX3a33ZM1ZQKP/Sn+dh30//XP0FOFWxPICI5qETChX48qqIeE14+w/p3lxbE\r\nGz5tMlMqIxsPw5TQqo7QE8u17qiUJjbcE3QTwK1epoA3y86yMRqbe9UTQADK\r\nX2ygTUFGD7JYmwCLOt7StWmVzRrLrxIXvBP8dkqE0BKUaIV1CTy9UREWhvE+\r\nvGVmfS7ZQI/H7185/HSbjmRF7ZgvUUb4Qx4=\r\n=49jG\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.baa1b2f_1650545312732_0.26344020826503556"},"_hasShrinkwrap":false},"4.0.0-dev.8f72c9c":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.8f72c9c","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","repository":"git@github.com:EthWorks/Waffle.git","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.8f72c9c","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.8f72c9c","_integrity":"sha512-mbaik4p8SIOSwEk7Of4UbAYje8IAsIR9VA0vlXjdO5BSiUpXgMtmNe8PeBouUuBrcLVRab380EKbVTTkPRGOMw==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.8f72c9c.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.8f72c9c.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-mbaik4p8SIOSwEk7Of4UbAYje8IAsIR9VA0vlXjdO5BSiUpXgMtmNe8PeBouUuBrcLVRab380EKbVTTkPRGOMw==","shasum":"6b683beebdf473b6a56e2cd315dbcf07917bb29b","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.8f72c9c.tgz","fileCount":31,"unpackedSize":60680,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDjoUnDF95DmEIZ4nkfmhlKku+ZDL7Dh1AR1ojuka7fZwIhALRClR7tXVf8fF4z8dQYpqXxieD/7kkI8BG0KOvS7yqp"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiYV/9ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoMpg/+JLC3EeGr3T46Mz4emCodlSwkU289Gt06XYjH1qVb9iKgyM1x\r\nHfoyfmuV5zqFXJ3wrQod5kpBhJLNXGcDOf8XkyMKNsfeTftQGZmrMIaiTNMH\r\nGreli6iWaH/qlIiaJJSunDUQEfjUQbAjosJ4gQkpaXwGRqnga4LtPMeBokBt\r\nkw3E/g+82CboKOxGKfJXEljZMBtLtINPxAYvMmaCkzZBQL7ORBoZq4vwty54\r\nhAYy9GwsDKLSxhq6siqcvrEpJ0e8hKvyqPM0zJkQkkj5R06WeWNyjCWD0VTg\r\nuTA4OGH7jLx1/DgRqG8ONHjRLcfY1BjkWqa+Kn07Q9NsXD4mKta8v+1wS0Oh\r\nFWMuKAfxy9B8r0VYpXLVIu8rTLE7Iw7LKKXQchIyLePAtmGcol34N/zWpBZS\r\nqS7g8cTBriQjdImwwpTzRkc3eB/QlBjdjnRiOPbrI7iZQdk2nAeo4YMIrKmj\r\nvsf8pP/DDyZ5r/asK75ZdJoyMYAbZIGLECQrlN2wY3XqZIvU7MvZkuGRMgsq\r\nZByvqT/Bj89KxBqbVOJ+OZSQCfSx2b54vJ6pGiSLNLy/stT128Dz1NxSrENt\r\nn9z3xM44qVVJxQpimW+qLQcU2jzgaBpqUuwWy7M2f53YMNwZXMiHoenFmBqq\r\nzJS9fnaqD0QqTqXFHDpNG88d2P7EmIZ/zX8=\r\n=4vJ5\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.8f72c9c_1650548733470_0.11598267307843146"},"_hasShrinkwrap":false},"4.0.0-alpha.21":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.21","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","repository":"git@github.com:EthWorks/Waffle.git","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-alpha.21","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-alpha.21","_integrity":"sha512-oukofQ+6p9xjDNMWiiEs7xCkbQHxImCQFOu1Su3x534gjlNg5+2FV90MqSpOVzT0RynZ5GGV3kq01fqxNe292A==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-alpha.21.tgz","_from":"file:ethereum-waffle-provider-4.0.0-alpha.21.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-oukofQ+6p9xjDNMWiiEs7xCkbQHxImCQFOu1Su3x534gjlNg5+2FV90MqSpOVzT0RynZ5GGV3kq01fqxNe292A==","shasum":"7050c9dc8ade6cbde9b455a164ee4efa56b4c4af","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.21.tgz","fileCount":31,"unpackedSize":60676,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHEhhaPHbjjsoDKqhIyKr52Oh7/T+h6t4t/OH6AgoRrGAiAkceJw6leomjLCJzuSGOpjFf2WBUP8Au4Z3HmHFiDHjw=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiYWLXACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrDIQ/9HvUylbHeDlPsgXGf6bmaNxleZE5IQyJMNuC7oip2m3FXvR36\r\n53ryVABADKppOHVzpY76ZOqmiHkDDWVLwH2GBjFqhUh5IWPdDgWoJc84eAIG\r\nJTG5qE7TSQFEYzZK2kwviMnOqj3A3eQZomd/rrHibiLWU/L1gYOJCrhY91pf\r\nit0HmyXDuXucsAZuvtLF14u67bTrpK5qWEME1kVedPk7r0bikwKhVgPFzYLd\r\ne5Qd01PjR2eGia3QE34FpCdPY0e3xbD9tG6D3eNSFrCzZv85LKw54pQIGoMU\r\nl2UpBjTr9sCvmm/zXhZTQzv8Asz5lX0eS7yqim5ZV+k0yCAXf+qF9PiRhEij\r\ngP+bRV4BlGj5WSDZt+jr71rHMB09bUewnhrDqvgKodK4MoS5SjFKnNwMeF65\r\nEfSqHeJmjXNcMXG739/j9IVjGIX/vG9mv4cpGC7tIW5VhNAJ4QYiN41RWolY\r\nQpBGtGS3iDJOwfQZOXfcWcSiMx8D1WmSp9kW3CTF7kENnt9gYKbVsq0bSH3S\r\n3vpZdz8W9yHrhToTjnFR+WBVy5HGcYllwEgSpRTN6vIL+QdFie2zRZ58BzvT\r\nQPWAAeijK83iEhGSiev9dXARO7bWWrefPIYh8Hvqy9SOcqAz9BO5/uY67pW5\r\nYp0NnZPYxwbDKzxh+1PZp7RrXu0YjSBMyW8=\r\n=3LUG\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.21_1650549463103_0.6030135473122697"},"_hasShrinkwrap":false},"4.0.0-dev.51e05d8":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.51e05d8","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","repository":"git@github.com:EthWorks/Waffle.git","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.51e05d8","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.51e05d8","_integrity":"sha512-+TP7X1VXpZsi5pdTxffrt+KAvVOBc9G7J3XD5uOdP7JZoW5eGnx/2qngUYpI02goF9WUEH3XsHYVOI2c8EJuEA==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.51e05d8.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.51e05d8.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-+TP7X1VXpZsi5pdTxffrt+KAvVOBc9G7J3XD5uOdP7JZoW5eGnx/2qngUYpI02goF9WUEH3XsHYVOI2c8EJuEA==","shasum":"919c8d00d829a2f8d3fe17adfe147ec52b5e41ca","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.51e05d8.tgz","fileCount":31,"unpackedSize":60680,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCPy4MooMy1gXHRDS5N1LJ9cx0d42Anq6wx97tX2ZDWaQIgATs8TahHbtbRk/Q73PTqZBrVERrRLkZ+XCvKzPeVljA="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiYWNnACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqYfg//UHeE6AyvGYKWMWBG+BuvPJzIymuHisvzhAiAi8NiW8+we1KM\r\nfG1k2AMvVA6XYHBgLAfZpeUnIJO99F1uwEZdTiELBNRp+1wdjOngrV5hNQol\r\nHl8+fBJdexqLuRR20NtfI+1Kj/SvgIVii5cS/gvDo5oP5VNLHdO6oei6uyEI\r\nTLQ0eNEEJ4ArVXPaDSLHbfn7B7IJO7UodyInIcpIhQfRjtJkqbIElKM0xbAs\r\nQmKoP5+8Z7IQdYkZ+L+IBkIQ1u0z4cXCJdJ1vUn9jvp847jqdifhRKud8cm4\r\nkMUBYUWoX9LIDX3uwuM7RSgczRE45Rfe+n2UCtSR1EmZcWOCGnMKJKSIihfq\r\nUAgATAK04wPiOhquMpvijPTu8jjZxaFqpbEJO1CkLTB68lGW7Z6ZyDZuZSw5\r\nIW+E9eg+tpB4gFrtfS1nLGbZ1nP6TAJ6qHaE6ipT0hPJM2qSwRIYo1nzJwJE\r\ngPX3c1Vhj+5GGjO3D3OeXYBbBQtgiTr8zSiQSMqWgwkj8MVAv9jGk3rweLat\r\nbaS7qFtcWJ1BtWwGwqxIsOq6PMVO1e8vducUXzNJlGYK6+tZPKNRFcgcI7Hj\r\nGxlOvHN5OjTy8Jv/BchMClfc6YKz/03qpEPycNbCCJgM3edj0dwpgbWFEaPf\r\nMPy3bj8Mzk85tJim8+kW4Eiz1Ajoda9rsjM=\r\n=gEi3\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.51e05d8_1650549607796_0.9589475309197255"},"_hasShrinkwrap":false},"4.0.0-dev.498bffb":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.498bffb","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","repository":"git@github.com:EthWorks/Waffle.git","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.498bffb","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.498bffb","_integrity":"sha512-+bK6+K44I6goVuw8NvGDzJoYy6p4Dv9INvXE1UPRDk6v2CJWC24qUShIN3t9iZ992N2K9J7nDcoRFEt2K2bA4w==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.498bffb.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.498bffb.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-+bK6+K44I6goVuw8NvGDzJoYy6p4Dv9INvXE1UPRDk6v2CJWC24qUShIN3t9iZ992N2K9J7nDcoRFEt2K2bA4w==","shasum":"af1356ade3d7ce2d350f5c67239e654cf57adf77","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.498bffb.tgz","fileCount":31,"unpackedSize":61045,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGUtX7G5oFUDR7TnaTbdNYzpwPwaGKzneySwjXOTMmttAiEA6FIRuJDqJLBXU04i9ZKFMPOIt9HahS5CyETpfKYZGnE="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiaVORACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrsZA//Qul8RJEWI32N1N2ga2xoAoVOuJUShdmjHHcV/uscKvzZLumf\r\noNsxEbdLfb+rxgKZsrGlJwfozgQv4LAtw4sc49d3zf4T0lQh4Y4Ufze5WVkH\r\nkxYt5Mm9kqwXHkaolJRWglsUZTmuqFEo/dhXpQAgRELW5WHh+inBGb2q8bRX\r\nNI1UNWuYvyQvuLYju4vTFg6GnebBaaiYdvSkWRhkYZbBcNYkpC/b55CzzHWX\r\nCEkHJO33BYiAMTTZJvVSzovYpOSlUrpCHFQpOVOFgqUOyOSIPeLU9lryJD1P\r\ncBi0PrUwcs3YzhPoGbPyX+IdYQHz+BU8PK8QZ4umNgy1thgZfF50YYedGONe\r\njNOPKb8PvPb+vKjCu4VWiID+UTZrv/pFxGJgxhC2qaak+IvgeiJNBVT77aBk\r\noz0lHjB0Yf15S6JKMCjn246/+DitkYnK3gTNouwTzsVXlsSAJE3o+PJiEH6z\r\nPEbQGGbzgxgapc6sbDRM5jUDPkEhQuBoShNmj/FAyaaXwFfqgK8Kw4dOTlPe\r\niNS0K/U/bxeuPvF6g5Nyobrh4hVW4665rT13FsCbQMa+BkydchJ4qZB+2Dl2\r\njrgf3VWPc+DqIb+eLW1dGKo498S8IKaqUJ48j7TdojvRJvoqnjkDmnzXwU7Z\r\nO4r8xsE43N9KCaI7ATwJEe+gUl6hBTf390s=\r\n=UcDz\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.498bffb_1651069841540_0.06935716688954474"},"_hasShrinkwrap":false},"4.0.0-alpha.22":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.22","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","repository":"git@github.com:EthWorks/Waffle.git","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-alpha.21","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-alpha.22","_integrity":"sha512-bKv0W0KO/UcItfa5l6e3YYfiDEdgBQvtj0yCQz/vCLkjqSE+ImlsYByHFWlXHe5tmN6V5XXvR3ri7SM1ku4wtA==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-alpha.22.tgz","_from":"file:ethereum-waffle-provider-4.0.0-alpha.22.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-bKv0W0KO/UcItfa5l6e3YYfiDEdgBQvtj0yCQz/vCLkjqSE+ImlsYByHFWlXHe5tmN6V5XXvR3ri7SM1ku4wtA==","shasum":"a298d20130a8b94f0398b2f4bfc2b26e1041b7dd","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.22.tgz","fileCount":31,"unpackedSize":61041,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCktj3F3Eg4zjwkjytBDFEdgr4m6J8F9HZS90h9zmN8nwIhAMwTWI8/2HRcW6rJJAn6OYi4NXq8zXukscluQglJ+CwT"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiaVXWACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp3WQ/9F9Giy8kPSR2uKY9+dZsRFheEReRNQrBnv9vPZixkmlzZsHNW\r\nq8CAn116FyYoU9LWZSif+TNo1SuyIpIoPJ8jxY8dR4ic54JyH8QnD1S/WuaQ\r\nUDFFFDVe+KNQQjUkdZI8wwfYBREHftwT10y51GsRxvGC4HF7AtyMqvOXdmrU\r\np+W5NPPpI3io1jco0Clv4AsKEqxFI2wJtjyutz8lcBkETsmeojMeg6Wlgw6r\r\nihFTdju4v484puBz2DwiLrNGtCcblJiqb+9PB0E9lbflZs+DT2Eyxf40hGk7\r\narmqjIjQL93rghUPOgxfWRSryDI4XqBk9elAxsoVjhLUAGwFFL3Y1gxZylCn\r\nRcw0+RDaVSafvO8HoTbhgNb3YQqdsKR+LhbUejFzuhprtrmsNkP8Ch2Co7yV\r\nSmZLQw3DN4KidTVXuAJyBh2GcpuXwkS6gAohLXq4TwpyQm+lWhOwQ/huHLTL\r\nWOI+MUKqpNIc5glhnCv1PZ/3P4ueCSHeT/TH55T0ndVyF3f2X4QjRnj6qPwr\r\nOck0S9oPg8tgNLitYM3yzGOnTCologUBk69BSbGg100vLZGlCEmxUYRdHuQM\r\n78n90+e5NJ3rwMhhVUQ7qfcqepr4SpP6+L54tmduEnoYFR4M6S+mPGcm3jgW\r\nXVTXOe5NYgQLqM+OY4ScC367bxUKN5f/2T4=\r\n=QfQL\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.22_1651070422584_0.3715072136992079"},"_hasShrinkwrap":false},"4.0.0-dev.de3905f":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.de3905f","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","repository":"git@github.com:EthWorks/Waffle.git","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.de3905f","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.de3905f","_integrity":"sha512-i2MGwQQYZWBWorPYvEAR9IK8A6vTCQVxnNn7Q1RBSUA3sqBMM71V0RpV7GAijYSL+QeF3PXoLgT3QSskKAfk3w==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.de3905f.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.de3905f.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-i2MGwQQYZWBWorPYvEAR9IK8A6vTCQVxnNn7Q1RBSUA3sqBMM71V0RpV7GAijYSL+QeF3PXoLgT3QSskKAfk3w==","shasum":"28fd52a6b10df1212f9f7f3392a274af5613d97c","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.de3905f.tgz","fileCount":31,"unpackedSize":61045,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEWG0yl/q4Lrc3SusihAdyukfDYO2B1Ug66t3Ao7zX7TAiBy2WJcLnVBg6jM4T0ZzSNP6obe27A84emh2lqE/3ciqw=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiaVZsACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpi5A/+OzvFpsTxKhvUk1B/qoGqepHgMRlkTAEs3JEpVeGLwS1xVM9n\r\ncvVUNw31tEw/C1mCxdo3nz/3qWn6q1KXwCpbQPZXj0lXbzl/06yBkli0bnQJ\r\nEbtJmHDfHxhVN9BO/yGe9Ea1ezaynZaxksH1nWQaVSjhfux5yd69oEdZ6C1r\r\ngjL5mlrM4caNvoBJK6LriIvz+CDVT6PzRJx7JLDExuMU1ChuHEp2ypBlYAyI\r\nZIYMDLbs4+ftnchJZ7y3uoL0/MULMU62Skiv1lnEABsCuqNhfjxY41H6QPb1\r\ni2rCh7LywECPr8cxSrxcdt4zlOB8oP/a4aiVGRNUXgUdTBCekktxX28zlAXy\r\n5p8y+C7Yp7224ZXW9L4OhfirDZRVXhB/L9WyUHxLpSBjUamkOjtGAwb/ATeY\r\nRsDYUu2A39mGXX9ywDxAMmN8zrLZecJc78cnMvONBYooYEwdlYkW6EHMGTEK\r\nsdWHYl1qX6+JPb+N7I32r0+spokKuJHTgeq7ErGQAJ4+rtJvhpC59aoZ4djy\r\n5vwHEw1MXxHp6Y2XQw0mZCOr8rx/U/O7gblR74J4T8hTbLLpBVBhgdr0smb+\r\n/E8DgbDZyFh/6WRx3ebul8c6c5VLixO03W//3e6ES8RscMrd7n6tlEyZ7QWX\r\nvg8r11aSd90rxG1jA3dXqmn7TWmiCRtF3EE=\r\n=K7rx\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.de3905f_1651070572276_0.6534799906740196"},"_hasShrinkwrap":false},"4.0.0-dev.0e1e2e5":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.0e1e2e5","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","repository":"git@github.com:EthWorks/Waffle.git","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.0e1e2e5","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.0e1e2e5","_integrity":"sha512-feMg8lrzzhhCLpt2xDKmgkv2xczGBwGOXa9LQ+ROAwE7zmVEVvxHwvuD0ZMVCWgytpGg8+oO0rt8y5XpXGpB7g==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.0e1e2e5.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.0e1e2e5.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-feMg8lrzzhhCLpt2xDKmgkv2xczGBwGOXa9LQ+ROAwE7zmVEVvxHwvuD0ZMVCWgytpGg8+oO0rt8y5XpXGpB7g==","shasum":"854bb147e9fbdb137ec91225e96f0ea04a0ef561","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.0e1e2e5.tgz","fileCount":31,"unpackedSize":61045,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDqrcvVcA6FOBmIDEOcZJyOvC7OVKrN3FDspCzA3+Hk6gIgLD4ZBLtaj/gZ76PPLsIc7Th0ea50BNpSYD37+eChc94="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiclI5ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoUAQ/9FMVIusq+DiXSijhVPJ3yMPrkG4YENH8gleoQd6bqEn9lID4h\r\nKxU+f5zOe2Cg6/3o0Mm7YdeduSD+HMoGuOrq+nq8+EAPHjgeAnQBab/eOa7V\r\nU0fOcKjVBsEJuYfVH5tajaGORkVPyUwX8mxOShr6FUH+hZZKJcd17gSqewEi\r\n1eXiYylfJLsOwVLAXDF5SF0Ot07e+O8n9hmHIuc9idezk/xnCkfK3hwSWHnF\r\nyhN6SMKa/3u1VULS2OVJVzK0h+ZqaaY10zH+mVFo8UUY1SKFqyr1Vyi8CnQN\r\nPV54Eh08lUVJt7JAZ2667ULY0NBr1DaBqhgbjLD9Zj91pZI44NndtcYtau+W\r\npe4Zp6yo+8jRrCofjZvqwfWN74GM46yS5MayzMRgsnouD4uokYzZgY7PhJ90\r\nrQxvg0s+4cxR8kWphKmWypEB6mjRQT714CloQEmvYPIrelsU6s+MHEsQ5Pe+\r\nvzXYTrEArjL6k6x964uIPSAaBXC8NFghF0+OgeFQH8drYP99cHPyix+EKp8S\r\n4YcuxyIMebTgQ6sOvoFWVz+9Zi7ELQk4660QD3ltodgp+wl+uzDszNJS4I95\r\nUaPvJHxdjx1htt8vJsjeCzU9zH9lMrWqJMCGny/2h1Qxuk9iRZAXMl0sogsL\r\nObZ6Lc3It5jRQure8fSNoKI4iHlnPnfpUoQ=\r\n=shEY\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.0e1e2e5_1651659321287_0.4309835744342674"},"_hasShrinkwrap":false},"4.0.0-dev.b7bb3ba":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.b7bb3ba","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.b7bb3ba","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.b7bb3ba","_integrity":"sha512-CZ5lh8ANErxy/nwUv03xru3haYcVcuvQ5gcnJDGnyECFSfwxmfNq7LdkE3ddDB/OBIrUCoryq7EQBcrD+rlHgw==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.b7bb3ba.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.b7bb3ba.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-CZ5lh8ANErxy/nwUv03xru3haYcVcuvQ5gcnJDGnyECFSfwxmfNq7LdkE3ddDB/OBIrUCoryq7EQBcrD+rlHgw==","shasum":"243b9d2dee3f4743b8662c166d6a38a3e7b47b66","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.b7bb3ba.tgz","fileCount":31,"unpackedSize":61045,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDEmQfswa69BFtIKmHvNyPIk7Y1zGDfjsvYaCBdYXKikAIgf76+guwvsfhVTHGA5mKiDNY0irjgVvYWpZaRH85M4Fw="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJic7RwACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqElg//UP+USrn3YKc1YA8LxwMuyDO3qxyBYI1UpynVcN4Q6fpJKWl5\r\nchFKOSpCj9KNsjuviMNBRiHgcdsHNcpr72nmqUzryMWkFvogw4nXrSUQCDwX\r\nxCYW69NGH4l+HH2QukJvUc92PO6tDXCE666MewkCI5wUzUOsT2B4cNa4qKl7\r\nSwbRdRb75IrRhg80nQgBlzK2tmyDYU1y4LbtyGJM02mMYYyY758Q7iqoQyWE\r\najcm3DEpc2f9JjNwswS26eBa8yr2RIILzKSTv4h6GTiMoNxBaxJNntYNuitG\r\nY6pewT1IMAUUGa+Z6SNX5c41jrA7QnNUMUr5Wm2b497e0/pFTzGx5NHCqLXI\r\n7RaHEqXS9f9YapONNpfPS0RjYCePZ1V/p5k53PvNkpkzZRvrV97oDi3o+JLv\r\nrwfjgQlZQUTeQGT51jaRnthePi2ZrN6sElVKT/iGOSn3iASnGGsySCOw1Zuh\r\n0BU8Gl7FRayxxWOVP7THnIM+QLkUyHlEail3+tadmIsndtrcqq+u/+FyBKm6\r\n4UolIxgOdQfxozUGJ/zHg1JqAl0mbdnrPtJ08FgRegrllrdFAjcsMon5W0uf\r\nmuYZ+BvxHxVTCdWa7w8CSdYiYn82uoIhmFlnLHzfzcdKHnxVl9+m7olUvGjd\r\nHmtdgFiWsL/FaOlGpqJQdJF+PrX6ff2+fTE=\r\n=+/Uw\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.b7bb3ba_1651750000018_0.4128087267813214"},"_hasShrinkwrap":false},"4.0.0-dev.c694a2a":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.c694a2a","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.c694a2a","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.c694a2a","_integrity":"sha512-yAPyDu5On8fUss80d+YbQM9kVWd7d6SsKc/MNrFoNyHvjEKANC89YAABtqW5hqj0toPGae/Hb5p1vIdLnaO0pA==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.c694a2a.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.c694a2a.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-yAPyDu5On8fUss80d+YbQM9kVWd7d6SsKc/MNrFoNyHvjEKANC89YAABtqW5hqj0toPGae/Hb5p1vIdLnaO0pA==","shasum":"2c5002290cc2dc79423d00ebc02d6368cac6ab8c","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.c694a2a.tgz","fileCount":31,"unpackedSize":64536,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFId6k+u4p6hz+A+63gPTYqqQ4bYjpwBi+WRsOgHStDyAiEAsCi1/5CHglLJTXPTzQrTItRWREHuWw1F8nZYCvFHqck="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJidOOLACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpTZBAAjXH9rwN+NqJfCQti3tUbJLR74krCMhU2cPlnqjHwVMmo9HR5\r\nZ9PwAvpggZaNT66pdhLPTs8pFS34/Wksb1pVPUXH9NoZ2gfwDPD+v9M7R4lS\r\n1kuonypIqIkhrAdI7dUiIfKFtQV5Fqbf9sww18CWzGpK55GGQaRMzVopoGdt\r\nOjdWlFs6BRLIGGo4f8LbZvXOqSwXV2eHUeECqXOvEWZCdFMUu4cAD73tcTS0\r\n+vHWwa4IUXR0oi2SSDySoUgQu1GEcB9hJUpRUsEHhEjruU+C0Fuu0dd5xWKS\r\nQ/b+QxDSJiQPCCFJeKkqcItW7XGMauKfylbNoyv0te7dpIfmPcwBTNKPQbsb\r\n3WVltbOWFDgcKqIPlRHJ4E00XqWkmZv7R5pPMPSjpEgNCLOphvcQd167Eqdx\r\nI+EE20WgFy/ivmHNCAcH8l+iM0dmE4m60aZwfQxm20WQr8ioZQmRNy9rpnNT\r\nKxDqjUTVm3seKFYImb0nydFnISNawbMhxIjhZ1C3/Np1D+cg+2+Oq5kfQf7r\r\nka84sV7i8ztoadfVbXbT4iLk1p5M11tkCJQdlwV7umnL9CBIyzWS5w82oL4S\r\nAlIjt55Oshatk0qFwStHLC7JOojpvL9gfs+O8CKuGAnI+B1wLIuGaRk/3t61\r\nI9ZQWhZ7ZjKzHp4oxW2dekZsqot2qEpUXz4=\r\n=e0oa\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.c694a2a_1651827594956_0.9862615589744528"},"_hasShrinkwrap":false},"4.0.0-alpha.23":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.23","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-alpha.21","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-alpha.23","_integrity":"sha512-HSeZx4kNRlzWhgUZ4oTeDSvaU4I+y1nokZUW80YaxmQVdmaFTq9J7z632Wn/95YPNW+4+Dt/VtUWkqs1cg5L4A==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-alpha.23.tgz","_from":"file:ethereum-waffle-provider-4.0.0-alpha.23.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-HSeZx4kNRlzWhgUZ4oTeDSvaU4I+y1nokZUW80YaxmQVdmaFTq9J7z632Wn/95YPNW+4+Dt/VtUWkqs1cg5L4A==","shasum":"2d4ba578e3a376a42ed9c5449049423af4bb4062","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.23.tgz","fileCount":31,"unpackedSize":64532,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC+1Zetm9tznLNXgHrlBX/kSkH76HpiQan/KEuVkintdAIhAPui1nU7RS+ZtQZHVcADy0AB+a6+uyjf85jEaO3sZBIw"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJidOeHACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrGVQ//dNeZv2OOs+Tk2DI/LqhXV5fijGdGIwqQaJYZyf33s8DNT0LA\r\njkvRCSUZHc+rjadgFkPMhcvaYGa55cOovJ+JrIjpaDfaUyMZ3O0qy97/bMJk\r\n/DJGW7ls1h6wroqbQi4sTxH01UlVBl0RKk3ipwVURtra47dKQbqY29pk4rtN\r\nyMy86LeWjgvit1D/S3JjG+G9AhHrMD2gqn0ZFC+Ib+Ly0y7wusU9SvSdFztO\r\nwdS/Bsc6c3wyjdMD5/bMJXIZQIqLwB1ve7oKGFyV6h9hsGFcjPlE0prnFM8b\r\nbS0FsfigDKSKOHr/K49aCFICIgZttYroEikuAWfZLNiVgZRmX8/bwuXQYZUx\r\n30WcRdJlseDfvxn4fqzm8/ZVWQsDu5zDTZWTtMn6+CDwjN7wF52yAQXWaMD9\r\nlbdbzLO65NYGo0cBB10ccAHqzzaIbRRhmaiDSlvy90H9ioYhUP3YU1SDsvD1\r\n5dfXWbnXWsLjUyeGJVbKDsVoftpXbYgty294G8cAInA0+eqklFm9HWuurTOD\r\n3DfS0LDMuByQQaCupGCk/cM8F+9iVUyamc1yF8tKvdfE1spk0ZuejCJHyDHP\r\nZMhVVd7GDxuFgO+heyA9MkgEAvmFGHYUIMvI96I/kYHs1UTaBjJJ1/jib3Zf\r\nxRR7UfUb3UT5eIl4ROulbUu3fbt8qh9/7Js=\r\n=9Fvv\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.23_1651828615418_0.698997512712257"},"_hasShrinkwrap":false},"4.0.0-dev.ba7033f":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.ba7033f","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.ba7033f","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.ba7033f","_integrity":"sha512-0V8JVYUJzn9v2K4rVhhlyALg/qbHvd3tkGF7hkDtOST1AfxazTwbDLUULtkoOtnvip/uGAKUU2NEBYyN5p4l2A==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.ba7033f.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.ba7033f.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-0V8JVYUJzn9v2K4rVhhlyALg/qbHvd3tkGF7hkDtOST1AfxazTwbDLUULtkoOtnvip/uGAKUU2NEBYyN5p4l2A==","shasum":"3e89b309c86bf3824be95f320cbc549ae9203928","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.ba7033f.tgz","fileCount":31,"unpackedSize":64536,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGOBtCZpkA2gQ2xSsB/Lbj2LhKyMhTVfNqRIAzWPk7X1AiBK13ffUJwPOWpG8y59cQkeG2gtQqKcPQt8cY4V5A9WRA=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJidOgaACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqhKRAAoEk2QwhpVm5lzmKndXyHwdtLyJFiRaC7CD3FFB4Bl6lDBBfV\r\nShgzm0ZAQp+Ndx9tmH7ZureJpy0YQl5agOEy+StE7WRI/t3j/En6WELFdtLt\r\nYloggjTfQHMMgxsIk8rUQqshiVr4PYnvVOiC7obMJ1ojb8DLjM/gQbTDbxaL\r\njGa8sxxRy63t75VUlANI51ZCheZn1wKVOrz9bgzaUayqVxErkhQVQi7yOslR\r\nIZLeAc5rrgxy8Xt5n6J99vV9qczh0g6FIyJNmTKsxZJuYz0KXP1iOiJ8FWhu\r\nlVlanTnEyZBTaGV71tYCHnDulEef4Wbmd312fDp9e1b+CLY+R7DdtTv5d0gt\r\neFIE8FAPzIc5IufGB5/zM3GGTueGeAo3hQSX2N3i0dn0UhYSvQbuJBniJjNd\r\n6NYQlR+wpovWPRpyXBSuvFB7NrJWQcOXjc9sS/uMcPhp0PQdvYoKpctY7XdQ\r\nQ+6b9gpwL9lETgM1bQv9tcnRSa5DSQhxLpeoKeaSJ82eFh5LKpa3xlvfvG4B\r\nS4XNPLXn85YRq3fYjOBIF+Whr4WK55ZHS6zFfADZgKmS/hGzvF+QMrdzIYq+\r\npvJJzKw2VUazOU5xVbq5zSpRtfYj2BuBSgxHkrvTm9Xnq/l0PltjjjXLh6+Z\r\nXveae/DvKbE5uPK+RhSE6qziIr/do7bAC7U=\r\n=qteU\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.ba7033f_1651828762594_0.6115766819705548"},"_hasShrinkwrap":false},"4.0.0-dev.bc0a5b5":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.bc0a5b5","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.bc0a5b5","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.bc0a5b5","_integrity":"sha512-puh7YULT+16QbPdR3YRe6J40PjqNXZP5f0WCEvmVUOiQjigXAcR8NC8hgEfwXSKYHVv+9+/2C/3qj465O0Qgtw==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.bc0a5b5.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.bc0a5b5.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-puh7YULT+16QbPdR3YRe6J40PjqNXZP5f0WCEvmVUOiQjigXAcR8NC8hgEfwXSKYHVv+9+/2C/3qj465O0Qgtw==","shasum":"f8c77308fc89dd4ef31b5307bb48c7370ccddb32","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.bc0a5b5.tgz","fileCount":31,"unpackedSize":64536,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBVMTgZ38mqMXfyY5J4h1KIMT9iJbUlulMeiz5pC34TXAiEAsU/sTqez0X2Fc/M6P7EYsPoUuI+4gQ6CwkruxuLJGhM="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJidRYZACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmoqjw//aeHy1Q5gIsn8FnMf1ocLmDuwYuROjE6vMoSgERdgTHdKGsYK\r\neFrBhcZP8CB0B+AYtVGomxUp5pvtmOTkTaH7nRNh/cvxf3Sm+jPg1WNHZBJN\r\nG7A9cgfHJH0eZRcoiwHdZxAiHbDsdI1aTpkPH+0oKixNTqIw05Nq+7Tx7dQ7\r\n+qUP2r7+gdBzLYUkYDJEL+1BaKe6AXs9CKteyv5tixJ1aq4p7Cpgz4teH6Ty\r\nQ2TZybEiPS0HI+jdLDPSCZlwZcJnzx+4YcqdtsIKNnsqRb/cdnVhJfkUAc0G\r\nfm/K1Rr0adPrOEfMfPq4au5lA2qjCld5VysIoIqtmmtR31zD0mXBu0voTyTi\r\n52/JhrUNsA15INtABiYty2estBJ9FqarsjKR4Krw7wvVfHZ6Dzxv5OwWlKHl\r\nGQBC/iD+mzeycWmXG+UiGu71F2l0IgO5lO3NtvV6wMClbzy0KZilMX02TdcO\r\nCdCMXdcDALzOxZVUXgq5Gs80cSXNmW2YVGBAZHMdonhX3dokM7vLdS8B9VqV\r\nhg5p8Uvfmj5PRFCRYeUasNrEe9Jws6FGJBTBqnxK7ajjxDJx270qu7P4SLhI\r\nLsSKMwJBT/1LfyITJbq9GXtO9Bv8TdMgJK5wIl16+4AcQPjvq2c08AsCTzFn\r\nmKWZzOEiExux73LvNQgUd2BGchHOpC60Zsw=\r\n=4XYx\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.bc0a5b5_1651840536792_0.16475603821758034"},"_hasShrinkwrap":false},"4.0.0-dev.900b71d":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.900b71d","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.900b71d","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.900b71d","_integrity":"sha512-3uYDUR+JsRa6vfDYzmKKfUioN2Z+xHM8/1Z2g8FTPZCF3jdFkxm5toL4PF0y1a+fCqikDQUVuaJSVSxSD1zamg==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.900b71d.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.900b71d.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-3uYDUR+JsRa6vfDYzmKKfUioN2Z+xHM8/1Z2g8FTPZCF3jdFkxm5toL4PF0y1a+fCqikDQUVuaJSVSxSD1zamg==","shasum":"7dd95e2693666c08b43a621592b4d047afcd8c3b","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.900b71d.tgz","fileCount":31,"unpackedSize":64536,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAjAJAHjh/E4+6RuDuvtY3IAjiMfFb7DyGvfukhOylWiAiAJNG3Acc+oX3P1vzH/WmQGwkHc2mIogSNEHdWq9lDVuA=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJidSu5ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqlGxAAo3LHFqTGhc6WhXiegutwvy+jfNXzzF2VXQsQJ7Sthoquqlud\r\nTMzTSpAAOGqs6rzLmUNhQ2NdLGQ4iIa2kXkZlu5ZJ29LaufqVmfxpUZMywLm\r\nv2pbHQ8sNqKbZU+fOCFEapgUNEToKbAr4URudeozN3mgwA3GXu/jIZ7j8Hpe\r\n7OU1i20hXuVbeNI+dJcC7zLCX8p6FD+1KTSX0wxxhMo284iW0MlgxV8EXo9p\r\nDkOe252Xm9bTwZ5dszczMDT0HJlpBJqJ3iiakaYnZxFzVKoUX5RNrCAVht6m\r\nVVIJd7nwRnvu9cwu+z9UmL2naI8x7q8Fs+YFO3Jy1qrkgQzgFMyYvrxZ6hTQ\r\nUv5EA9fCniV3k6egKvqKRunCLF8ZL9qZ351DOwpb7CVyl+y76beUmlaziKnF\r\nmMTm3ga8tXN2VvKmGD0VG8hQlL4XxyjfgrKs3TZzgdw4TW7Sx9N6YpqNenUE\r\nzsN93OSHJmr6VYgW6sxOrSlW+7SxaRNOZpAnRlBsHPZYzF75Y3cJxUk9/rlQ\r\nABwUy3UFpkVrmmwi0Sl7U+Q8WhvOmiVKosrctR3gWZe+VhMibxSQrY84aF8c\r\nfGPHM165VOnjdKXQIFXyPlm5Y0f4F1Tso0mDjY8ag0h3kVz0wEcP+dbvgtf4\r\nCATt5zgXHiQnQb9aTivM8yIpgepzI+ohkB4=\r\n=Ypad\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.900b71d_1651846073275_0.5233279550351837"},"_hasShrinkwrap":false},"4.0.0-dev.ba8cde5":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.ba8cde5","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.ba8cde5","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.ba8cde5","_integrity":"sha512-okwc5mAkbtryHMzIyOLtSdv+albG9vGW1jpTMUzG2Gjky0VD1ZQqcBkOUiTMO8nBfDaPW0Igf5Tst3Ox0zqyvQ==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.ba8cde5.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.ba8cde5.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-okwc5mAkbtryHMzIyOLtSdv+albG9vGW1jpTMUzG2Gjky0VD1ZQqcBkOUiTMO8nBfDaPW0Igf5Tst3Ox0zqyvQ==","shasum":"cf8de302356479fcc9cae3d3d741d069ac6a1034","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.ba8cde5.tgz","fileCount":31,"unpackedSize":64536,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCbA2+KvaMG2SFJGh7WJ4BuW1M0quK7ylt39tMI1EerAgIgbLiRKBDC7i1o4MmmCaHHXnP6CCJfIFysJlEarbRqcoc="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJifh9QACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmre8w//WBItku5PV8Or0NJnFKa2xwZDonkyOHT3W+7PiVJXIMZ89aR6\r\nXaLMEjpq1rld32d7N/LhWTZgVujznXH3uhNB1QtW/DeOeu1ru20H20Fa90br\r\nKlz1JX9VR6+bslyMzUYgAI08YpkiW3ne5GLyGn20negBp3MsFieGxK8P/KJM\r\nUlbooEXwrf3xN6mmiDpki3ED9i6Ow0DO44XBIWvHPlpEILQs/7eqVc5yL+xa\r\nMY/D9ss77SX/HlzIBiPYpKUbPzw+1y3XojxWtlRT+BFnneCViJK/wnWnwy/Z\r\nF7G6CI5FCy93vstIFpsB7KYYMuKi13xveO2cJ8mredGMA69Uz9nUjZCu4NPY\r\nKPZNTOIcJFXCCNk6QmjfAULbcK+zXfy+MCIxw+++BRv1cR2JZM5mIG+/IwOQ\r\nn6H0ryN4hfpIo0CDR4MawfLjGbxKNmdOngNvUZ6hUqiMwL2YeM2MJibDv0O1\r\n+XFCfxc7KpcPFQTYh63OMqyLCGk0ABlWrnxOi7/CSMMA23Y43AGKqDVPBFDA\r\nnpLEbjLQUNb2C3UWv+5Te0mx0lcWhxFH8pnN50naW2LigvHIhxw3dwohOXxL\r\nrsKDc3Dt5C35Y7G4uXD6zkGumTsETj3bgcXr/XXM22Gu27eu+nhJ1TKjD13x\r\normBa8le+m9GOmBsxGsClgmpu/4EPaz1Ebg=\r\n=VAIZ\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.ba8cde5_1652432720501_0.3764196756904823"},"_hasShrinkwrap":false},"4.0.0-dev.104f4a3":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.104f4a3","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.104f4a3","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.104f4a3","_integrity":"sha512-MxqUO7tG02ioGyGdEigqqrsMfmGw6WvPfVMktrj6a8mN0MMODINEAtyhjh7Vhusmm+R6Ie/uylDfS+tt/Mqahg==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.104f4a3.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.104f4a3.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-MxqUO7tG02ioGyGdEigqqrsMfmGw6WvPfVMktrj6a8mN0MMODINEAtyhjh7Vhusmm+R6Ie/uylDfS+tt/Mqahg==","shasum":"35743215ae6d8187c2a56dd9fc17b32473e87f67","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.104f4a3.tgz","fileCount":31,"unpackedSize":64536,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDaDSm9JUOH5fQqZp90DSTsS1TFFIELfFADorbaSQL9PgIgeS9pZvBal78WepXR7HHMt3sDQyT795bpdzbB7DW9ad4="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJignjbACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmrnrw//XNZGhhC+nAZfgRN6tADMO7UtrGqUH6y6sy6Miqyn4sCStOk6\r\nklwQ9b10ohkoDBiuRWJ4RpSUcQNGXM3w56nhZ0xTq2LAggCH260zDdiXKjmJ\r\nPZB9cWMVp4beAUv1yZJTtKmQ8KRuLExHpMe9Ty5wAVP8PBg6h0t4sfHg/+Ur\r\nxpzYDZ4cLKgrzYagmFAbf7NzUV6/q4N8nGCk/o1IeoRceCQbGaZYaW+cD5AK\r\nSocW72kRX2e6p9eJ/FxMQi0a186TyDLS91QJ3opuLiqITEYQbtfeZx/J2knL\r\naRJ/pu65ml50e/TCw/88j6Cmxn4AASVQxRzItYLyV7q+NUwe4QxSnlabAJaq\r\neoIdFTYX3AYfH1nmQ+VeqE1lIsgcsEkP4wo5nZhZrzJk+1Qd9FuFYQxYg8jn\r\nwSNxZjauPQx960Dsf8DZI8FijVskj+Z3W/WYOo9piJKmCBIzcpx3Ws0O+1Ds\r\n7iqPd1fx04yjFByfb0XhthJoG4cMCJDSJIh6LooNY+LPk8+Dsk5+PC06ihZi\r\nvtId4l/iNw1zUOBPai6zhEwHAu0sr+wRpHeIMh7+/Muw1kwajR+QPJZYziR0\r\nnKFmgN4G8wiSJKuak6oc+91K//kB8lPBqk8LRskfBlbkkHP295TiEQ7Bg9TA\r\nNR5XJm8Iu3lzHYn0sEyyX2vj0havTfyIffk=\r\n=1JAu\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.104f4a3_1652717787026_0.8574159386259348"},"_hasShrinkwrap":false},"4.0.0-dev.e3fa452":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.e3fa452","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.e3fa452","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.e3fa452","_integrity":"sha512-XN6oWBmzaUN5tNfD3XPXouQy7loXK03qwK2yhdepTemiUw9xLv+5S0yQOLndmD+AZanQhd/nw5MSjtlvVO37Bw==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.e3fa452.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.e3fa452.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-XN6oWBmzaUN5tNfD3XPXouQy7loXK03qwK2yhdepTemiUw9xLv+5S0yQOLndmD+AZanQhd/nw5MSjtlvVO37Bw==","shasum":"bfc6cb993a75b1420f3d24a2c73510dab5fc5c6a","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.e3fa452.tgz","fileCount":31,"unpackedSize":64536,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC2tAzUrvNFgSbQIxl7PASUK5CmRCCINAUzEiyik/k7iwIhALw16j5RA8lspCi9Otfg+/iByEJe1WD11vleeecj5kw6"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJign0LACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr/ug/+KVyHtRBH4n4fATNa0np2ewcKr1PLbe8ZXOtBtyqgKKI1iU41\r\nEreeQd7yPwRfkUwhZCSkRiygL9d1/rzuSJUNToEp0pjLUYKJrQ+2iP1DsNJI\r\nzhZHeLaX17UoQGx1Nx9VU17S/y1gLaxatRDN0jzYq8yTeMzDgJK4L3mDfm3Q\r\nwUOEn0jFgVHq7xj5lieIN8RvZ+oHQ6K2q9UJueK8acDY3Y68HsYw1S30li+t\r\nQtkSs/bWjRH+AnC+hF7QhOEIj5WIDzBz1gGhd45OUMOAnjC4p0OeEP1UCUTh\r\n0/t1GLPXGe7+dUSqBxN5Wo49YIskED+SmDMrlUkw8Uhmr2O5GeuuARe4WCTX\r\nQV/W4IpoFwm3Ozy7Z5BFJGRzVyniKErEP7c7NlvaDkps8cOpa7qapNkrO0Kz\r\nzZm2NEZNQ9Y4eC80wFIpu2dCPnSq0AOXavNaIdEQZTCErIVyBOxEabX5BJe+\r\nrDHuCAAH+VKCCYGpblU169uSwXqvBir/0qj7ey1q1H5puMO0zO7ttNYewtuL\r\nPQt9VhyOMar2hhm4D3SQ+lKtl8XojKus+0DckHMmHe3W6pRIpd+z0UBJ4UVw\r\n0nTyFDDUPsT+heoOpUNRYIx99q3/hvvprV/ydOTvI5rPiS0huYgPT19E2h1e\r\njaRUcyBC1u5iwZGoFQEADQ0OdM2DuhAd7Ew=\r\n=WqSY\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.e3fa452_1652718859584_0.02712830990755699"},"_hasShrinkwrap":false},"4.0.0-dev.9e7c3d6":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.9e7c3d6","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.9e7c3d6","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.9e7c3d6","_integrity":"sha512-gxlWwFfrknFzLhzhX5mwbKZbu4VBu66mTIcIWAptZNPYLqki3qeCzPhg/Sd48q3wVlNJRLeizNf/QrQTzNy4nw==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.9e7c3d6.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.9e7c3d6.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-gxlWwFfrknFzLhzhX5mwbKZbu4VBu66mTIcIWAptZNPYLqki3qeCzPhg/Sd48q3wVlNJRLeizNf/QrQTzNy4nw==","shasum":"77e78ee0a950577dceb9cc300701bc9d964beccf","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.9e7c3d6.tgz","fileCount":35,"unpackedSize":65169,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDxHzdHTJEfrI0NKsKCq4GtVWzXihnrZ1JFzNDFSkBU9AiEA1IM/gN9zgPydGDjY0C/hkvEeOetJdU8kxpeiPV0fayo="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJig5rlACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpF9A/9GlXuW3Zdy8PZzptf1ULKJYHcpAOBFMfyogNTjArX5gEhx8Ut\r\nG/acp50y19DTF85ZpA0bH8hSn6auWOh0JpfpN+54fNTxbO2drxzigHlhXl5x\r\ntOg1MmQcP9ZtyHcJxtHSIcdFLdwx0EqY7LzQV1RrOAZZS5uetRLPrVPY5/ln\r\n4i1ZriHegvIRgsC23trpryCySMdYD55N/wxrTZu2n6kBz/LQKpIn24wi0WNS\r\nvcafp8gTZHK9qaXLolvWTx5hXFyeNNbaFqSyxxbSFJ7lxZF9LE50tJmCVl39\r\ncDIb0uEi8MWV8Hq4DElRmogFr0AYckOOpLO3v1Ylwgmayv0XHrKTv3XsTYfL\r\ngvlFhNupZ15KTHuM8LpD/zjz6IiG4Jfa+/HU0gxIWex9SlWpu3wIuoXARyMt\r\nfB8wHYoqTxEXUb2OpL1ivBK3Fpu98TlXGTPrnAhBnZE1wfi3PHrm7fRSnVhy\r\n9RqqxEaL/dOc6+Dm2a8IBI2+ulz4rzleh8Qr1HYvVvF1kHjLdgZ3BZKGKt/Q\r\nsYRRrxoa3uc69Ozn+X1PYMkRbNM0+FRpC6CfxehOHKgvaDZq4/WFWm9e+EwU\r\na8e+OGYwonT7Pme3vw/6ihMYXGy8PPjFd7IGHYWtRen10NXd+udiEnG0Aj8O\r\nnYKU/4rTCLSz2gKEix/0KQjtC93qEQEN55s=\r\n=qVQU\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.9e7c3d6_1652792037236_0.33184665627994314"},"_hasShrinkwrap":false},"4.0.0-dev.d9a8ab2":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.d9a8ab2","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.d9a8ab2","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.d9a8ab2","_integrity":"sha512-/AcmxULMt6ukXpxZqpk7PR5yd+NVwVT1qRSy2LOT/8JYZtR23/TsiDiaGegZyV/lnec7nLGDuOdkifb6fNGyxw==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.d9a8ab2.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.d9a8ab2.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-/AcmxULMt6ukXpxZqpk7PR5yd+NVwVT1qRSy2LOT/8JYZtR23/TsiDiaGegZyV/lnec7nLGDuOdkifb6fNGyxw==","shasum":"28c4ad59396137cda0b2356986f26155c960841f","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.d9a8ab2.tgz","fileCount":35,"unpackedSize":65169,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDhIAMyiTKrPUoSCVGNKTLOzCaHe2rbaJOnjVHlKdiFbAIgb7XSbpnSmYUhZ6u1eGup3EzdbluwFMcyeS76btZ35l0="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJig52RACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpIaQ/+Jym+2Acz5K31X9p3cFsNNiK3RfFvggd2gWsVJ2l9HLjw8Oqs\r\n8j9sQrs7ieEvR1cHJae5c11ljdU4rKsq93GtTTB/mruoYVy11H+rvzuXiJRZ\r\nz/Mq2wWpI31oqdu4qTdbNxHRWXBF9J4jsIKEVhCK/406nZoqa7lkVYMwCT9v\r\nK8Lb2BhmTlZH02u9sr4DEwya7hYrDsfvjWbs/DIbgrzFXl8555HDW5W2G97h\r\ncKoVW1LUMZa7TimKQJVwFvYkY5bMWxTxT24Ma2cWWwauSx9NIOQ2pQnx4WHd\r\nG4qPX0WtDjCcVvZz6jy+20vfxtKnBwdMsdUXv5ERHDIA9rBHwSCwwuNSNBms\r\nQ7bUbWSc/s0NIpcfOJRTdgEjwqzkBopYOUjlUI4kOYuGMDMEi/fK2lC5gmfK\r\nxWYIMgfduhA6drVjI3Xq2CQElb4IfTv1hWsd8jgcdQ1qx9G6JmSOlc74KVQv\r\nQ6Sn6WGWelRVoZf5GDUx0n0677YGNydSwm4BaQ7zvSqxHiIHaIrMB6i4L3PH\r\nZru1inr98txo2SFWvnI8U4kXFn9CFtRPS28Gjjz9l0qu69h4ButWnuDju8JV\r\nN0+si0xjRSESMKXvmcSHNF76mCSDykc1ODblQmyvT1b6GQajBU9aHJTny5tG\r\nrn2IzuXjRnWiVK5e4+3W7jsZgfG2QAjH6gE=\r\n=BWcW\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.d9a8ab2_1652792721161_0.7728523916979402"},"_hasShrinkwrap":false},"4.0.0-dev.e275a26":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.e275a26","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.e275a26","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.e275a26","_integrity":"sha512-H3iWa1kKk4RklZ4+qaq9QXp/HFs2eYn1h6t94eVGxajMV3Tdbttvt8isqLyhMRFzoP2o9yxM1rrH6VL5qfcPYg==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.e275a26.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.e275a26.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-H3iWa1kKk4RklZ4+qaq9QXp/HFs2eYn1h6t94eVGxajMV3Tdbttvt8isqLyhMRFzoP2o9yxM1rrH6VL5qfcPYg==","shasum":"3aa7be3bf53d72690dade5469ef30ab6a860011f","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.e275a26.tgz","fileCount":35,"unpackedSize":65169,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDuPlg7WD+m8waNt/Ic+x5URmZNFD/GzdXKn+Aq1kY8yAiEA/bMyEQr+C10juCfu/3y/AfcbrXN8/yp7uJ/CHSMoqlk="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJig55uACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrZ6RAAgxkpcyujYGbDR89pL6BsfGcrFccmUt+7oiI/06fKDNVuanLF\r\nr/Fe0qMefHWhA8jo+cGRGkgIC2MneiUAPlVakNIQ2+mYQ5fNlA51aX5DD6op\r\njU4ZeKb8Xzs+zNqUiDu+0bZwR1I0drn0uKb6Aixxatt6xOPbABmxjHZ7BCgP\r\nmya96vi9nvcpOWfXvJjJXrBOlnFk9C37ot3m2WqNkOnIhIiei+Kqxr9e+vRh\r\nhjA2qf8xxQoCxHjTzOKlwYv36YsSWJYHvg0Z+d39UEaiLwtx8LucGfUYbc7O\r\nmoOV4oRtJjRMQNs5s2UANVp1h16vFH87tGqnoTrzFD3h48yFuVudS1tu+kdF\r\nujuUT3uMS6dr2jO4DIRVHdnrlNq0GIoDRJwElnYNFrwdlPvoSYbmDFj3/8pE\r\nTYDDoKDYXrhR0hg/eEYUsZJscE/h5h2R92LOx4ofpt7dvXTZs5VKzhqU53Ie\r\nMZNxu8yFbW6ZyZpKMqCwTTU6ZpEwYFMJ9AO2V60vtIYmlLcK0RnMSnPvC38p\r\nWdbRux/IrYddbw94UBYjlvyRQ7hZloCrQrottUY2xrnSmVtmVizzovb6Qz1I\r\nk8i/8rPT2N0eonbceOUU2qQ4XB1gu0gIUA0IUxQ16/H5mWIfci94ND1y9oMw\r\n4on8QgKFN3HTL1XPSCliCdbDI32P9qHxyD8=\r\n=Rmha\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.e275a26_1652792941986_0.5034635132324115"},"_hasShrinkwrap":false},"4.0.0-dev.8aa0bc2":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.8aa0bc2","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.8aa0bc2","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.8aa0bc2","_integrity":"sha512-fEmo7M00oHUGIB+Hjsjnw38+mGKyo4U1uwuccQUFaA4YCnB2IijHFtCLbD5zk47SPRrafNvAMB8FBbJUH8Y1lg==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.8aa0bc2.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.8aa0bc2.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-fEmo7M00oHUGIB+Hjsjnw38+mGKyo4U1uwuccQUFaA4YCnB2IijHFtCLbD5zk47SPRrafNvAMB8FBbJUH8Y1lg==","shasum":"c085918f348965391418a975cef2743df34fcb80","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.8aa0bc2.tgz","fileCount":35,"unpackedSize":65169,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCtn3fBnuT2y5XC7rCAY/+TWfHr3jPYeN0UchiNWRR9kwIhANTjcNgbtOwkdbSc9HgSS0Fy0TdIrSguGn72r+J9YCz1"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJig6CEACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrIAQ//QkynHU2YbQHOd2sGz7FfjtdX65x8Mk6C92C0C52+832SUW3M\r\n678Be6kwepT/QxGjRcelN8sMZ+UdGPjBMCnCbS+G69RXAUIM1c6NpmCJ0spK\r\nxU/0/u1ZY9FATquxkzXoOcWP7nUqN+uY3eHYUlGPePgT7kG8UiJu5gq0x6IQ\r\nDH3IJMhRq7tjpOjdwVnLyNhRsEs+4KZdpdCh+DV81VfEzO1MjzZlEJENoa+s\r\n65UJxB4TD/oYUkxD7ErgYhRtD9JdcxhOCA9//6YH4mluQYMwmECAadMBpuyJ\r\nfvT2msy84Q9BFx+5SFgccu5vNmDrqRLXpBn1SZwdxHldU3DSpyiJW6zzq4Al\r\nBKl0fZEp2CxeyLy50EjxWA4ehmktiyJw9/yFXW4HBCRV+SNKKiOOEl9UrwP4\r\nIEfcYFxbLSrxz7OH2k/ufXidgSEVLnW3N76RG9G157mMCuO6E0vBXJz72cI3\r\ng2Tv/K8RB2L8SeXaj2tNJtVBdhY6p9VOnpvVQjH4zp6bUd9+tNQ61nzCyVLi\r\nrUrVIIUIqtvlDp611QRW9YR7knY9v0boPwqfMoMQmXKmKaNLct+t9NFVpBet\r\nLnbpZg2UGh+c53DCvNcJE6fHP8E4H8aeNjQ+FfkWchDRTDHk0NmHinvsfnk/\r\nUsr7WhnrVFHzNOy2/2uAPExFWA37mVO1HwI=\r\n=NGSH\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.8aa0bc2_1652793475626_0.7101736773094893"},"_hasShrinkwrap":false},"4.0.0-dev.219fe4f":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.219fe4f","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.219fe4f","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.219fe4f","_integrity":"sha512-hSXovNmnDvaXUksKSHl8CkbjQsDIIeiycMAZBUwClyOFp0BOwbSgDfh3WseJfLKahpO4s32r7ekA+qZH0yU7/g==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.219fe4f.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.219fe4f.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-hSXovNmnDvaXUksKSHl8CkbjQsDIIeiycMAZBUwClyOFp0BOwbSgDfh3WseJfLKahpO4s32r7ekA+qZH0yU7/g==","shasum":"0c94561694773663dc1d2a3032c77d656db95021","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.219fe4f.tgz","fileCount":35,"unpackedSize":65169,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCOKk8fQKSY8IsP599JyYXdPEHdokFdjuBABKhJhTN4bAIhAIFfSNuJlHa3YvyQ4IQU3GdiLfF7qu+Yxa2ejwoACvAs"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJig6UZACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqhOg/8DE0b/yK18lzPyOIli5wBQmcH3gmQbBrQNV50xnnjr6/2ZTWq\r\nClzSV4XC6LtXzZdgQvuSve0MuU23LC+7tWevIUWIjp076v5X1GuHVIHWShku\r\n0Opn1F1mldHRtIMASuRKVyGNePW0NvTqNPQWbvrUdBqjXyveOAVkz8N4DPbz\r\nINr361VRcLJfyUBrp47bEsT9aou9XTbRYjgtzqFSldTGM0yFyBNqkQL4lWSr\r\nC9thgCHnonvEPOuEiN4+sAJKewpu9sTyISr0agyCsn1ut4FTfvqBxvPY4eYz\r\nhwDFoJyNN9tL6a31YgHpQh7BFDsrzC/76mdtT+H4Vpqbyoq6L6xlLZXG8RnB\r\n7vtgBwGUFg9HrYj6RyqMZFnuhn1vLQTEhmAfY4U4N2i1NziT7Tv56pm3QpRj\r\n6B2FfqYqVSaD+rYxOCctNjWWpaYh6ETtyevoFfB50m6QcR1oNeR5jAcB9Ww4\r\npnb0NCJHcXS/mA4jCwdvBex9qX1Wa/uUH9LH/n1ED4T0DW581Kdp6skHX0Gq\r\nsOBiXCDpcHFV8FpvPsZBAi0gAk/+hl9OyDN5IY/lkBmh0Hm/L/1UbjqTTp3n\r\neomkyyzCkOaFq+/oiBkMtAp7IGg4MBRTJE0P/8rtaFSQi+WUO9BNAybDo/xb\r\nsrjt0iEFxMgGM0UIgTmkxW8rWXRF1UK7TpA=\r\n=3vWc\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.219fe4f_1652794649674_0.8748730121245656"},"_hasShrinkwrap":false},"4.0.0-dev.7e092e8":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.7e092e8","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.7e092e8","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.7e092e8","_integrity":"sha512-xdBdshHtkMPVYEPAqaOsdbAk8Or/75Io5w06GSQ7D13aWM/Pm3wIQKBkd2Tp/9WN+0fxLF7J5K0cEo/F017xWg==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.7e092e8.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.7e092e8.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-xdBdshHtkMPVYEPAqaOsdbAk8Or/75Io5w06GSQ7D13aWM/Pm3wIQKBkd2Tp/9WN+0fxLF7J5K0cEo/F017xWg==","shasum":"972b676a404a573786cb42c3a99c374d3a1b03df","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.7e092e8.tgz","fileCount":35,"unpackedSize":65169,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEicXjvU4HbJ3qwl/DuC4idnTg/EkL9qynkK8w3kpz9+AiBYsvF+KFm3NnMpPp+oRPd0kjbWdHzJsP2yim0140amHQ=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJig7F/ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo01g//elUjV6f2HDSYznAgb8QrRBpeNbkDApSWqAMEQr9B730kWQmk\r\nfe7KkNecsjmdOqy0nieWnOZD/VvAt0s+5R+7mvTdjCcsQtAi24W028ptv/kd\r\nRWXPOWpPJXzVVT3Be63xA/98fDk0wEyMpIGQTIov3tV7WUt8tMd87xWnESzq\r\nNhS2/vGJYpKkeWT0xGk2u12XONys08B0RetatQ5bEH5mYOwExu6isHsE+Dt/\r\n5vPRj3XlStR12565t4bYQnH+I2GavPY0Jm3p/MKPAWZa3SQtkSOdx/VeozT3\r\nbCpwnYEPtTeoay5dJitr/iztYMUZ2Cw0l8fxDowtm9kXX0B+DzFwS7S4x8oB\r\nI4CxCw5MVWGK4srAHKdfTVAlAuB4snzI94HY17yLhloMiRUsftVje+SuU2+s\r\njlA0uzg+/iJRPGtyD/PwP55r5qX2iKNkE0q8cm6GIRwD2RBU2YmEdFnGEQ7v\r\nVSP9rJvb1aI3ZJGv7cEmOTZK91UMDBPgOh9zpO24QkMhoU6ljEy244G1VDxx\r\nD9Sb+r9pqa2RW7Cy3EFTXmDx8YFUMiSMss5iPKpUxWosRPZNCYdMt+PoKw5R\r\ncBrixEE/Zqf4sIDU9q3SNAMTyt/PPrYiqngvRe0Bl3ozACcPJs3HO03AIdWv\r\nizTqCR//+erPrLJiSPr98J7erYqtks1D0cc=\r\n=gJMR\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.7e092e8_1652797823664_0.5318540928696562"},"_hasShrinkwrap":false},"4.0.0-alpha.24":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.24","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-alpha.21","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-alpha.24","_integrity":"sha512-xAFtb43Hmmxbs4Ixms+g8UUUpguhPBiZzhHLBHrZkiHRZnr+HX72zyJIgj6PJ3JPk69RXN0LW6TqB052TJGgsg==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-alpha.24.tgz","_from":"file:ethereum-waffle-provider-4.0.0-alpha.24.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-xAFtb43Hmmxbs4Ixms+g8UUUpguhPBiZzhHLBHrZkiHRZnr+HX72zyJIgj6PJ3JPk69RXN0LW6TqB052TJGgsg==","shasum":"af714f5cfedbce94a0f4ac9fe711bafa46b84261","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.24.tgz","fileCount":35,"unpackedSize":65165,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIB2Uc2du1r2Fiz+3jMrEwiaHv9GRbwjCfyrgpv46wmSLAiAPUWd+apdmGAsgvUO8dDRbCGW5xtB8s1O+M3nUdJmXCA=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJig7Q8ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpc7g/+MfpxcbxeiZo1yfVf7+3L95/bw3hTHi2eZuGAI74j/rQQ/gYD\r\nKcWEYDGP9EzMHeSK+Pi+8WAR88gCPITehw2cJ04BssTby0buQIHAhUNrJ7Ii\r\nX45TJNeFJ+zskrKEEz7Zr59s9T4E1NBck7F/jfFfbINGqvh/7L2JARLTRoxl\r\nyXb8POUGpTuD/r80rOmuX7rEI7I/V28SOIhJP+L4xm1HJUjVSTB/fWTuwsDI\r\nDSRlNKjV7PVAdvtxxK5LAo4W4J+Y85/w3snNgeFjk1HVPsegRToDYLiXJN9m\r\nluLZUH8XD6nz0eDZEkJ9hihbyxHMn9lsxI7WFiJ4FJdlamrxRJUzTCq5cHzj\r\nvVR/No+RHbgY3AwENTYHwM3zAPbJR1wb7wJtRoKGd/g68Vv52H8XXl5B75FE\r\n/qHAFNJgxUDXzGJtLK1Wo/+4pP5UZYas3WDnniC1BlmHFyIMTf/NtrmYiO8w\r\nW5GRD8E9uCpLnLS0p1hCVf7GJKf8amFKz5foP1+QGReHkugSfVEjYlqM41Cv\r\nRnT/MaOKyB0o8Uwpnhf/mJBiKt6iq2EdNDVueavcZu5ynZ372avtEwKgZTpK\r\n2k4brK5FsPhpTJmxbTAm9UiX/DFHOfIKZ5wjHNap95IDwOOragHLmVuUGQLS\r\nnxFRz2DRBAya1uzIn7xm7C4fTsnkBCN7yhY=\r\n=d3PZ\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.24_1652798524660_0.49711182173944635"},"_hasShrinkwrap":false},"4.0.0-dev.2ef3d81":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.2ef3d81","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.2ef3d81","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.2ef3d81","_integrity":"sha512-xBymUZ6U3v7BtVY25whQ0YySoOxZJkzH8cOxoFWFguZh3Vj/19p6RuMjFAzcH7K6NU5FcVT35DjoCvpErf9zSg==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.2ef3d81.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.2ef3d81.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-xBymUZ6U3v7BtVY25whQ0YySoOxZJkzH8cOxoFWFguZh3Vj/19p6RuMjFAzcH7K6NU5FcVT35DjoCvpErf9zSg==","shasum":"b32429b8c58a69bc5819f7f32b3f7c0f31deeb6b","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.2ef3d81.tgz","fileCount":35,"unpackedSize":65169,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDFHj1io5JEcHfuDDO0BfgUNQ5vNuxuknR3ALOcgGllMQIgD8TxjUnLvmQBZ1u+JLKZ/ofgLYRzebwC+XSmnjQOtB0="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJig7TQACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmprLg/+P7M1htnI3ikH6aXIWWvCMRVvIYwoQkmfIwzrnvWzgwejS9Np\r\n5NjpYn/enFgOKYeMudk8gT39RhrT8qNHIQicKsSKlLrRD9iqwmdg7u4M/duU\r\n/U+ydcE79LKLNoiuWgWXEfdjzZnbkCFPpg92O0Yx1/tJiXWJk8RFVkOGlJpl\r\nksAitJmutgXvxbKwba5tMAB7qdHCDHCui4w6YjaK/xmdyfGm9vL2gyCYT/3S\r\n1HRwmWkOY+h9UH4DDhnkZMShrZAMWzWj6OW0AFdIPdifXk7NFjElEZlfzcPm\r\noP57scs01OWsKElx6fuDYmuJ3urcVu8ONfTc1PWtRpQqxCernn1uQ5LrOnsA\r\nR9pWgWye13aNmgtDwB1ykIak7mOt8HYF3LG2GQBg7fDAe4b2qSU85AEmUSGT\r\nSOAE2uAJPBH2jXGeZmvw6ftnStxL0v7Ah0VZ4PkwbLNa4ok4VAxK9ky5Vcmn\r\nu3RwxqeEgptWJTb788DFdd9UMvAy7yH3Yxa+nlC+Hz4GUapUAzsBK77OlMuU\r\nNHJD5ss/SsdPnFGthYRdThG2GFrtRJNbHwYTDws/a/+BLyty8JPcWAbogATg\r\nCrZfK2uIoGp6JQF8f8/cV+I2DkcLI0zrADVBG1Y0CCXsz5vgtDgLFCI1QJmT\r\n86dh7rQjn4uW1/LHg4UjPvOrwD+BrFGtLDg=\r\n=JHCB\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.2ef3d81_1652798672738_0.5076662494821889"},"_hasShrinkwrap":false},"4.0.0-dev.539c432":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.539c432","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.539c432","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.539c432","_integrity":"sha512-9BSOsaM8xF3GCZkp1LrP1eqeD3XN7vwKjECY+enmbWSkFUUvf+fStPkvjSnJaVKZDIy39t9quMlLfW0j7y2ZYA==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.539c432.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.539c432.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-9BSOsaM8xF3GCZkp1LrP1eqeD3XN7vwKjECY+enmbWSkFUUvf+fStPkvjSnJaVKZDIy39t9quMlLfW0j7y2ZYA==","shasum":"bc692b135f78d5efb54d5c35f13b608e80ce2d3f","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.539c432.tgz","fileCount":35,"unpackedSize":65169,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFhznWimuPoj5IbTBZrB1WqVy5I6ya4DalSqPDUNR+/LAiAsYFDgmwgXrs9PIyvj5tNQlwa9/zqSxS+uHA+LbuLSgQ=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJinvf1ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoMGQ/+NLE8HpZTtCxbhOwFIA9LNZei3UBq6nLYOCLvisvyTGGsrhIG\r\nRgQVgRHijPW0alBwn5QxtJwYh/1yx7qyEhRTaXTRwthyDwTUPPAmLcj4Nqu1\r\n6QYqGoroK1a7LvbEaRadKJxaRjAAdpS0ksrnNbJqfzEBD1jO+yQ6bV8XvLS1\r\n+U+ZV5OV5VAN185+fnV92BQ6ufyHaOcymeQE7ho6seQRDVaq7/iK2BnWwKL5\r\nwGHSRk7ldNPEkLcTDBvngi498vpkcB/yZeqhepOfy3M6O95UrGxmEYV9a/jw\r\ndf+iM891knzE45s/J0V6rIPGDPDup2fJbJgCK9lfWXN23wkTA/HWFyLlf7HI\r\nZWD0fP/iUeb8BKFOU1XY5A06gFdTmK9QXxX++QfM+JLFAia6akAgoxrquF9r\r\nTUBuqtG6gEj3THfKCKuL1LF64vhyr0jxPgMHb4WdAspvN+1Jfh+8AceUqd5u\r\nk5IcY4uiEq0izU+v0mM903kWMyPg7M439O3BfEsldp/cnHQ9nU5TLHHYT2Yf\r\no+A3ahWfFpRA/uVgSlL/sAIi8drjMSgySBAUdgDfFXRAtgJWQhjNLN/Qc3z8\r\nMKSpVsdzQUlrhS0Tbg+3I0F4dwzHqh1BxlWbC7JPMOjjTFiE0zg5Kg1cIVzh\r\nfeaxNgGt74gGXYEYaBHFFE5Ondz3Ue1F7jo=\r\n=mN4w\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.539c432_1654585333132_0.9803994399797806"},"_hasShrinkwrap":false},"4.0.0-dev.2fe3f15":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.2fe3f15","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.2fe3f15","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.2fe3f15","_integrity":"sha512-yCQBYH/cC+LPg6PAskCwSvMvItK2Eu2zP2B8BR4ttec5rVsBO3DZGzf7Gkb7nN0GNNxIzLq/5QMvC6R4xoDZZg==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.2fe3f15.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.2fe3f15.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-yCQBYH/cC+LPg6PAskCwSvMvItK2Eu2zP2B8BR4ttec5rVsBO3DZGzf7Gkb7nN0GNNxIzLq/5QMvC6R4xoDZZg==","shasum":"f9b9fbf53c5dd484ff166b56cd63eb0e22e8dae8","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.2fe3f15.tgz","fileCount":35,"unpackedSize":65169,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC05P1iPDgq6QnCht+UoHsXxT19lpq452fJvIFPh2WRPAIhANIW7+Gg1bBm4FgKkNHWTlFoydBcjEt21aEQ1bekv9bz"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJinx5AACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmofdhAAl4GFMiSVLkZSD0rJCnjfJtipnbQDwi4W8b1P+APJc/H2zJK9\r\ntt7ybeowtnOaHVQzl9CHW7oq7lxvtzyPs88sLendk8ku1C7oLvqQFIqnDQdM\r\nJXrNuzBELk2lGCg2O7znDhAt8s0Lge/xqMuQdL6dGqwrwU8XaHuDB6YrGLHd\r\nor3r2UZZJl4epwY6TpGQaFi08ZpL6AHxTDXxtHeydFjoFubIc8ussbLiJWtZ\r\n6/zhN428B5xiA7WQWXONYb51OPOloRPuTh29OSu/eIgLuTYYGwzpnfUNe2As\r\n/fKxrHvM/o2ZQ+nQl0pizBZCLGTYhcwjEXGne74107ZW+N9DqVXoQ8Xy9T7Y\r\nMRJ/gi/9Xy+b3w9HzYbixDCXCuceI5E5G04zpxVVIMHTkD1C4ykD44c3lmlI\r\nKQjElLyjGIlzUSCiLuQi8CpZICzKQPsq0D8cWMVUoRH5LC34JC3mENOo65/C\r\nmrnaMXaJ7enhnmoQJHEVMtJEK+Aa0Roki9bIDPR1bp8bwcC9/xv7uJnPSXCf\r\nQ4dBgzjRdXCH7+8nWVPnVMc84SbE2l6gafuj/l51F6XlSZ/tYC4NNNsal/Gv\r\n7dZm8OV5mAfOeKRKtmNe9AiqPvlrkoWD50Cy9X6f3lYV+3e8ktdAOYIkVgJ5\r\n4q02qZ3d00MckTbkhwkLnazVWB4GjhbE8Yk=\r\n=+Lgj\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.2fe3f15_1654595136229_0.10823079526424517"},"_hasShrinkwrap":false},"4.0.0-dev.b2ee4d0":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.b2ee4d0","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.b2ee4d0","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.b2ee4d0","_integrity":"sha512-FdDtX5MoYyIapNqnWX6Hdd+ButCtYDptk/CtEVBSYGbH3rrtO1/Ba2tQXuoriTggc023sNy4yY4GVU7iGfzu5g==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.b2ee4d0.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.b2ee4d0.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-FdDtX5MoYyIapNqnWX6Hdd+ButCtYDptk/CtEVBSYGbH3rrtO1/Ba2tQXuoriTggc023sNy4yY4GVU7iGfzu5g==","shasum":"cf3604007da399e73a12700d9dca508c14b5578f","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.b2ee4d0.tgz","fileCount":35,"unpackedSize":65169,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDIwQHVSQjSoBkA0PlZcjK5yXnMNSICol1dID0kx34p1wIgG24Vt2pHgnfPWhHZfsuMuyuyZ4dvVAPuWbgL5wC291M="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJinyFRACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpFaw/+M/mOLKockVZ1lcQCvGrB/aQ/QPpkUGSTAKlAy6MckgF9tOrG\r\nracvz049hyGeRmI/36fDeSF92rOYR8vXWg0s1aNGFxO+Ujih2BG17DdaMV9w\r\n6BlD/0heA4QwnuHFHIAhnwLYIUCyA4ga2uUWhIPBYUbWJnPOX18RpG4kYYFu\r\n3gf9nAyBLbqu7a1eMrqCkAOVL+sAlsQ6XBQxPi8MOB0rRTig02fAEUxF2RKa\r\nuW4XGZRgppo5zmXQw95mbYV6/1ueNO7klV8hAMvr+NY9+fKfSgR5pvYsoPVz\r\nxNFfs9XDv6Ywz1CiHfbGMnjuww2jdYL9MVjcH6kbtSMz2OglPHrgcliklRsi\r\niLVE+7btA/uYp/AvazSTSJT+5zoNhM95K1d9pjRPfyRVGCKuzUiG5gSJVDvE\r\nXgR7A1zMMG0NdnN01pYru6OGL86T49TAqWywaA9uG2Ihx+J3ah1uIdgS5+y9\r\n1ojyqDbcLdHrEWK89eZuVli1SCy1LbCnULowvhFbh73QuwufWVOIALeXFpxH\r\nEXwVXSTl7hcpbMyzZZ3W8NjNd7jSsqowWlJlaEB9SQC5mpR5O351zltJb3R9\r\nTgFY6G7rBuhLmMIOqhEOlm+rj4/o/pOGjS415GRHPpYirwIz7duHWOJMjakb\r\n6oU1fYqVWyxFOgwtYWQHH19Ir9q1TXIIZN4=\r\n=OyCw\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.b2ee4d0_1654595921016_0.4379740547591151"},"_hasShrinkwrap":false},"4.0.0-dev.4fd670d":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.4fd670d","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.4fd670d","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.4fd670d","_integrity":"sha512-v3Ak3o9iWSv7wvaBoY6AKT1rdMSbqxYKSPI80+synItlOZcbmTbKXpW/jrYhGlerLbbuO8SM2N81UC5nTKgwfQ==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.4fd670d.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.4fd670d.tgz","_nodeVersion":"16.15.1","_npmVersion":"8.11.0","dist":{"integrity":"sha512-v3Ak3o9iWSv7wvaBoY6AKT1rdMSbqxYKSPI80+synItlOZcbmTbKXpW/jrYhGlerLbbuO8SM2N81UC5nTKgwfQ==","shasum":"ba89f744144bcb879d5699d6915bd63511316917","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.4fd670d.tgz","fileCount":35,"unpackedSize":65169,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCottpF3KdzPg5JP4lh7gkYDTeySXxPAZncqCbspuwRiAIgPFfsNOiDO+osh40D9I6tvYRwVs413X71OydXYilUHQ4="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJinzYHACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmomABAAmjAtl/UVUdU+yd1JNJ9CjGsrW7WMVDUef1VUYhXopYidrkcv\r\nPK6Vj1DFxpR+q1h56kbVz9y4da/pyX+sqfVaEgLx9OIdU/fBal57rlibJ/Zl\r\nSZqpGBph6II0gkDXg3WS/SUGDFj9aQ/UZKuOwa3o8M1rhBo+MNOoVRfZVaQo\r\nMqEEaddtoMQ9P+YwkT6H5Jl3Rj3sedTy1nznhBsZESWB444qs5rZk41ApW+2\r\nLsk7YkW+63CyEtYY1VR4G/W23slMZLBWd5MGOKYp/PAMWZ2w8EiUVROqCOCY\r\nyVyZDhDc4X9LJO6PLPLgacjtQWzWICkEFbGqZrj+CbIvbHmXSh+yMEYcVtfC\r\nI/qgDYMIOlnQ4E93atdPi4AQYK2Aqf+AU/EtH3G/1acbINBQ8f7gdDEruvOB\r\nBFyersylWWELXoupilont/LJ1EMnRDEHR5PEuT7VwKeYQINixXj0OszbbkVG\r\nZ0evJz/WU1rsJiQdU6xcj38ZNXGKB3dlo0isV7rtwc7HDloumzIY/5EA3zMY\r\nAUWw4YP4tMYLfbCTYwnkAR1ll5FgS5hgJnYu2TqdgvifPloJ177+3Ih7Nvqq\r\n+ICIyepqlxNxiJFVL4lf5OxVBXVdyGmHJp4pL+/Cty9Ipgr8KsYbGDmK5S/A\r\nhef5opRDYj+uaHTBYGfYNFLQ6fsZxUrEDi4=\r\n=bKwz\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.4fd670d_1654601223717_0.5643642371943836"},"_hasShrinkwrap":false},"4.0.0-dev.0f1b253":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.0f1b253","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.0f1b253","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","_id":"@ethereum-waffle/provider@4.0.0-dev.0f1b253","_integrity":"sha512-1v+XzN62A9wwNE3nR3zRORCirfrdWHt328+xEuyqfTDcjzOTxSqSMuhsCMB6NbIvXF5AQO/06wSj9H31FyS8Hw==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-provider/ethereum-waffle-provider-4.0.0-dev.0f1b253.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.0f1b253.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-1v+XzN62A9wwNE3nR3zRORCirfrdWHt328+xEuyqfTDcjzOTxSqSMuhsCMB6NbIvXF5AQO/06wSj9H31FyS8Hw==","shasum":"e0b85b8eec661c595fb475804c0034d079904221","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.0f1b253.tgz","fileCount":35,"unpackedSize":65169,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC/8ofoePHLcfkWOI5q1p0C9FB4lhhlRf+btR3/SvcYrAIgbYn+aHprM3x+UbhszHCwCsHnhBUJG76ZXGvbVgC4DAY="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJinzjjACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoqVhAAjOfEjMixM1cwrR//o+w+dY4gW3pQiQ++LCYkFjgyMHEJLUYE\r\ncYfTLbuEKk8/vXKz02idx4+iyV5ha3Zj6QvJ98bQMKJjA3Xnzq6xiaShMTKp\r\n6Kk2WyehlFU4veqLgjTw6DnWwdCREUij/IBWyd+TH2K9daxHZTvxa7gWD8Sg\r\nIfTsDkfMxTOKXqluxi9gUPWk645quJhnxAi6FsXgajZG0U5ys6BOjQ2C0C5d\r\nZPRFOGghun2GAwpgFqABitMwFoUFQN2F3Zc6a4a+SzdalyP385/00iRFIVbU\r\nsjZM+ytG7OZ6FqnvQLhqfZ/n6DclQ4UqabweFL6H6KOi4fckh9iTzo4dh0Kr\r\n8ixBjlQ9tq2T+EX8mMdjeqkNGR39CgU/Lg+/rQ/8IfZihhYe35xrvNeRTKS3\r\nfqYtpoAgQXcYws+NAfp7KpPWmB7VPFhchgz6+wjsDpmGpwLlxzhxTZiXqb3s\r\nj8WI+E3gnL+PH02C9EZcyJ8odUf9dWF0ZqZjpDysVO7htAK5yiS4wyRRLBtj\r\niQ45q18aw5ekOgha1zy5Q819fGKTfd0UvOm3Qgl//JdA4Mw8halVOQ40dkrr\r\nxzWjW4CQcCs+MK0JQObluCxZ8hJia5pzQ9+On6LUWPcXTmX7uiGV5gZSR78k\r\ng3fFDX8HzbgecrKmwl2z+nwINb6w5QXeP9I=\r\n=uEgc\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.0f1b253_1654601955507_0.5809568964204104"},"_hasShrinkwrap":false},"4.0.0-dev.b21809a":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.b21809a","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.b21809a","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.0-dev.b21809a","_integrity":"sha512-wjaNAGveZlTZ6x3dMGFfsmiUpXZoo7AS27dntfoYngjvv5yAx/ZrDSSWRTX4HMsJYrrOCSWn0v2gCLW/rZO8mQ==","_resolved":"/tmp/cc570b93a3d611b0a04349309527c851/ethereum-waffle-provider-4.0.0-dev.b21809a.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.b21809a.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-wjaNAGveZlTZ6x3dMGFfsmiUpXZoo7AS27dntfoYngjvv5yAx/ZrDSSWRTX4HMsJYrrOCSWn0v2gCLW/rZO8mQ==","shasum":"43f5ce6d2d46a6d5ebaa0f6f7d8d359f19239fef","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.b21809a.tgz","fileCount":35,"unpackedSize":62264,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDJGhum0qyEF1SuMLS1EsMjna/XRJj0bqSO9O6PlLp3TgIgVtqbz8venT0/SyV5IpLg+a673lgZttUpp4BNSYH/VlI="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJioMT/ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr5sw//a2WHtbvLhUDusRyc3TMaz7MeEr2X788dY0sKNoOkGHtwDOCg\r\nQq1KmGeF8Fc0Upm5gWWfP3dz0/6wlWqxEoMm7+J4sM909qpVV7s9cyfliz79\r\n8STx6BFtUeOeJP58GBtILDU7pt7E0Yo5dyc2mkpcSoRjfcj3t24TSYqPdSrT\r\nNwtEuQEGZ0IWoXSYSP7boiQ0brhI9YuJPrhEpaOnQLAFDIL6ewSLs1Xa//iN\r\nQFMFuje/OFszCNOQqX6PcQ5+vEc50BkQHPt/F7slmbzfC2XzQQjvL+pzQXng\r\nV1FQZCBTlYyDNyyC9cjJ73joJKEyxiQbNBtOH2LJ2cGbZDP0plyjrjXNgGka\r\nOWYzcGrRKYR9qORb2x2VU85ZuHsgh9xMOcEI7SL0xT6fdch35hT1CzGRw4f7\r\nQS9rel5DIcI0QpKB2NkEjwsA9MijTbPASUaFHwbW1T/kVG4GtXFG1TwLDrTu\r\n4N2lmy9aGCC+fDg38DFyaJQ/9BbjljD8Ux+GaZMK6eUYZnF6fU2xIehoJLZY\r\nfRFWWGVoyPeupZPN6Mr3q9Mb5UuqjB+XuLFMOyKz2WNYMjPUsrC+njJUXYGP\r\nliabqnmecS0JWxstZyO+raquurWeQTPt3M6CRWimfBjbpiLtK6cwgKOYJSqd\r\nnvBohe4EIASimVFSoJdXU+6Mzli84+5fHC0=\r\n=fV0e\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.b21809a_1654703359040_0.43552400057114227"},"_hasShrinkwrap":false},"4.0.0-dev.1c384e6":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.1c384e6","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.1c384e6","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.0-dev.1c384e6","_integrity":"sha512-mPw8pmSOniLP4Vv8yyfH5fZEnWMXGbdv2ISIRGvpBeydTQFGXvI+3P1VgAZj7kKMuvtFJP9KfRMHTNP3gMeh4g==","_resolved":"/tmp/cc14e278697f8e86018293caa6ae99df/ethereum-waffle-provider-4.0.0-dev.1c384e6.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.1c384e6.tgz","_nodeVersion":"16.15.1","_npmVersion":"8.11.0","dist":{"integrity":"sha512-mPw8pmSOniLP4Vv8yyfH5fZEnWMXGbdv2ISIRGvpBeydTQFGXvI+3P1VgAZj7kKMuvtFJP9KfRMHTNP3gMeh4g==","shasum":"655197d31ee7e8f936507ac7c5638897cbd719e7","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.1c384e6.tgz","fileCount":35,"unpackedSize":62264,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDTm6iGnuNmF2xykFIA7thmNxWgbk0UJZItvPiYpWE4SwIgAciAay1YLCyUoqovHWUUPwO3hN51xcNsC9RzbeffG5M="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiqcMyACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmryAxAAmpmL8xzEgdDdiLfXXhJqnA45jNyJ6cs4ZKxufI8VlwJTlfHX\r\nge6z7vylXT8GLXWEZYQIzA9yWJfLtDemRXpByzsXIw0N3B2QWME2ZjhixgWS\r\nI1B5og4tb9moor/HoSkqNPlyjhvE0JQeNyH1u3srzLjZ9sxhHQM2jv+NrnNi\r\ncBfwfR2DftZqNvJ7NpmQUtZZBbFXupIY+tyjC9X84nKBCfBf2eVlzTPLukVI\r\nAjGPgKPBYMLshreO2Fsy0ZfU9ZkcGmrotm4ACxQEvOu6bF3ZIJTC+9fc1XSC\r\nla+uvZe41G18hwgiYjWck/nYNbwT1U21vdLya0amLGOViEH5IjCu0V/+AqXv\r\nbU+TyKcP1PzmrTnSbW96nql87M2PfZweCEQDfP9IDiQzcxLMPv0Ko0oIE4nl\r\nFij4exzqn9qnt9iCzvYgdGpN0WJlbu+DcDP6wY6fpU/eXfPYIb9EBK1tT5U5\r\nzbwnKo2D5DZHRuHjK520aGZfrmgIKkml31iGabGxl6VC3gg9B2elzbHIJlhC\r\nKu20MeRA3Nyjyo3RFpOKIu1h/62zSE86A23WldJdH8FPExlJU1Psgnh8eACm\r\nwPCohstZBrYnbOZa1rSoFq9FjO4u3HzaFOuAmI4k5jpEYOCR6/fqsoOdgUUZ\r\nusPFbd/PytB1uvuaH0zEB86jRozXXSHe6zQ=\r\n=ScR9\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.1c384e6_1655292722265_0.7872721863416139"},"_hasShrinkwrap":false},"4.0.0-dev.d8521e6":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.d8521e6","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.d8521e6","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.0-dev.d8521e6","_integrity":"sha512-18ifk6Pav9ehV0AuCYWYD+udTqLhUer8ZAY5UDjnbRVsR8Nqj4h/yRUJT/kdrrylES1uL6MDAiNuqSOBe48ByA==","_resolved":"/tmp/5d4792268cfe8fde99f42b34994b86e3/ethereum-waffle-provider-4.0.0-dev.d8521e6.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.d8521e6.tgz","_nodeVersion":"16.15.1","_npmVersion":"8.11.0","dist":{"integrity":"sha512-18ifk6Pav9ehV0AuCYWYD+udTqLhUer8ZAY5UDjnbRVsR8Nqj4h/yRUJT/kdrrylES1uL6MDAiNuqSOBe48ByA==","shasum":"66bc8779f6f52811e6786c12c2f7e9157fb7b312","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.d8521e6.tgz","fileCount":35,"unpackedSize":62264,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFcpTq5n1sAscSfMYwRmQCKUbthM9gRpJbBvBbhtxwlpAiEAkQZfkBOpqpPAcILXRxFrK9XgtMurnSS+1TDNc7qI1ao="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJivZBAACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrQxxAAhFM6Ze9t9rH0XmEBt03LZxQtei5hIb1Ogw/abl1Tble0pudj\r\nfWOGOgjkdZFdnXssxwCfTUnWw1Cpnla1E4LwpJdArPZv0Oh2TdvQvyHmY3G+\r\nVChn99NYHlYsBsFfe2Yt4I2l3CvfTelza/M4j2eQj/G0pccTwmpTgGtHeyhQ\r\n3HSeQ5Fri1zelMXiLV6uEJ3iQBy38GDDF4LSYnJP07NGGBDwwdtHxR9eaDKY\r\nn8odz08u6GmPe6DcmZEhcA6AjFsxXghkr9qS1sqBF9X4bk690kZYSvb27phO\r\nFHwgspwY+07iM3lL42/NqIUes8YK2FAEievXKFCSk3+Fdpk/LrLrXOWib6b0\r\n0A6kGttLczqh7JuVX1LOuqMypjpiA/XM+b/FIPQhpIF/XMf+Gvax4hj+x9eg\r\ne7N6mCoIxbtNi/VNIBY6kJQU6BjBzLRLuCTUKLXAIfc0VxTG+xJTZILuBAUj\r\nA1nvAw9FV0mT/wZr7flJQcdRR4JqWh2FOUkEzWvm+nlTGpgO9dmhoQkQTDI9\r\nz5mjn14bFm6AyAx/Y9s6BO0hH1TApDeuMn7EUMO7KW8MAC7pz9Ctz7//3Wkt\r\n5bTjxoP6LNBjfBiLRRbXcm6eR8/2ZDyqMZXTWBKhOgCIfYeKtvuwz8CF/qyG\r\nyrIS8jLLpr9J3GU+FKKMekiG0wxbpCtdYgY=\r\n=719c\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.d8521e6_1656590400529_0.7992770429685456"},"_hasShrinkwrap":false},"4.0.0-dev.4867133":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.4867133","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.4867133","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.0-dev.4867133","_integrity":"sha512-q2x6Q19hnknNz43gn9cN5usnWRK4132rnaYyOVc5c+ONNEezSS9YUBDzGInLJFlnZU/uuplVnpraFRz89AP3GA==","_resolved":"/tmp/a259f046774970e42838a78a7068fdf9/ethereum-waffle-provider-4.0.0-dev.4867133.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.4867133.tgz","_nodeVersion":"16.15.1","_npmVersion":"8.11.0","dist":{"integrity":"sha512-q2x6Q19hnknNz43gn9cN5usnWRK4132rnaYyOVc5c+ONNEezSS9YUBDzGInLJFlnZU/uuplVnpraFRz89AP3GA==","shasum":"3779c710619b38f9c61a716e689efd9f149e4832","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.4867133.tgz","fileCount":35,"unpackedSize":62264,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHwilf/N4nRhAGSxEJM7EiRGpc3Wks+0qEPiLMpTMU1pAiBFafFv4vHAA2UNOMWThJR8fDIRMZ1VInhiA6x5R0rmuA=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJixuImACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqJtxAAoOxmDbwOD5McMm7S81jNxUaqVweY1KHNFlwwSy0JJA1IaC1L\r\nAZOYih+saNSUDynlGH3yZThx4Xc/gq0K+KaVctQdsJCsdflImXSXMNKtUAI/\r\n0KOx17JK8KrK3naAw6/3KHvY+4sdIiahXGdxiF7edRPxTmuWcSXLIgQIKT/4\r\nTGLojc6W4Amiiygk78VuhO5E7jLa7g/1wMNJR+4C9ZPL9+g4/5xDAJ5ZL9+l\r\nKd+5fOcc2ZnxYsYfjmjNqX9Pm2p/9E3XgHQXNPrrSbAoPgEi4pthXCEHqQ3S\r\nbwZ08rb4IJOM2SD7n2fh7v9wiBJ3tkHLj/uAyrCddOtsXU9d/qMqiWQ53zIf\r\n1sbzfP3qztsTCPV6McbXo++hcozYmMbNbAw0aFeGkVhOGBAdcF818UXVQmsu\r\nHSq/mWLv35BikUxmFmobxxY0uBIA7cbF6szVlfX+kCsVVrSPhzgbP68GA+up\r\nLGdZKfkbrHFdZPje+uwxtpCIz7h1vmXTuDsBeEqydNfcSVs0NZRWv9UGB75v\r\nzfckYY9brcJ1sIm/AVU1essd9qyagcOZe8KMh8Wyf5WiYrgHrd2A6JbZbBX8\r\nXRbI7B9frE0rFvRcl1/FST1NxdGaI4INc4WEZ2l4Yh8jNew0XkDZlSQt1kRH\r\nOPVYJ3XACXZ1upSs57dJYCn6gmlz9ohYNnw=\r\n=fyp1\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.4867133_1657201190594_0.8502011318456044"},"_hasShrinkwrap":false},"4.0.0-dev.838cf4d":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.838cf4d","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.838cf4d","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.0-dev.838cf4d","_integrity":"sha512-sgoV7l0Fe/G1QsS+27X50YhFF2PLxQbH6uLrIlnIsCTX8dNP1yizdj5UGBiz9AUvLg4JpjzROisw2iJdAyC69A==","_resolved":"/tmp/a0dd5127dbf48d8d2307fe94c61dbbe4/ethereum-waffle-provider-4.0.0-dev.838cf4d.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.838cf4d.tgz","_nodeVersion":"16.15.1","_npmVersion":"8.11.0","dist":{"integrity":"sha512-sgoV7l0Fe/G1QsS+27X50YhFF2PLxQbH6uLrIlnIsCTX8dNP1yizdj5UGBiz9AUvLg4JpjzROisw2iJdAyC69A==","shasum":"18577a6edef5c27b060ce934a12fd771da53b7e3","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.838cf4d.tgz","fileCount":35,"unpackedSize":62264,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDT1UcYtzwi68r9cU5Oy2ExxCm1djMG5IN1jCXigCT42AIhAIpy71t4lB2doxU+V37OAIlZpqdXG2x0sWtpwlFYhYJE"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiyAFwACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmodjg//VIFcKE14E6p6w4SoQPFy1LXIdXbkhUTD8/nYh+gSPWKID3pT\r\ndTTYImbXq0AAZx3i7UcgE2N+kfqCgRJ87T3V119VFRomI15TO5iZaGvaygin\r\noWOncOpPWY4STSOIIKnTB8AVYtFSuTf6aoYw8Pbgn4F7o3U436WAZePRAqar\r\nEWzboXXDKMX5YQaUQZ5rL+Sq+bmK1bHYLkTypKp+4/hyoyg9K1Lk3ZrtPuH5\r\nSFUljD65VSZI79j4+i7qVnUUecyh2benvwo2eLL7nO2Z3lc1A/RVqxXY7xrC\r\nu0cFMiWF7TEj1ZyXjt+YwZEKnYvMjaeWWnzEf6xWWExhT3T0yARDghiIuix5\r\nPybCcWmlvXuIHMQ4Dez3fPN8pfHzCUA+k/EW7BVH0/QVQa1KqovADnypcKQK\r\nHFPyDQ8Dw06JWefTQ5i0q25vuHp2InoiSFopON5dLeUTURyP0rvHiO784rOb\r\nyWNTfpEo2M7FxwIWkII1M4TYrsJsPVyxfoDeMy2GzloSmdVL2MwSbLbNsc7V\r\njXV5zz+ZEv76CovmsbCDNbeStEWp8GKQXDIDUgVesWHYyvfkwFoKHqk6IoDK\r\nC28dxFWA6gZgmLqa0Mx0tareWLJJ1oGDwzZkaJwAnxv8vFdi5URJ00BD1Wk5\r\nvxPQh7skkLeyzX7djWrNhYHbdzJpDsn0GxQ=\r\n=wBEv\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.838cf4d_1657274736217_0.48599989503024577"},"_hasShrinkwrap":false},"4.0.0-dev.06401c4":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.06401c4","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.06401c4","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.0-dev.06401c4","_integrity":"sha512-BYTdiZzwBCdoKUzlJ2PC3GjcTFL9Qyh16H4otPCJD6Vq5tusOSkOjkf2aw5dkEWxReOcM/WH+upGlFfEEPNQhQ==","_resolved":"/tmp/7300158ea8196f83b442e7db8cabd2d1/ethereum-waffle-provider-4.0.0-dev.06401c4.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.06401c4.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-BYTdiZzwBCdoKUzlJ2PC3GjcTFL9Qyh16H4otPCJD6Vq5tusOSkOjkf2aw5dkEWxReOcM/WH+upGlFfEEPNQhQ==","shasum":"a1587fffcaccfb6494b28bbc36ceb963003ee8ed","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.06401c4.tgz","fileCount":35,"unpackedSize":62264,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDX/pePMRtKsrHHy6jZwl4TLRQ6ECis3YvNs6j5epOTCgIgbplc2eA8cE0t+bm1QHpsdSzq5a8onddB39tkuP44sbc="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJizYC0ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr4Ag//QZf8DPTOyv2JOV+2NjvTwukqIf2QWPDBoQvsXUYEQ9JasMGU\r\nf+Huz3IX2E5joSwxVY9cJLOD49LBV4f1w4DCul3L3EmQaYmXAvldEX0P2OHs\r\nYiA0I9phiAicZCksrozXXuM19wLAtXlwtB00t8lcnUthKbwA1SgSSoH9s2c0\r\n2CQk4yXvmCiumQPHy1F6dGVNwUuhjb2k0K3R7J0G0M+Kw7R4Wnl0HzMBvXNY\r\nZXXw9pY+5xr5eiizeOmbCetHaglGELp9FBIEIfR2Q7X/eDt+eC0aiu6AZguv\r\nXoJTJzrXomK7RzmlW1AwjwW8kalbvbMRlbAVZnjz1b5uzPJ8QWDG4iRiBTsE\r\nv+GX3+vruinvUlcYUZ1wnwfxQUYwJVJ+OeXWZif2sNGefrt3TjG5ZV1hxdMJ\r\nOsvOG5mkNXPFvHmlcL9a2po8TOFs2cW+fcnBptKUoZE57V5IfjnHzZKElJsq\r\ny9SbseaGwIS1OJ2++5aMkqqL4Hmi2bNpNv1/TxRL5EAH4hGaAyi736kGIZ4c\r\nsjF3897jQKIVHskgr6E0dVgnXLbv02Wkqse6mdRSbhZ0qmaofksJFV3bDRZl\r\n7TV/vSwfxrSkCnLvdS3gr74lqdquhePRlQ4cTn9DaHyg58Lm3GXs3d8QTP7z\r\nyLszeQxAJ/YPhcvzX2dwP23kZDMzfmXvb5I=\r\n=pfEZ\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.06401c4_1657634996466_0.665929411983448"},"_hasShrinkwrap":false},"4.0.0-dev.79d1c7b":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.79d1c7b","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.79d1c7b","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.0-dev.79d1c7b","_integrity":"sha512-W5/IxVFz4VhepK6s1a4qAB8mJnsjVK3fgy5lt4HV6JgQ+CGTMLEzZ+/65nrrpgkuS3N86VRbSd6mnwQL5easrQ==","_resolved":"/tmp/8e540e20e16ea1d3963ea2da8072a656/ethereum-waffle-provider-4.0.0-dev.79d1c7b.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.79d1c7b.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-W5/IxVFz4VhepK6s1a4qAB8mJnsjVK3fgy5lt4HV6JgQ+CGTMLEzZ+/65nrrpgkuS3N86VRbSd6mnwQL5easrQ==","shasum":"4959637478578ff71e42c95a6d9a2adbd5dfcc8b","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.79d1c7b.tgz","fileCount":35,"unpackedSize":62264,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIH9e3ADyg65/fbP2lR5W1WBBuLBLBzRWjwMjq/uwAf8uAiA9EaIwBGCKRIwGtJw8e6U9egCWKiMo9cX2boqBsjZ/kA=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiztRAACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpPFA/+P+jSELjqWWXxOnurTTf4b70SIsZdJCepS1fKM7FWZnXCPlFh\r\nZWHxFyCrjiJbwxNGGDnRUkQRfqBmi4aF0KaB/2XsDKhhkoyEjDAsFGlbPVmN\r\nRQvwnlZO5DLduPcVrvbfqNqRPj4Wt3s2MgfDfxAtjxPHiYdQY+CS/pmiQWkk\r\npEfU60enimst25HQVp0lzAGl8Gf+pQBZv6vJJYVemciZUYQsA8bB3CGEtYrk\r\nbKISRpP/TxPTFie2mTe4yKulKHN+rIQiuZC1QaG5TWFrW/kRRKQuwC0dESxE\r\nm8r0xo6Oak7oUpQI5tFglxsmHyxjGXSiXAdyve0uefIjyhBExRND9wHmGKty\r\nixE4Sfo2lv2pLWORSfZ6nQ7DYuIZga8N8IFS2aPjwsxM3oA5fnS9WgoH5bZb\r\nzASE6TN8auWfyZoPsn8Vo1oYdjd27PugS9o0kPuhOXc6Jehis2A7fx3EqsVr\r\ngWsOyYjF/40aofX2Yl4Iun27pHc+FWrbOjxYVDY6Txdszc7J/RW8IT36EF/V\r\n0kY+3OowD0UWR6IoZiPfuc8DRw3KRf1hYN972IB4Fv8FogxVGQ+hL8gVrzUw\r\nWggT8Z8qpwmU68sumZdVbLEc4m9MrARIFYmlLuODI8a2V7qgjFuXGBMZ+7ZC\r\nCssrMixFGC57Ci5BmhUcR7rIIPYe8weRjuw=\r\n=tTSb\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.79d1c7b_1657721919776_0.747176110324488"},"_hasShrinkwrap":false},"4.0.0-dev.5587e09":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.5587e09","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.5587e09","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.0-dev.5587e09","_integrity":"sha512-4iHuEz8r1whHDuaOXa2BXy9DM1L1d0m4EX+D2HChIlxY+yta7NFraEft4nOKLEejRCEfMHS83v8fXtJYu7uPfA==","_resolved":"/tmp/5256fbc335b409fa1290cbc4d4927e3c/ethereum-waffle-provider-4.0.0-dev.5587e09.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.5587e09.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-4iHuEz8r1whHDuaOXa2BXy9DM1L1d0m4EX+D2HChIlxY+yta7NFraEft4nOKLEejRCEfMHS83v8fXtJYu7uPfA==","shasum":"c9b793f19c5ebdc38a97bb05ce7f89eb4a2545a1","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.5587e09.tgz","fileCount":35,"unpackedSize":62297,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDBFWUgcPwKVGCYoMxAo8nsa/KWUa2pyu9CDKxIT3kSZgIgDx1DZ2A1+0gg9QOjAaWcgiwzkipO1k5VS0qeyGhynn8="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi1oJbACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqplQ/8Ce+QMO9y9NJPG/hsRK4ImgAOOadh6XQ5XFxVGoRmzEl7ugY+\r\nExNAINg7iJ66gAE5yX+tqdifo13Yvl9ocxPkMppHXJol3aOy7sXvvV3RDqwC\r\nqh+fZ/Vft2WUWEwfTrehyQGX8N/Z06tobJk83a5SDFaHUn5gmXcgkOlyo/gK\r\nyygT+hHVWiXv9X1V8Oz7d7WFrfR2OIwvPaHVJ5LfVjxi1suKs8E9zOkTCUYK\r\nb7nSdquXDJQZ5m7rb9G4Rco+QYhLKN+5sQOuU7Dwr6UfKpFZtEVH3HGWLDfN\r\nA5+v3rdSwhKrDaFvZ5orcqO+4/ikpEGIIhYhaFTNhGq+gAlWtigNArAcIMTA\r\noFy6H3aEMpo9qVfaPkXfAXwupGSCferoigqhqt1B0jZ0DmU2+nYKQ0EuG2dg\r\n56duQuC6rd9koX3jCYOnvYhuSWh0GKf0zOwfbCrHGc4VE86OVy+d2Mn81CIM\r\nH6T3dtA+8Pm4V7QAK/9WekY536fJdxqvk/bEq43+hJcQc6/NIHLIWzUHgXvU\r\nbqQzPuJDjVTjyIss7U3x90x21sn+GiX50PrqmSM8lYuQkpNt6zAdVJSNPI81\r\nuV6jtQ4ZI2s4uA/fzl5DJkhIKDgNFTCaa6gPGy7q4RGKjCgT09PRU6Aqr8MJ\r\nlk92Qud67taNtrnLu1wq+7MbMIVh9IkHYb0=\r\n=cekb\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.5587e09_1658225243652_0.9919199017664373"},"_hasShrinkwrap":false},"4.0.0-alpha.25":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-alpha.25","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-alpha.22","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.0-alpha.25","_integrity":"sha512-BzAUdgQ/PJdjr0T7JVU730+LOqoVstUvICldTo6/HSmsdjUwNxmxVDA28A3cfhV0tt6+u+4ej7VhcMjVmgY/fA==","_resolved":"/tmp/8d6b1304d703f7e872a368a083f635d6/ethereum-waffle-provider-4.0.0-alpha.25.tgz","_from":"file:ethereum-waffle-provider-4.0.0-alpha.25.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-BzAUdgQ/PJdjr0T7JVU730+LOqoVstUvICldTo6/HSmsdjUwNxmxVDA28A3cfhV0tt6+u+4ej7VhcMjVmgY/fA==","shasum":"11a152fcd37aad1abddb23ec01e0fe3f27670739","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-alpha.25.tgz","fileCount":35,"unpackedSize":62293,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDKA3V58yAKTKTOqyOESRbIThH1DO5adaypqixWRF9KnAiB1wI5cJDHpiVvBpjhXZujziXjHpW3UxYg42FYvXctW0g=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi1oWpACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpoRxAAilFazWc3dD0duXLBd1jsWoc7mo5nrDCmDMc/ra3sRH//FcLn\r\ncHjb04ec8MpQHzFKycWYRDVdlxxC3gqoB7ClgpXPlbifaUVIiUCB72YdMIkJ\r\nqpKeBGCGm/t4XHbGRDWXdnG7nUWCDoGJDiudwgUPi/gjDeCLwgfTLP4xjaeK\r\nL4ubuxvfqQd96wzrF43W8L09ZiFrfIfLDxodMs1+3tcOCDKGT4bbT0qpq/fZ\r\nM2E8d3gDKel6OzQfp8vDJPovbGSLmA57metXEeGmxAkQ8DtbXYmImy/DBFYd\r\nzL6GjqLjgXLHTTurXfY9CxMAfbLjopAm/F+DNANq8HYjAdeeZvSytLCP8P1K\r\nJdMtE2LvuD41XFVPNftAqU2p0tBFqOS64RPPzF0KKP0WFvazgqaQHUnRjDns\r\nD50O3j9cc2eQo92AgfEtaYUz+mUHfdvv5CTYZNhP8WcnPz13iTHZITpQPx+u\r\nNAo07wG2XF+DVqsg9/3WEuOvXMb4rK2AeXfxSBp0pQfUUomLbfa1E/bxvlt9\r\ndouxvygnzFbPIwtBd0XpoVnhDM84v1ObhA1fk5wXpGu3oTcW7QqI80hhJNNJ\r\nfhXFyidGsWYOIleVuyom8dKr+02K19cpK2bPkK8fKp4kTroTtEYbNjPh6U4b\r\nX/WutW1BFR50aMluXGqax6p8dgK9/kHjzNk=\r\n=XN/2\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-alpha.25_1658226088789_0.401096919348944"},"_hasShrinkwrap":false},"4.0.0-dev.5c29ca4":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.5c29ca4","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.5c29ca4","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.0-dev.5c29ca4","_integrity":"sha512-f3lrWYZXeIx0LcqEzI8FzvlBi7L8kVtQMlXQyVgyC8sG0H5Ib84KBYGr9bofzMxfZ6rJpBecXPMo352uK1SX2Q==","_resolved":"/tmp/43b5026d88ab8938aa77edb342bd0454/ethereum-waffle-provider-4.0.0-dev.5c29ca4.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.5c29ca4.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-f3lrWYZXeIx0LcqEzI8FzvlBi7L8kVtQMlXQyVgyC8sG0H5Ib84KBYGr9bofzMxfZ6rJpBecXPMo352uK1SX2Q==","shasum":"5bde16f559b056eca4a2e65def62f66c87016fb6","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.5c29ca4.tgz","fileCount":35,"unpackedSize":62297,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIE6d3oAogxAc3ahcox/0BTMgSOh8Qm7OlXRhHjfq6P0GAiEA4AyB8ixqHFZgIjE6C3zoHvxj/knKWzExUQypb9g0JJE="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi1oZEACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoUuxAAlNud2FelHVvtkqiHBDaKQSeAXLgFyYar6WbcYvzTkkXdi3vz\r\nK1yhunaWHOUa6jgre0FD/Q9X2nxOS/ygVMbzFHX8QP1gX4KjKil3ecy14gKp\r\nNUv1Un4ctLbZ2hqA+FmwoAj8MDGkY8MU7rDUP5V+6SR95WDGRxCR7ZiGXbpS\r\nFP36pdDTg89dl2PXZGrsBYRB+jj565jyg/Pl7y8K/EuR32G+xdEF/+3hHYWT\r\nh1b9MrvVARN4G0F5plAW/DCnal1RJqyJzkiTqmid+9hx1AxjtpMfh8ZD4zNE\r\nYOj2QofaZfehkhpJg5SgH8B0BQz9XCBGaB+qa8t28aO/zsUvUHbZ9n+q6Q8a\r\n+CqXi1Fl9WiSqmW+7HixRtlnN3bMV8O9oXzMob3/s/nFeb2b9p5KeABWX7eF\r\n46Lh7aSP8GeQrMWipKkekpl24zQrSMjdisKxYfvQxBRlER6eYTKcBA5n6Lpt\r\nhS4sCgWaYWEVeFBUc5t9pdHWp6iFTZOMWsytybRk8hrxZrIlibZt6Juhds5F\r\nzv73MCG8Xf0Beuzy35RS0lAeX3ENuu82yy5CEc8OjYBv3duqpRyxhFarMBiB\r\nfvbkZpL460tlsknkw6BkmCj76VaUuB6/DAAOIO3yaFiOXowq3tNQ2B/AU2wZ\r\nQaTxlojkSnPyuPYtEt7GweCVGqjT9PzaAKA=\r\n=fvxG\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.5c29ca4_1658226243848_0.7037235871882306"},"_hasShrinkwrap":false},"4.0.0-dev.4ce739d":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.4ce739d","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.4ce739d","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.0-dev.4ce739d","_integrity":"sha512-Cr64zh9N/4h1Vi6r/rcGyGVDCWNyENtiG0U8Dd020W29XbX3f+XfvXhFqatJhwMXc4b0utF1bDavcQzSE5g6yw==","_resolved":"/tmp/72f7cd7ca861997887f3d4c923800f98/ethereum-waffle-provider-4.0.0-dev.4ce739d.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.4ce739d.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-Cr64zh9N/4h1Vi6r/rcGyGVDCWNyENtiG0U8Dd020W29XbX3f+XfvXhFqatJhwMXc4b0utF1bDavcQzSE5g6yw==","shasum":"72b563181eb0616451e2f2a8063147c726512447","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.4ce739d.tgz","fileCount":35,"unpackedSize":62297,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCBXhsKLBdX8EwodAYtl75BQqkIgRdqivCvt8gdEJXAKgIgZfJ65X5kZk1fRv67W/h3BZngdVgJ+wVUVlMDdYNPbDw="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi2VJ+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoLug/9GPiPvnADCv1YPTL1kPAcJjAJjWaNSQPsI1XminF8qX2wwek7\r\nMOxRg6+2h0rT+/rGO5BIsexKsiDqGM0nOHgUFhGdndMz7qI8K+q521IFVQFr\r\nYRWg6EmhU0v8kgWVAxtGMrBBnDLb+JFNXqtfGFhuLpxaNjiggU4osURBT3gy\r\nJwZZ1yfQfJmYIfba7nkd2KGVfaAPDFWW8PoHJYmXfCRL8AM6wk6xz0Cr8Rks\r\nLjDi3JvMABsIotkki8/StoyUgNNQzIqBh9xzQf7kbTMPhL0rOCAR4E/6NyEZ\r\nulwoTTH3+OX91HWIWCqd8/8iYKCGWM7dX7xsglj86dNNSJwQUac+6dLAtZZA\r\nIjYetB4HWJmAf80kQS/qLmiVXomj6ctwrmVh/By1T323fv+R0YY5Q5UBenzz\r\nA6C8WLMztowGSgoMicmXOxr78WSbpSYeG3ehzwvHR3buv+iFBVQsMQO1Mykg\r\nqSeD9WWbcRB+AqD6GHcSiszyPAUicHoPeVjt9YXlQJd6XwEkgdHp5z06YbgE\r\nUbtkgf5RUG3nRywgIa3KRyFKVAgmu00B2wX5lAW8PCcGHWU2yM1GD2nximQ/\r\nVxLaN/V5dgY+gLHugFb7evYnWDRU8hbffCe8yh/MhcpwuXTJimYNiCQgggu9\r\nqIJEkM6vWCrPwmPxCuGHE8n4U6vYeESvibs=\r\n=+HWs\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.4ce739d_1658409598410_0.0021994882709908126"},"_hasShrinkwrap":false},"4.0.0-dev.c98112a":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.c98112a","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.c98112a","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.0-dev.c98112a","_integrity":"sha512-ceg6VNd14s9zJpxrQrE7/XJSDDq778aJURVlVBe19+wcmLop9FpjRb5dXpiHMnPST/PdJxEDXXn2e1SFKe3dww==","_resolved":"/tmp/77628487168c19922a7bd0ee174d7813/ethereum-waffle-provider-4.0.0-dev.c98112a.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.c98112a.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-ceg6VNd14s9zJpxrQrE7/XJSDDq778aJURVlVBe19+wcmLop9FpjRb5dXpiHMnPST/PdJxEDXXn2e1SFKe3dww==","shasum":"b17429f4c655e00fc5fa0466e7e6a1cff200c117","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.c98112a.tgz","fileCount":35,"unpackedSize":62297,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDp6a1LdE3dy9mxr26FKiJWq/E6MXcCb/Tz19zls8LvKwIgIsRBgm9onZayW+pWlGTaqWst9pGtrSqNPdLWos/l9q0="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi2WAuACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrVrw//S/JabDJyAjwPLRK5I8JwFxokkXYnYM5KJLpQu7m90sD9KJQW\r\njUMoKh3wJECUYKCwBTV9QvEL6AnoctQQBmxTIlQLdbPH88kdauHQe+6lhqN5\r\nmZiZI4cWGn7vCdMC7JYX/0fT0ReZWsj6e4cRdpGiqil7YFDjmOWzSq3tPyEh\r\nl7oZxRHe3msz8vX6+h2TOTQ4bfeywRMUeaz7jki5qk33lHctSCSYcqVFbuZ9\r\njEj0fRkOpql+PCUvaHiidldK1JCCTAYczVfGwXOaTD5626aufOT08Pv0BkOQ\r\nSqRP7YskKlqmTvfdGujLd5dPfLDt5tmqDL5i/MeSVrO40DiX0duxxUfP+oxU\r\nfqaaskOm6qofeO5QR0SAWgFM7tH0NiyRwQix1OoEIor6EWzTgdm/PCcxJamG\r\n3wW4qjTEiHj9G8DfNaf54v242v6mDYKWexR1KscfwxdKwQ85f7243VS5GFA6\r\nf7tW8pQHgSAacrSA/2S9EZT1oyQrXBhVeANT9mZ+A4HlrI0Kz8sZYOZd4Hk9\r\n470bqE+/83gNGMkot960txPwfNBtd7Ox++hJOCtr0qNoLfvX+bZUbr03o52+\r\nnszsRazoWaD+FWrz/iQ4CaXSDuCU5aWhwLgxyYKVyHCWqojHhzcFs6AwqwHx\r\nGGVgexId5+n9Dx8bG34Mxgp1/eTq8/iFLpM=\r\n=vjY9\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.c98112a_1658413102613_0.4487369191556545"},"_hasShrinkwrap":false},"4.0.0-dev.b028d7f":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.0-dev.b028d7f","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.0-dev.b028d7f","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.0-dev.b028d7f","_integrity":"sha512-kPvpgiWndVTHr0q1q/edlAUgbZntqZb/J7vAPt2BvJUlgyW+2CTOJJUaghFZX/V1QYcHNZeVWhe5srUWWEAMwA==","_resolved":"/tmp/840cbb616a1855aded8bef45062a9205/ethereum-waffle-provider-4.0.0-dev.b028d7f.tgz","_from":"file:ethereum-waffle-provider-4.0.0-dev.b028d7f.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-kPvpgiWndVTHr0q1q/edlAUgbZntqZb/J7vAPt2BvJUlgyW+2CTOJJUaghFZX/V1QYcHNZeVWhe5srUWWEAMwA==","shasum":"c430df5993952b01dfa2b293c035f856a9990559","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.0-dev.b028d7f.tgz","fileCount":35,"unpackedSize":62297,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHIIfU7eA6hcVgVGyG7ZQBLDRIeq7XUbmF/Cg1u9fBN7AiBp5khEwzWsU1OrZZlDE8eNv1CYKl7PAwQ7k66OCteZxg=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi2XiKACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqQtQ/+MwpG/HHD67kfIzeFbFfUCF67F+V/HwC0Jx1Ndl/M15kFEYrt\r\nJN85KE3dLpJye2Xa2dNcv/QlK9J0BRBzZnJaoTucSQRSo4+OSleQsZAuY2EK\r\nl6yChPz8hRs7SHniCPgk0UrmclbBD5JI8zQOvO0wgyI/s8BCO8YHEo5ZerIr\r\nlW4ZKO5jilAIKW4K+oD9yGGn25Pd5k01PRL3XKHWpk+EKEhJ4Gxw4h0fzWo7\r\nE3eGjopyjBl1UW97lTHAMH1DFapg/qo99pKE6f3o1TD3MFoXlwstKMCshuvT\r\noUJ+Wc0j+wfsFBVAnl573DgWc/MvhrOhmYmI3XPo6ueL7X6XZaApuRMhoEE6\r\n1KPGjfAeR6GLhG2pXsi22KZV1h3vQA+EWoR6KPhLzxQJxLIt6drIWSZC+lAH\r\nJGBm1TKxFTNP5HRVgqsz13wz5Eoz07MCo8pMzfw7n/zwxjDy5T9Qv0lpzQmZ\r\nPi4WrhVpH6aymBh6nJqe03G/dwoljHEwZd0H3O9s/AjpwBYuizg9lxQi/InG\r\nhx1hYwvxYSuKKoIWcEETXKhAUbc15SLEH1QAVofOlFCMFZ/1evp4Z2Du160h\r\nRtzv02I8zxS0p4dGJQPzVyCvv9JB9ETgz034yutQzekBJHldXuMxTTTWF4tJ\r\nIBtL4QwvXG+JZIQkXz2zQGeVnVlNRdzzSKs=\r\n=VcCl\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.0-dev.b028d7f_1658419337090_0.2356846881328376"},"_hasShrinkwrap":false},"4.0.1":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.1","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.1","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.1","_integrity":"sha512-6IBs1kg50AOvaNHJCjl+mf7hQCzzqP9tdBke8b/0ilWtbSk3Hb5follhbQ2ERdIDy6Rf0TuQLUJQYOsLwZcedQ==","_resolved":"/tmp/d5c1323d2c7760c346a599e19ea1fdd2/ethereum-waffle-provider-4.0.1.tgz","_from":"file:ethereum-waffle-provider-4.0.1.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-6IBs1kg50AOvaNHJCjl+mf7hQCzzqP9tdBke8b/0ilWtbSk3Hb5follhbQ2ERdIDy6Rf0TuQLUJQYOsLwZcedQ==","shasum":"0bae8068bfbc949225bb75a55454d440ce641dc1","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.1.tgz","fileCount":35,"unpackedSize":62275,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDpC/3ZSYNRXGOxMM6y72r9uMQERrt1E/a2VZE3e4p2twIhAJK8TUvdh66R0hu0ZKALubgcukZuJY24SZ174L8enGUU"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi2m2uACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq0Nw//bXqZMM3gRsDSHwHvvG56kfz6d+l8MNuprG1SIzeQ1IRbF9mF\r\nvMN9v8qJzU6hR7MKFrPo7H6NqXulVZa9XdM55KLi+cC0bozRN6B/5zjo82ux\r\nzWrHYBijuWZBS0LN0b+I+pp1YhBk+TxeNsvMI+csVR8Jht/i9M45UKsU7tnk\r\nVTwWNPSS+Rv/S0Py9BLYipsTxxpb2V+mFqLhIh2gjDcHh+K3BkrEK50GUmCU\r\nbXkzylfD4Lg4mRtwMqYnCSWMzaQv+GTzSg+T/RfHdCwfOOUiDdnqNA4hKSqj\r\ntWBwBbJL99CrnYVjMcQ8SVoNJInbmJUUD6w1kZ3SQ4BnnS97AXIJNeDKz3YA\r\n6qM2MCRKQN/26dNQ9x843Tlu/bMBH1bmhsK8aZ9wpaJvi4pEiACNySSs9fVR\r\nlwWURGYavKrKZWbvFqXdX6S97SPV6OYacjiygVIWhZd1IYb8Uq3zJFhZ4KD3\r\n3cFh3r4kgf287BncUF0t7zGBms47OSkUx3cHZCJZ5NYFGrlMPuGy8sLbJIRW\r\n42rAXb7omraBHDn2wGGrKubbUoJrdzATQXrQzol8f4SL2trhOglToYB+8F9j\r\npElotSxaNK4mwcUrl7eHf/ORFVwytJ/2ipZFXutPW/pIhz8//W8T1TOdNHyn\r\ni8tuM74NORr3vdcM1NGS3DHPztEkB1Vkj1U=\r\n=Q1sZ\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.1_1658482094415_0.09671415002199168"},"_hasShrinkwrap":false},"4.0.1-dev.37f589d":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.1-dev.37f589d","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.1-dev.37f589d","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.1-dev.37f589d","_integrity":"sha512-Wj0zJXA+1ET+QH4lLjYiATeAVnqamyK/cC5kz+AAkxuQ3sirkBnmnV5v12tjFeB+lVr5Qia3M7GW2Q2ohqi8VA==","_resolved":"/tmp/769af40649b20583e16bd75710d6c22c/ethereum-waffle-provider-4.0.1-dev.37f589d.tgz","_from":"file:ethereum-waffle-provider-4.0.1-dev.37f589d.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-Wj0zJXA+1ET+QH4lLjYiATeAVnqamyK/cC5kz+AAkxuQ3sirkBnmnV5v12tjFeB+lVr5Qia3M7GW2Q2ohqi8VA==","shasum":"347f9bb6fcc8ef7de568ee658280d9a77a0e4921","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.1-dev.37f589d.tgz","fileCount":35,"unpackedSize":62297,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIATPQuS78pCjyqfjLufluSN/jFQARh1u4hSJTdtoc9jpAiEA6YF48uTEmcUxyG1NA9a8HYcHExmJZOSoc1QlFGsXBaI="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi2m4+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmokvBAAhZu4kYv9+wt5I4RH2S/MEKIC4ytN8R2oWXvoLtgueluY2yvs\r\nHcy6MJNuhqYHZ4HzvjoTfGby2jg4gLj46uChBFxXiEHqf7TwFCG4/smpvLba\r\n4wD8zL5ygkGIhjdDpBtxeFkmzkNHggSKBeoV3JIgdujbrhqY3OCnXr8wihS9\r\noGPD9tZ/Yz8g/TkzdJlXSOdv4/dS5Qi7ft40SGvxIHgksAH+hJq0wnVWpfia\r\nevL46uINCT0QpJWBuv4gfGU6ZK/7BTMgxQRosisa7vtw6mdnBpJsh0H9lDKj\r\nl4fVDpAeWq4nIeRTijWG5hB0fuIhqoMwdv8J/1gbnqOYTOLSo8AiTNiiBruQ\r\n/TSSJLLEkGvtS511zWD6INAjKSYi1X6/qWcnRD+45Ka8CDPKGR3zAoqdGEUU\r\nXTCFBLNMTVinxq04fv7XnvD8Z0qd0TXsmVQZrxYqPhShIWIKw8PJ6zurSUVq\r\nPjruPdkaLee3esn3pftqUjK6Ef7xuNVb2ZZrWsMG0JKm4OVVmZr7FFyPRACw\r\n5VB7BNEJlrEYSaL/LqERHkylslLHdzSx8vs6E0Oji6bjAxzmYs14xpwSN6S/\r\ni5XfnkCZKgtQoRLYbqMKsz/dqhHD2G+YJ+SAW2VlB3XGG6+N2ufUbJEssQms\r\njcZFhImNZwXkZSSnxyj4VwUiEqH1pcro7sc=\r\n=ilsy\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.1-dev.37f589d_1658482238042_0.6421321800031565"},"_hasShrinkwrap":false},"4.0.1-dev.2e1837c":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.1-dev.2e1837c","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.1-dev.2e1837c","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.1-dev.2e1837c","_integrity":"sha512-Y7py6pQM1pK+siZccRaiw8uc3nHL/rkmR1SnevZnHq1Usduni+DJymLDm6EPJGvgbThuJwp0bZfCNLEnxTa36g==","_resolved":"/tmp/39d21afac03c64bf9621d72cf7415698/ethereum-waffle-provider-4.0.1-dev.2e1837c.tgz","_from":"file:ethereum-waffle-provider-4.0.1-dev.2e1837c.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-Y7py6pQM1pK+siZccRaiw8uc3nHL/rkmR1SnevZnHq1Usduni+DJymLDm6EPJGvgbThuJwp0bZfCNLEnxTa36g==","shasum":"2ccbda0e2970656fc3874ab0dedc845522a411e5","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.1-dev.2e1837c.tgz","fileCount":35,"unpackedSize":62297,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCiG5k0Uj2N4U952D0+tdGkiBOGWBMZMVT+366ka5Q3swIgCIeLQQIDRdnonrGEEvU2kkKKPwgATpiv6LaO/NcwYhc="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi3pgVACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoODRAAnALYKq1Cw7D2dItxcZeTkLkAiu7671OXCxpeV0Rg8RNp7lhG\r\nZEjxkGAyHoo3Wxl0JRscjn02/MPy9g9G8QICtC9t11QPQ7kyslHLT4vuB1JG\r\nZgxARrR1p0iPw1ZmonWyEISfx2ptbPNW30cSQRBVwYjbsBLo38RhSVn3d5Di\r\nL5nyAF/ID7/8ysyZ54Kl/jt1HMexNcJ52/cLcIX9CGLlhcLRHu7cw8PfSZPE\r\n/5sZu38+pB6Krtv608hCc7glFHpDAs7oAbAleq75vHs7E2W5CmwMnB2T1Gai\r\nhdxdPUECxZAVnuNeSjmDk0Tc1/ruxVQRmlcwwq9sm/DrLeF1Z63Ca6NBqKYd\r\nIG79nU2Hz6OWZcnhr6ds//VSQZdQnrVN0n3hs5HvTB448iuvEi6FiMQtn0S4\r\ntXWujmMCoORe/UdDGV6hzWORxfveFQFw52/jipDVSQvWbGOsTQojTLIRUgGl\r\nbavspugX3s11qENQS3n/3Vo262ZkFZxIXH+4XVuzCkY728YtI7KyYsDMza2C\r\n0SJzquPtHIYIvY2mlREK7XVidrsZbzlJOb+MeLjw0exavm5bFo6hBsGE4pCw\r\nAz1L7p31oJMsZ+djIPijpRaX22xd2K0KjD8ycXSFIsS9E1L0G6ykD8abX6N0\r\nh6jrxGkGaOCspI06ikcHVLPrk7/4apWMLzU=\r\n=JPTk\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.1-dev.2e1837c_1658755093232_0.11047980602841356"},"_hasShrinkwrap":false},"4.0.2-dev.0a87072":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.2-dev.0a87072","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.1-dev.0a87072","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.2-dev.0a87072","_integrity":"sha512-GEeHLNUqSuHxk1V8b4cE58ASKJoYzEMuO2YoEN/l1tfGBlPkEUrNb8R8IGYCkJ9nWzHrKi7eQniN0G8M/YhxjQ==","_resolved":"/tmp/172271031c3cb2dc4953daeaad83f7fb/ethereum-waffle-provider-4.0.2-dev.0a87072.tgz","_from":"file:ethereum-waffle-provider-4.0.2-dev.0a87072.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-GEeHLNUqSuHxk1V8b4cE58ASKJoYzEMuO2YoEN/l1tfGBlPkEUrNb8R8IGYCkJ9nWzHrKi7eQniN0G8M/YhxjQ==","shasum":"60a5d1d4bd65423ca608301bc02bfa173b2b74d2","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.2-dev.0a87072.tgz","fileCount":35,"unpackedSize":62297,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIE0jDcrqnBMSGY9OVUCCEGqzUJsump/NonCkesGC+aPcAiEAyEfuAOHD/uFNaewgCPtmyxD+N3x7Viuq/znS5Y7xajA="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi3/AuACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqoEw/9GoZMrnVHAihbtAI/9sFxt0iAHpi416WLdkoXkWoZCPMYB3to\r\nI+eB3sMEXgjgTLQ7ttHCqzlAXEHQgzMoQg3lrqV+cvLz9y4b4Vrfn4tCTd12\r\ncQAPpSQiLEMW3D4Zn84nJrtYeEXME68ynobe1Iw5h+ZHzbB9/IBkJYkVKKAx\r\nYDWoJ11YeyOHO/oQWcWuzECa/x+k31yrvhj8r2a3avo+8Xk2OporC96RiaXY\r\nWATO5t1mJJhOofXjMoTrNCnE2RfRNmvHqysWrcr8XaF+ISv+qY8EYgJ7S/Lx\r\nJNLO7/pvQrXEPuBSFAFxHcIsLsrViDxjZwBki9XH9abHS7TYT1IzSHUytdLS\r\nz8g+YTrFY3CevkiKSV5dshAk114vfMZscswJxVz097ZBPgbxZxbuJN0HeINe\r\niwlXUBf8LSriRvBcIB9Q/vfj/sTZXYfX3ldU6AwTzrJpMuJ4C5z7KoNzZCRE\r\nppvxPUCsfnAougLPlQIjECXn7OG9wxJCaomoDqXCQXZOgOmAGuyrkzTPivbb\r\nP0MnHdHsG70WiFS8H79Dc3FAXlPeTPofbJFGvNA5BoLijX5JO38rFCrUBRBp\r\nejCwDAKO6OWimqtU+dF3W3s+CgQDINDUlHAc+vkq+jmOtBDHkRdKZA4pum0x\r\ngVszQHMbfNCZVRLg8Kpruc6BxZMnkztwATE=\r\n=BPBy\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.2-dev.0a87072_1658843182540_0.17550880372268352"},"_hasShrinkwrap":false},"4.0.2":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.2","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.1","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.2","_integrity":"sha512-JDx94c2sNd1acSYF/5Wd0ZnLJhc92J3xEd+RkidNY1xonbCsGlKgLogSHNRSEAu+VNdeXth5A3Z9u7kIBQETnQ==","_resolved":"/tmp/e6ac63de4c0916b325631439a3d346b1/ethereum-waffle-provider-4.0.2.tgz","_from":"file:ethereum-waffle-provider-4.0.2.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-JDx94c2sNd1acSYF/5Wd0ZnLJhc92J3xEd+RkidNY1xonbCsGlKgLogSHNRSEAu+VNdeXth5A3Z9u7kIBQETnQ==","shasum":"e9272aac5937051784f370d42b2e66becfe8e034","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.2.tgz","fileCount":35,"unpackedSize":62275,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEaGueF/G0U4B/FykGbMwJyJ6CtkXJsAhl8QtrdgbJVwAiAOSLwJMU4ATPXNj+YjDAJtHjPZg653eh65ukV16GO42g=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi3/YkACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpOyQ/9F0bLg2PcS2C417Fx9IzXg3HE0AYFE9uiw3hlKUX7hUdIZtEF\r\nV/0e0JpEYqC9rfIFmmefdxhG685WS1kPxN2ovkUhtG0B98yAEQrEq18eedIP\r\nbcNiEmy1nP+XLJ+1WMHj2qKpJpfWr6tcronKz6AYJFEaWCqyiX7xr19aB/OF\r\nyUD3QYuLo4DLyeDM+NX1Cc7ePX5Ue4FHr7PE6z4XZoRqJp7Po50g5N22oxf/\r\nAabuQsgCfm2vH7Wc36JjdcL4kLUqfAXImzZTZ5y0E2viWg8VI8qVp5gt2WgQ\r\n5aS3bBPGNN7Yd2AfAkr8oOftYt7Odor2EFQIAkxa0ccCi4Znb/UGJXedlNpX\r\n2zuVvDyaYXPWc1vVwcW1DzYAI5811hk7ajg1shOMWgSIcsDselQbzNxALN1Q\r\neP8JHcKd4Jce9lryuTno+q2j8MaWkcJyLODYGjnciz+XyLUDQXyRilvnUiar\r\n68314h617aGeZ6LQCx4oq8T2BBI6OGJzOaRtiqL8Z4XcKlS5dxoBm+xNKlrU\r\nFmfE9b/+X5wp/VyZyQHKEubr27ZHwALHtTWnAfwoakOsOqcoGJsTdLx5ONAk\r\nB+emojQkDHqSDb//uaVGB1rxr+PVHBjN2ufOvAmlSZUfV7Sgo+slF+Np4yR3\r\nnaM598HACqkPDDt5twF94PMUm/A7jOetW/w=\r\n=0xfh\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.2_1658844707995_0.5776339346109176"},"_hasShrinkwrap":false},"4.0.2-dev.b329845":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.2-dev.b329845","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.1-dev.b329845","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.2-dev.b329845","_integrity":"sha512-8RrnFPrphxCe1V+vbNAwn5jwji01kjcQ5ElrICB6QEDAS4VTET1f56B/psEq875HDzRAmeEvS8nGYiECRuGIpQ==","_resolved":"/tmp/fa3fc4813a6bf399332316d5f3b5ce31/ethereum-waffle-provider-4.0.2-dev.b329845.tgz","_from":"file:ethereum-waffle-provider-4.0.2-dev.b329845.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-8RrnFPrphxCe1V+vbNAwn5jwji01kjcQ5ElrICB6QEDAS4VTET1f56B/psEq875HDzRAmeEvS8nGYiECRuGIpQ==","shasum":"2e91dfdc0d45a4db2ad708d94cb83e6508b9f369","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.2-dev.b329845.tgz","fileCount":35,"unpackedSize":62297,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD4KLgN1R7MdbftVwhRbYqiIJAPrNeiH8Yyf7PXD8q5DAIhAM3AgAfiEt2vABphccAcqrifJkvDerhmKTlU2HfuZad+"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi3/bhACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqpLg//aZC8QuCj9lf4nRWIU+ZPou9GT7blvEEowqrCDndAZcVABqhV\r\nLVMZO6/XNXriyHR/zbEnMc5gGrrmy9e05st4KtUv5dwocJg02s2KY4P1Z6Q6\r\ngIqHl4kt1hO8XQIDatGP/dkV1FHeV/DZcYofUIz0muXYW2EhE4Joq4Zp0FYV\r\nRSm7LDFHZev7AmhmIk288qB/+jSSBQWqoZCyweCSxgGPzZuALY5dRH8u6dhp\r\nkapxYlPs57ZGKGx+gCXXEQY99lMNA4yU1fzm/61KouZuN6AaF9yjVjWs9Q6a\r\nku9y0iZVtLN4/W2104GESohuUETz4NMmOfIxwuZPkn/XyGgik5rdTopHo8zF\r\nanjAV74yrYUiaf7hiJZfW1C0k7hK2No19LUyMq5902otJCUFnlM0nYOTC3iV\r\nJ7KTubWxcYeGEQNssXDsAgePfnfVkNk5rHL9o+v8YuHYyFofJ0iHmYEVjEFy\r\nngTRqBg/ipRROPJq4oo+KKa2yteXYYV+PFUUtcllFTP+1mT6A2ZO6O9+DGy8\r\nTkapV3vD78PcKuDdX6PEQFZzEwLwXm3tfIbntbOhGqG932b3Hn4r4pP/nA+A\r\n0OMnnzskBKu6WpHoqRfINP0E21/S1B69ZLT1NvZn4n0AzSJvCIqKcXmV+Y8D\r\nGHYBbxgkG8WKx/Htw1OD4H9R1IOlLpWNby4=\r\n=cuIg\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.2-dev.b329845_1658844897418_0.7316613437934474"},"_hasShrinkwrap":false},"4.0.2-dev.c513a49":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.2-dev.c513a49","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.1-dev.c513a49","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.2-dev.c513a49","_integrity":"sha512-JtNj/dMqMKEQr0kGi40bBLows5yZIMnr++oGOsvMsupVujmRJsQnZFG1w8+Lh25jYWw8yv/aYqM56bEzOn/MEg==","_resolved":"/tmp/0a6896e264dddb5e154e8e8871c2b0b0/ethereum-waffle-provider-4.0.2-dev.c513a49.tgz","_from":"file:ethereum-waffle-provider-4.0.2-dev.c513a49.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-JtNj/dMqMKEQr0kGi40bBLows5yZIMnr++oGOsvMsupVujmRJsQnZFG1w8+Lh25jYWw8yv/aYqM56bEzOn/MEg==","shasum":"af3f5d3a4af6c632ecf74492358bb8635e750710","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.2-dev.c513a49.tgz","fileCount":35,"unpackedSize":62297,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICpnvVeow34U6yl1rcRkg5IRmeNU8BNxAzIFa0hte1NNAiEAqcKBigBnQQ80pSVZmespu4dBUQsy0tmF19+op6j06Iw="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi4oMNACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmro5A//SSq6vhZirAUMmHc3E7PuTAN8mTVs9y31pvJVkidzW1dPRskt\r\nBJJss6XIFwONEPo9vCdqvBV6av7XJpddsfauge0tANhJ4zn841QJl28bVa0R\r\nT3I4vRvdfXY6aTW/e8nGVM2RkmqRVKK/s2nmmG3L+fFnyyFxB29KdeVTiGwO\r\nRDgDpiIWLppHRuJGGu+U8d6wF80VaaL82hcidmCIHleGgdUgMLWhCgqi3IvD\r\na6JF291TsTongqJ3cUY7Xb9u783Qm1ylM9GQIoPfEXEn2E3qZj6rPUpcBqPt\r\n+JMzKqUe5SejiSyupUx9LttOw0NThyQfniRK83JdJFfmLhh75P2EvzA27UZc\r\njB47SVOo1vD4bembcGhU4pCIY5quQc8UN6heOrf7IOe2V3SoPV/+MUziDF+U\r\nqlKP5nv6WbkQKHZId7kV9aU6KWd3XvQ4P5OYU2SwLCP1zoVzMfJQZNz34soA\r\ncUQsdmBMLp5AGW3EneFut92swrJiR3PKShrX9/tf6AMlX5f3fWZQQGaJGSeH\r\nTED+0tHDQowuuiyEJ1ojmm9l3WaUulqaiu9dAPU4M42qYzA+Pp/l33WOu3vH\r\nZjDPfdugyqNRpcRU7tYyrtctLCK3hYM0hKgiLh/MaXMxO2SKrVzUBeS46VWH\r\nECnCv5vfQaIouKQ4tXv2mlMG3VovBfc8Lis=\r\n=1FNF\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.2-dev.c513a49_1659011853294_0.7168586403762276"},"_hasShrinkwrap":false},"4.0.2-dev.382de5b":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.2-dev.382de5b","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.1-dev.382de5b","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.2-dev.382de5b","_integrity":"sha512-SjJQ6MaELuzMRQFmooceD9s2z4tnsBVde4ooCz3gW61PckdHXCAxW99NpHxbnChQnfQiR+/d3QYs2Etu8IUSiA==","_resolved":"/tmp/3536ab174257c952c731fd70bde0b6c1/ethereum-waffle-provider-4.0.2-dev.382de5b.tgz","_from":"file:ethereum-waffle-provider-4.0.2-dev.382de5b.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-SjJQ6MaELuzMRQFmooceD9s2z4tnsBVde4ooCz3gW61PckdHXCAxW99NpHxbnChQnfQiR+/d3QYs2Etu8IUSiA==","shasum":"f1cac695632b7a3f088ede62f75dd7ef2715f164","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.2-dev.382de5b.tgz","fileCount":35,"unpackedSize":62297,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHzqfg3+Qjpd3W6y4EqSCXB71L3+VM6kBWqekwgyXD4BAiEAl0Q6tcQ0HifA3Y2+0zeUH+LpXf4wTsoKZcdQkDrEN/U="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi4pyNACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoLpw//cawoCmIZgj7XrcBG92KCSoGgCO2Z6yDJ/nFHT93sqja/aAyh\r\njrn/q5YpwYZpy6GG4nXz3+nrJ+ZylKxSXFWFsHmE860ByQOH7fVUKFOCt1G4\r\nPTybARzyyJuj+0dMunMzfpJ8y2foWQfWTdZMvRzW7YuvKzYfZnIYZqwyjrEG\r\nTxZfALsshQF3hXz37kvQKzuVyQIplyXqpFXtDU16JcyZw7sZ3QKIEV/FIeA9\r\nN2jrDqjh+qai8Y3Qj7ZnFnfne15+j1/lXidVHF7rPWWZxzrMJ9IwUZCXpyek\r\n+qzenKRtOrE1bQiuNDEqpM9DwAAQv1qum800senDhjYLl25JAjoQ4liI/hG2\r\nBNuv/Gzmy9Z3eIj8OTGk6p7tT/M8huqE498g3AiAIrDrHrHVn7wasvlhHmIu\r\nPYtRbJUslCMf8LQlPOEAfNxmq500MQxb3ZJtioKPBDeQ1AUlsN3/P9RqccbH\r\nawSGW3lxfuXjYtBkBYxtCeU9ElKRYJN6TNA0OlwTQ2RX8GTCPJJNYFppryUp\r\nH32RgXWMAcOhEZSQ4vVZdmJ0z8u617k96GNa+POkSEzVqjMJoMHsZodzeKKh\r\nzxXojH+qOR0HmwTgZC8XWoV4fmuMKwZJ9HZnBo7bfBeS11L3Au+EZZvWikIy\r\nWDknZn9ImXhZiBxisdjKmhCYNnDbGIjSSmI=\r\n=Yq9E\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.2-dev.382de5b_1659018381528_0.8299730474814422"},"_hasShrinkwrap":false},"4.0.2-dev.4e0598e":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.2-dev.4e0598e","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.1-dev.4e0598e","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.2-dev.4e0598e","_integrity":"sha512-asfrHbUFZOCrUsezo3NPTL6OoXUrbBE7gLyw3MLa5Z9wjODfvLk8/rZCshZYfgfIlwGle175l7Ek08xjvdNGWA==","_resolved":"/tmp/f02d86fab59ec98a5f7ab1c2b33a49f4/ethereum-waffle-provider-4.0.2-dev.4e0598e.tgz","_from":"file:ethereum-waffle-provider-4.0.2-dev.4e0598e.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-asfrHbUFZOCrUsezo3NPTL6OoXUrbBE7gLyw3MLa5Z9wjODfvLk8/rZCshZYfgfIlwGle175l7Ek08xjvdNGWA==","shasum":"1d328135cca8096cefcc99f378619d1b2d995087","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.2-dev.4e0598e.tgz","fileCount":35,"unpackedSize":62297,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIEkleNovv+RQ3Gia5VwLpys22YdS3X6B7+DofvA/IKxMAiEAtweNxQEzWc9zM39Jt3iA/8DwrTQsPZw0H4Y9FEYo2Pk="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi4qqzACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpSlQ/+J+vLpcaSuYfZSr4SBgs1809Hk28A/+YcJIgagWh6q6UcQQjI\r\n5lELT1XI2A4poOFSahBn/lILobMiCOBssVyUMSvWRgum8H3B2EkUNCHMQhAI\r\nlL8WfXidc5CjUwJ64ajq487I6uBLrGM+gIj83BZCJmG4nRnumJNdUz1DK+X4\r\nxf3rwtKYoTZuYs9oR38dLPzB4eXQiSzAvSJmV32xwMYPpMOCDwAwwy9W4UEX\r\nZSyPRqhNJS0H+6emEz+T3TLXzBIesV5vc54inOy0xAa28hC+XGOboeCi2Vub\r\namm1RBNyUSLeiQN6aW/7jMdlflRgOD6ZkoLfFgg15iIPt5/WZNiDWmhtOsln\r\nJtlTPjzi/wgll3PCNak49qvOWEaq66ORSPonSOCIw/5qKOhWiszFhNQNO46e\r\nmqjN6hS5JG/JWDtnBk22I8+0i2gCM7ap9F1r13jjDL4hjKHhEihuND00DdQH\r\nsY50mNvksIjE6/xTeLxwH13IzuGrL0+hTwNa6wLoQ2WoHzDtKhJMQB8AwsNq\r\nE4RYUTKNYkuFBLV2l8kmiQsUM+rBLfFEqUIUAx/cMQPdFU11RkghSJuVdrbV\r\nVP3yXG895FvGp7Kh3m//Nhm1uBzOpcu9+LxoFvi0YJ77ClF8g5pn0KYJyoTV\r\n7CIFCQsxNk5ioNUOS0ZtypemnhR4FetWDf8=\r\n=V7TH\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.2-dev.4e0598e_1659022003578_0.35006705053791576"},"_hasShrinkwrap":false},"4.0.2-dev.1fe07bb":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.2-dev.1fe07bb","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.1-dev.1fe07bb","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.2-dev.1fe07bb","_integrity":"sha512-MGfMsKZIxpdFvYrJHXGRR7HCPmzyHxhdLsckyzYJ7LF0VjQ/mbq8i0jZgJs8Os/nvn11Ps3UgmqIFLoRicjzMg==","_resolved":"/tmp/f4f148f2c2a2a1003aa5e9fff7dc4286/ethereum-waffle-provider-4.0.2-dev.1fe07bb.tgz","_from":"file:ethereum-waffle-provider-4.0.2-dev.1fe07bb.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-MGfMsKZIxpdFvYrJHXGRR7HCPmzyHxhdLsckyzYJ7LF0VjQ/mbq8i0jZgJs8Os/nvn11Ps3UgmqIFLoRicjzMg==","shasum":"5d24ab6fa9cbdf859a4d186812df92a9eed87b55","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.2-dev.1fe07bb.tgz","fileCount":35,"unpackedSize":62297,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDZ3zGTnwOiJDuiEuqIqJkQjAM2ycDkts5PP9DqhMIMkQIgfMgHPA4QOdrHPqd93JbLbCYdc6FmqrKpDb/1A8v/AUA="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi48ilACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrHCA/5AAJF42tKE6No4x4drjRdm1YdhQomffg8BKICRm3n/4M8p6BO\r\n0SGIBc0ePpEpryDZroBwhS6TKaC90XarbKi2DqdLuuSwWV1yD/tyeRsyXUt2\r\naXbEm40kMOO5Y6f9Z1jPDAEj/WDyZlwZocS9aTX8LAgbVND3d2ixgqfRtIcv\r\nZKZlmKuZ2ar38iwPRQCOn+iY1SlsZpW3KPf/FZtCsHS7Z83xdf6oL/jkoOcN\r\ndp8473c7bUnYw0rBV2kEZHnIwWCwiiiexr6d/NgXqjnH8v0NUg/Jy/7I6n8j\r\nDGAW/fpu1NyU8K+87HbRdGQVSZO/QziG7wS9a2xfEX+GGGsKEzVmcHhyDF9g\r\nDmiHjSxbYitFU4JE2hvnnieaErz0VCha0+Nnwn0BWRk++9WaBRtaGzAQcPLZ\r\n4bXIUwzbSFY7jsk/6lrvZZWqyEQ4prYrpAvxLX3KswDFaUKqmrJHijYbZZ20\r\nA00CgqdQyaw+4OYX/HliD1jAQD0sKvqQLACQGgovnDdEa+mrn7PTLDk3iioq\r\n4RKXDVDtEYlWYWscVDT9M/V2V84YyC5Q/4CTcdsBBuYVvNVuGODvvDl1VqtC\r\nOvc+gfcsaPvTSmHvHxM2d2gNyfEPJsyunmBlHG4I7+12N2S6PD0bTGvKRhF0\r\nmzc1GiuRcBUojW5yOCiHnCyp2cCLvfFmMLI=\r\n=sWQd\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.2-dev.1fe07bb_1659095205473_0.28459798211145126"},"_hasShrinkwrap":false},"4.0.3-dev.bd741a4":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.3-dev.bd741a4","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.1-dev.bd741a4","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.3-dev.bd741a4","_integrity":"sha512-uNoWCKOhelTxUKI19g5fazMv3XcjHiKlF3OJ0PBSFAUFQyJ+fUljZQhT365aG1mbQETjgwhH/vluNGBDKCtHNw==","_resolved":"/tmp/8496e3eb881d1979fae3357fff7084ff/ethereum-waffle-provider-4.0.3-dev.bd741a4.tgz","_from":"file:ethereum-waffle-provider-4.0.3-dev.bd741a4.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-uNoWCKOhelTxUKI19g5fazMv3XcjHiKlF3OJ0PBSFAUFQyJ+fUljZQhT365aG1mbQETjgwhH/vluNGBDKCtHNw==","shasum":"1f15fff233d479d176745408b57acc7ede462a5e","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.3-dev.bd741a4.tgz","fileCount":35,"unpackedSize":61997,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIE66gPGqwX0uSJTmzXHszOivgsRgfmhU2smxFpA4hxK5AiEAikXVG+GuIx1mBN6zGRtx+F9WCuGL3qlqAxQ+I9ZwTI0="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi4+aAACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqCpRAAo/ER9ObGBjVNAG5PvSFqXOy4SHFA6c+692D3rc+2/V0F4ng8\r\n54k4iYN4I5LPoWxXV/zXVh8OQnQdIkfjNf/SoCyHUmhqD/6/TNutulzW5+7S\r\nmkz12fwhOYRxozThTbLHzWgnP3a8/BxqJDLKAK/gxFxMtLfRzEPnL1GrF0Rh\r\nLIYKDcL1b4KpdWd3bY3awoJJtzeHPDbHkN/S70EtNNFPnzT1dJtHqpW+Md16\r\n6EamDbMKLZ06HMbw8Y1FqFPziQqDLf28Tno58VLpGeuq+luhBaqz60BXJ8P0\r\nxCjVElLwAUBWn0+zvP2dtNLUPtk7tKNIlppTM6n8btoijtfPxzHBfsn85Kc9\r\nqMD3bY+7/gA6/OQYFpq4gj78zCUoWS7rw0xwgEyk4AljMr9CjkUWuuzhl780\r\nOhOr5N91NTgsgElmhpoWsEDOD3vCfQKDfxIOBGWJPQdxLqulUBYcscJdCodT\r\nZ5ycGsJomcJdtTp6mdEVpKtWRSCa3G18JPVF+wjPnjyCSibwmdiO/sk+j8sj\r\nmNAO8xpbSC9QDcL+xx+DxsFYEQuYu3cSOjyd2mJ5I+2IQrReHkr7WnrlTjig\r\nxVGKVGelZvTLW7pFFwOUbShnAwBE+AvCcqGtEObLOORExaE/tvz3CiCBrkJz\r\n79NDoueBHJGmVrZ+OjPDSynZuj5YUYKk97M=\r\n=Zt8f\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.3-dev.bd741a4_1659102848730_0.06990017529500392"},"_hasShrinkwrap":false},"4.0.3-dev.3b7020d":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.3-dev.3b7020d","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.1-dev.3b7020d","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.3-dev.3b7020d","_integrity":"sha512-1E5Xwn7fds7fTHPmTqviCrkF2WUZv8MPcIRcKWI5XVFL5hGQom6oQM+Nq0nySXxFdMdhUIAbtKw+unhOPVIiig==","_resolved":"/tmp/2836762e52373c0dad68d241455870a6/ethereum-waffle-provider-4.0.3-dev.3b7020d.tgz","_from":"file:ethereum-waffle-provider-4.0.3-dev.3b7020d.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-1E5Xwn7fds7fTHPmTqviCrkF2WUZv8MPcIRcKWI5XVFL5hGQom6oQM+Nq0nySXxFdMdhUIAbtKw+unhOPVIiig==","shasum":"f78dc265431ef9db1f4e4fd591e3a03c930e29f0","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.3-dev.3b7020d.tgz","fileCount":35,"unpackedSize":61997,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICokCVVVTw+1m/MVLIw9NQN09MEwZbQ+VCwHpeEYwtndAiEAjfi6ZBZ3zact+cXSVQEX1w/j26yDJtWet3eRuqqMWnY="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi546HACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmobWxAAiaBZmK4jtFOGh5RGRV0QjhrNbcdPkn8k//vufEXqP54/dfxH\r\njUJ0Ei63QVIvW+FXWMos+VCs95x+ywq/Q2OolFGcaBU1pYc+ln7reF3a3Y/p\r\ngR2NkVAZSnSi2BntxyjPuPXAQq+cx5SKm7vFSV/fNB3ijDgZ7hOmT65wVwMO\r\nWJ8Hvd7oEUwQDy0te7Cah39wTs/j+sIIkb8EGwSWXeVmg92D92uvhUCOx4mp\r\nwzGc07gISR74vhFhiTYj1gk1zKl/YzOtd/oln+v7m45YZUMmDB1AUOLFUqxU\r\nCxWFIGXr4yYShDYZFH+VDt2IJQfHURZ6hsO+HO0K/hZncEALxvGbIBU1My1I\r\nO1hYQhqTh2xipdVJu1GA9U6jXPqqXJmGbbgqCJVbHVHEEJtjxoXIDJLwlWou\r\nUCU8zMlaS9K/kdUFWeFXUpyr1bFJQCeQzX4/yDvrMoEM619P2gUvCuDv0SDT\r\nJMgGrYu9pojten6DAFoIt/Nvh/F6KDyK+6iJYv6Ly6N48HmxWLaXjiImKW1r\r\nREr+i4LDu9ZHTKbFD42bTx1xFUCAQDxP9kWQDpOI4yMGJtnh3ECk/1QJmwYK\r\nii5wUbEkQLX1Zg017HfKiRb+GQV6kD+GWB5XEb9iYMBlQxy8MK4EZJNq5D4/\r\nkFwvIwDX/tLpBCwSYfnxssAEuuNQ+WtfAKE=\r\n=xP+7\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.3-dev.3b7020d_1659342471326_0.2330643439093556"},"_hasShrinkwrap":false},"4.0.3-dev.0c13fb9":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.3-dev.0c13fb9","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.1-dev.0c13fb9","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.3-dev.0c13fb9","_integrity":"sha512-fz81zfWzrLxvnRcQFt7EG2C6z/qk4SqX7AApkx28s34fEh5JlNn6AHL8iffwejMHwMmw3AkuttWNHtbSYPrI5Q==","_resolved":"/tmp/a5768610e2f230c77abc0319cbfc3e49/ethereum-waffle-provider-4.0.3-dev.0c13fb9.tgz","_from":"file:ethereum-waffle-provider-4.0.3-dev.0c13fb9.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-fz81zfWzrLxvnRcQFt7EG2C6z/qk4SqX7AApkx28s34fEh5JlNn6AHL8iffwejMHwMmw3AkuttWNHtbSYPrI5Q==","shasum":"732a73046e4817cc7e19f37ab7274452076b0392","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.3-dev.0c13fb9.tgz","fileCount":35,"unpackedSize":61997,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGeqj9rmPSJTlYNk0q07e9DpxbiCDePwxiqSPIIFbY9HAiAwSnyxzqOb6e0uOTQ683HTM1zTLmPCRf/4r5aw2G9TAg=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi55KkACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqQ8g//ZP0JvQEG/BqQ+Ue8kHBbZHN7xTHw0AaPGvy9AZZEdAWW8CSm\r\n/948fZMwlg2olriJqTNv6gC9OrxZdHYT1rx6Ujiv2BAVeCsHE1AQj0ZNiLsR\r\n+M7InQXC09NWgGyuIte5qdmBSK9+Sf/yRWgi9OSUTUiMwYTQU6RH/YCK/H+i\r\n0xhyPT8JBviJRFEPf0Y4WR33Z1tHquccngi1gNa2CObV8jfak13tFBFk5oyM\r\n7s78wdt4SSzEkdSEIpjDub+C78n1tYJq81Y7AQ9jesPFMi6aEb4IRIa85aAg\r\nTvVW+KhWfZJR7uYcejpyTEKlKtetWTnXcbD5sAKYZ6m9ERYpOkVN8cUGG50v\r\n2ZKHjhPUjNPcKVgf+YKa17FM6NaXQ7bhtkVU+8Ozbb0S7P7ZBPUuoDx5puq2\r\nhi6T2qWInWhdQ5OYzP0KFiuXYlTr99Rrn0TJCKKzAWRsRt7pGotiAnS8SYFE\r\nLM9GcElAXP5z2ZRP131wtcPjZyigyrz0aKZZO0m/a71r2/1nFLVl1Ux0dKDD\r\nblcT7lFScUeF0lh9MPypn82d5pW3TNiSy0Y6rLQjuL33rw6qwauKRyIarxuO\r\ncK1tO2/C5C4wTKhop1uio5flkjroB6Xo+zoom/nQwOOPQKUSKt2EKHBP/AmC\r\nPS6Vww8khxTbgxZyLyKKLaNu+Cp7NsEiv6A=\r\n=5rJf\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.3-dev.0c13fb9_1659343524325_0.8457527493960237"},"_hasShrinkwrap":false},"4.0.3-dev.0f5af9a":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.3-dev.0f5af9a","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.1-dev.0f5af9a","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.3-dev.0f5af9a","_integrity":"sha512-3ww2dDSPiSxYWOeb1E4mCAd55KU5nIjyZGZ8HFGWgSwgUauHgigtGPZoDm87KxOK6pNHyHdCkBe4G4TqCDfNdQ==","_resolved":"/tmp/94cf2b98a8bc8c6440ae63e5838f520c/ethereum-waffle-provider-4.0.3-dev.0f5af9a.tgz","_from":"file:ethereum-waffle-provider-4.0.3-dev.0f5af9a.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-3ww2dDSPiSxYWOeb1E4mCAd55KU5nIjyZGZ8HFGWgSwgUauHgigtGPZoDm87KxOK6pNHyHdCkBe4G4TqCDfNdQ==","shasum":"5b816444e12f647c3d4fb8323aaaaa70658ca949","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.3-dev.0f5af9a.tgz","fileCount":35,"unpackedSize":61997,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICMkzbc29DQxkbz3QcH6m2rfFMGelx7JLgobIMi6e8iDAiBBHhXktoN/uiJAsNhqhLO7MXaP9pFdoJki51p+czwsVQ=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi55rEACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmppBw/+O9Cvwai19IGtnUZrsjaHOD1HonxwDACImnFV8Ezg0v9O57HD\r\n3/Zrdg1EuLPc8WyKcY/MMaZZ1QcXhqId3CIsPiI2013XNXP2ubXcR/zQizwY\r\nzzkyVsM41Fj3s+iaaQXHNZdNLP2RcdsKnv16l5hsZtossqmbui7svy4Q21hR\r\nOjRqOZKjab3OIE5jpdJrB5ELBfD0+Ztaqk4YlIH0ZtcQR1aZ5fT+3gUsfwEf\r\nZWGybzJpnQh0TcewvF/xCfsqUOzRKEjGlaWWrmDaPm6JaUfIhTNDW9qT/xkQ\r\nvEpi4K8m3ALHVW52+KNHpPiZ1g9HpIAfk2kPNOYuEqckkGPfD0tJvmBfvsTO\r\nB2xubq2dTR0TmwMaWElZVc1zH0jw5k6gyEXQxYRvrZQsPK6bmxx+qW35rGJs\r\n27P63DbLYG9V2o8mkri6xeR+rttbLxgvVJXCqWURK5qpG6Uc9xeEXqkEtv3J\r\nB9ivcui+iTe+MjszSexPV89a4oTLZIJBTuE1Z5gcCPeQ6DzNSH4HcpDydSH1\r\nWMS8GT0nuTk/4sSt+ugVSxNhpoKj6eUNmyGbg1ONC95o4ndrnvZ+7dEGcY27\r\nIOHZO/FBYpxKjVK18zeZfxkw8HdnpujWUyCp1Pudg6DaQMF+g7w2e91/Zlqa\r\na0snrc4YMpnbDszfT/jblEMoamnRelb10tg=\r\n=B+WE\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.3-dev.0f5af9a_1659345604528_0.5800816045917894"},"_hasShrinkwrap":false},"4.0.3-dev.d1f8ca7":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.3-dev.d1f8ca7","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.1-dev.d1f8ca7","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.3-dev.d1f8ca7","_integrity":"sha512-oNASU7YN4RSxwG9X45mOVCiF3P8daF0q8OAwmxC7Ww8RPnt4HJn+coaAkUBy75cXNvlJJKZOVfmo5FkCt6FC8w==","_resolved":"/tmp/8b027745b7cec45e654f5708f20ebdcc/ethereum-waffle-provider-4.0.3-dev.d1f8ca7.tgz","_from":"file:ethereum-waffle-provider-4.0.3-dev.d1f8ca7.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-oNASU7YN4RSxwG9X45mOVCiF3P8daF0q8OAwmxC7Ww8RPnt4HJn+coaAkUBy75cXNvlJJKZOVfmo5FkCt6FC8w==","shasum":"21a662500d534efecd8556466c460bab935d6870","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.3-dev.d1f8ca7.tgz","fileCount":35,"unpackedSize":61997,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD3gHB9NYMMaBGLvkI62z5JS/zM/AEa84MDwWQh2qL18wIgQZ1snnraeKekwTBviinRh+ksAN3PkJM4k7ic36gTNKE="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi59tBACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo9Bg//WZWYIayWUKdcuM9Phd8MDDnQ7izg8u10MWFXjf1pB8QzCreP\r\nM7g5OrCl4vmsJX9mA0gpHcNAWwTl0vqCh2yXjFS115DY4seIULeEoA0M/uZk\r\nZ0nNsLpGGH2ct3XStUK5cXi2c+iUpu/UctGzQJDNrfT6gHyutSF2fLM+nL+w\r\nKG+iiYiX5ARUpwoSUTP6fgRlNc/lCoqrpel4rybTGFM8ribOPmhGc7nF5tCj\r\naDBhz73p5YBlAjmaDy/0BYPgTBmASA/1urnpUD9XD0+T1Xn/w1fN5ISUVSdd\r\nho8qOBygOkdE5o2GmkEkK2cljfE0x8fFPbumtew3ttCpUVafEbURNTivWEmR\r\nI9+G9Tq/3E82/eD/Tf4qiw2pxjxtFOkb/JXSVO+oLyELm4rVFMgQhw99OXzu\r\nywFSUhqDNNcwsEk+MeW3zQi/neEvMKgYtJYY2fr5XLSa/HNsT1/nL4O1hpL+\r\nK36QBsbBmsCMFlXPfImr/L+rDiz9YDW3R1VMiXse2r4xXc1f1Y9KPovntKTF\r\nSlCeF9Ugt9BzuqaV8k0PH3GQZhWt3AWkCDbEQc+1M63AfQnPO/bMX7OuXrHV\r\nTcu1BgI2FOJDiz3OWXfNVT9KkvXyLDQdIyjoGYuoSyriYVdj202wqR+rBQiE\r\nKrKsSAAH49F69u+35Xjs5Sd9Ig08F4JD1c4=\r\n=6v1O\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.3-dev.d1f8ca7_1659362112978_0.09077805064212052"},"_hasShrinkwrap":false},"4.0.3":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.3","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.1","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.3","_integrity":"sha512-GCBiOXpT3GO2br2VQCQ2hzhnEv22Jb0muYzZh3EqQQKIFb+pxm5pLKkzwfDSSuVFNv0zYEullcwwvtCGuXctpw==","_resolved":"/tmp/8994518dead044c7a6796e733fd5fa74/ethereum-waffle-provider-4.0.3.tgz","_from":"file:ethereum-waffle-provider-4.0.3.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-GCBiOXpT3GO2br2VQCQ2hzhnEv22Jb0muYzZh3EqQQKIFb+pxm5pLKkzwfDSSuVFNv0zYEullcwwvtCGuXctpw==","shasum":"31bfdd586a9bfbb375e8e959412cb29f80bb818b","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.3.tgz","fileCount":35,"unpackedSize":61975,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCr+dJCRUOec0NO3+QMERRGxW3o3XD8TwSPLEBDGWYqjwIhAKdcTbqeG5swuj+wFov5C080PzW+o2Vp8BAB0HqW2JOU"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi6N9dACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoE5A//cj9OG0QNeBL445OMh46wZBauSom3FuoqI/gD7ZA5NluJRhNb\r\n9kbt7iRXG5n7wVP69JnBW0j1gkplyZRT6Fv8Gy2wFC5/uhds/5FGV6G8RVUd\r\nhSK/UgUCZGKqp4KD/ud99RWUHO/iReG9ptoXDCkysvK5On1HVb5Yr1e+GOXZ\r\n/BYqXmNNqiEXA4+dDrYF85iyRFh8Rb/xk7XRDnLwyORI6GLZeig3L42oVIkZ\r\nK5k/TAf4ZmnRvldk89xZzZJ+PKEnX+MUERn8wNqK1vfpH5V0VNJi9xSuoIlz\r\niTT8teOxgV+aiM4F/Eo74K+IAcLlPK/eosdVUbwd6wjxOESp01pt7UESRqeY\r\ncMt/WM1UJqrIfAMtTD1BoBwSQRCLJIemaFypWR+g6UKu9kg5Ly5QaGJY1huM\r\nPBrA3C7oOh2TI/WnYT9XGKjfxb1Ny3USccKEpGlMvFcO1+ywdcHz0IMfmQtZ\r\nguQei6TYrKUKAIGGgWbxj0rCpxj6GVDnaSpvDtqWQrcXrHF6B/w/AKGCGAa/\r\ng4YmQa3Y+rT1vU3iYmva8SwWQ2j0pwFCZpHjhfvII8ckmzfe3HxO2z3LV51j\r\nsVEZtszqRrE/2qfFOxALpg6Yxa8RIG5Adl/sIv7/2oNKtu8B9vvOyXcY2qI1\r\nII+1lcrj2/gYkjZWFWUhQS8AJEkD2lUXujo=\r\n=iMPx\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.3_1659428701327_0.995869358056773"},"_hasShrinkwrap":false},"4.0.3-dev.cae5bac":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.3-dev.cae5bac","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.1-dev.cae5bac","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.3-dev.cae5bac","_integrity":"sha512-2HhLDCWXL2PGDEQJeAda9xpZcgiIcA9CnUH4NaUVGqp+N+oTTm6vH5BoYZfRTSg1RABg9tlwW2aiJ0cyPIb4Ww==","_resolved":"/tmp/e23320b125526c7cc43217097914b80d/ethereum-waffle-provider-4.0.3-dev.cae5bac.tgz","_from":"file:ethereum-waffle-provider-4.0.3-dev.cae5bac.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-2HhLDCWXL2PGDEQJeAda9xpZcgiIcA9CnUH4NaUVGqp+N+oTTm6vH5BoYZfRTSg1RABg9tlwW2aiJ0cyPIb4Ww==","shasum":"b57932e975cec91cf9d8099e2227af684ee2fca8","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.3-dev.cae5bac.tgz","fileCount":35,"unpackedSize":61997,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGOS27s4grFJHFYQfXqMi2+RIcvsH4ZI0jJPkvZoKc39AiEAtwyRBAirUYrItsu5fvu+YS+1EPAC08qM7jH5r6kwuC4="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi6OAXACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpCXQ/5AY5vA9xXKr10/FhX0xyZCdpIs5/sdq/VVNSChoLKIak4afF3\r\ni3Wg8rnGSvfvRAVl3Ue9PnoTTMhOGFtBjKjn8MNRlksfQXjw7g4OUvoPWQ3P\r\ntMquJYbi9L2OtBkSr44wLmTFeB8nSzNgYV2p/2Vquf2IMdLHpzEsZzSQxjbM\r\nhX6zQyHOtoUZIkiO34IvOL11wEviS27gZDlTa8NBBTlIgazQ5jp9/R1C13jH\r\n67inI1YRAuCuILk6xxVElz2kV1zCjyV9REkUoeQ1UvYEWqtswMz7BwtOfG7O\r\nA4KknaZimnW9aGiZm9veINS0zmcCDBi9vNsW/tyKl9Iju9OJMOZzcQmLfOrb\r\nOULlRR1+uAoVExtd2Mkd/MXwqU8s0+Y661rb+uEENS8Rh1iwDciiOBkXahKs\r\n6dFP826nZz7dicD9RKk6qP+B10zeVAaV3jF7yjOM0SguUQtJrLP8e4eQO1wN\r\nHm3H0hiDYT0GPeCasV9fy2J6liojklj25P7cX/V0dkhyQ5tyyeB9KLFilX6Y\r\nH7TYUKl7vo6d2r4QTT/horN3R5UVEqH3Ap84odqPmGqo+n7pKcFRTpqJT1ct\r\nI3oJzZCVkUx5rrOE1YNShgqxTk1hs/lFB0bjPVwEz1U/5kFIikAf2W00iD+p\r\navzjIy46W13xDniG4r4DtZvn9tOMhYyt4ro=\r\n=ggEA\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.3-dev.cae5bac_1659428887370_0.8320376650407173"},"_hasShrinkwrap":false},"4.0.3-dev.41bc646":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.3-dev.41bc646","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.1-dev.41bc646","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.3-dev.41bc646","_integrity":"sha512-TOO/2m4yqSZt9OXknZ+1CksIjNkCedOhu44PQ43p8a8Zx6DQ89XVGNC4nVD2s3TOWFYELR6oQ+ZULkDrLnKCAA==","_resolved":"/tmp/da7f71decbce91c86d5f69929fce20df/ethereum-waffle-provider-4.0.3-dev.41bc646.tgz","_from":"file:ethereum-waffle-provider-4.0.3-dev.41bc646.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-TOO/2m4yqSZt9OXknZ+1CksIjNkCedOhu44PQ43p8a8Zx6DQ89XVGNC4nVD2s3TOWFYELR6oQ+ZULkDrLnKCAA==","shasum":"9028034eb41b6a362dd5b01acda911362b89ae67","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.3-dev.41bc646.tgz","fileCount":35,"unpackedSize":61997,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBLu+FzVpUnrjCccKHHgFrbquxbvZAYjuJ+q91Z/SjcdAiEAsvQPQvzrfRV6Ch4AkOwBEm/T2+lL4omdBZUQPxuIU0A="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi6kMqACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpkIw/9EKgl6kZb5pjbR0/KQF7Zi3im0hcmqKfZv2FaFL9sDzEOlNok\r\nHc3oCryyIK9YvE28s2JSwk9XGN7vElPd70iIWbWFkTyTz7rkI5MKrc5cqcVa\r\nffHVj96uJg5dpvm026qEYTbZBUP/dlMYF5devwPB2nNDW6Dajf4N4QTQoMSA\r\nQp5xT4WTvIKWWk1y9IHeGKIDisLVMG40+MY1C/Y7wG9g3ojX/1Lay3L6VwiQ\r\nZ0r1QydGmFJe7rxr4ygbV1+3E0kNCxe7XYR37OjrmkrQ+SdFGOwMDHJfCr18\r\nTxLvvVFxgTAHRlfupmIXv6W/0nTr6BlnLiAEx0pZu7SmvBE1VtHX7hK5iEUU\r\nHmHDw3nFcwgb8Czo0WiR85jXb1SKFV9ge/E0MyR/jRlSMd6sQUJU0l0v/ACK\r\ngHDfFrrivybGgEmcGfsrs7z1gLZeKxq9U2y1t/SADjyUz4SFXV6E2d0/tYKk\r\nKtMpX1Wu3KRaHEHk9EB48txqObSJ5JjeGALIiuxg6wiFdZBCvnfMLDZ/3LAo\r\nO/Gy24KB4X2ScZcWMyvpaO8MyCtN0ezp0BbMBIkgwusei7NJvEh6BqHz3IiC\r\nThinQFKY2UHcA1voEiTltqBYwry4dvdM3gSEH/hjYhA2mzNUk/8eJ2P4A0Hx\r\nbjfrQN7sDuJQi5EE/SqxqJ627s9JIFxf/s4=\r\n=eQdX\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.3-dev.41bc646_1659519786328_0.8559910974740625"},"_hasShrinkwrap":false},"4.0.3-dev.18b219e":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.3-dev.18b219e","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.1-dev.18b219e","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.3-dev.18b219e","_integrity":"sha512-34XZmzuaRW0RQXNBSo7Wads8C/w+JAHT1uhN3DlfzrFM5JQYy46FyLr2EDWUZjxbiMd/0g4GpxPnOmifbZTCRQ==","_resolved":"/tmp/785ca875cc3df568196ea15723ffe0fb/ethereum-waffle-provider-4.0.3-dev.18b219e.tgz","_from":"file:ethereum-waffle-provider-4.0.3-dev.18b219e.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-34XZmzuaRW0RQXNBSo7Wads8C/w+JAHT1uhN3DlfzrFM5JQYy46FyLr2EDWUZjxbiMd/0g4GpxPnOmifbZTCRQ==","shasum":"fd6b0a204207a13b9b899eea1552912b3980dfe9","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.3-dev.18b219e.tgz","fileCount":35,"unpackedSize":61997,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIB2BK/Awum3kUJkkAIlIj8DmY1LX6z8xY2fYCsF0bIcIAiEAyRZ0hfgG46AK9ZkoKRxyhU0j0dbMA/GD8Y/WJaA55lU="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi6kRwACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoknA/6Aqxq7J8z+DTY4p8t6+BxMxcim4flNACRGVb1bOQQ2tcvGWWV\r\nXrPkKrGu/sXUKyBjwUmedSmbkLsG1YLvfJ0m6UxNv+sZUkTrZF6HEAr+jLL+\r\nh8Y/GzD9fITaODEKJAcVzZaBmSqgZf7tnKC3ybPdwzBW9cLik0HhYXorYX9B\r\nv2xObqWc465s3eiBbiQmQaBVJxIOJjADX8rTTyP8sITBphT3+Ik45FOpZhOI\r\nHuW5rX7+SCHOfhEOLr3j4RHpD8f2iV9cdFV+4wafNVxI69lq6kpcIHcpvsXV\r\nzqRGK3E8sgxZoNYvzAdtjbFieS/zzhdpc9X6BDr542p24Gj/84fYQ1rdlBtu\r\n2BW7DuMEUeH47ek+gt/vcLGjMrFPAKp0uh3SVRVUG4TwxxMGvD9cFspFpg/o\r\nn0o1NncQhhr2FItpR3597UonG94ArqZ8/l+cCo2/R5O+ohhHTDrd0GfNQmVJ\r\nXJsBSplZdnmzKZUhiDscYN1BFrXYbq4eEdnL0F5JtlUGPWXtnxPendGbqE1m\r\nUeDHo12PaZyhdSIsNtZnTctaQKoLJZZy2sy3j5H18batp3uKgndl/do1knVD\r\nJHEWq7RaZ3r3XLuRuc2cR1VLaHl8yRrT3Gstpgz8aHl0Z5NtWNK00Rxcrw0e\r\nHzgBcOsS122SGRj4CLmWCwPwJgumI2YnIyY=\r\n=HY43\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.3-dev.18b219e_1659520112811_0.11845349385781012"},"_hasShrinkwrap":false},"4.0.3-dev.e7e18f6":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.3-dev.e7e18f6","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.1-dev.e7e18f6","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.0.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.3-dev.e7e18f6","_integrity":"sha512-xZlSIF1rzkO6P5V4ElBO6vJ1qFJwk+uocAqJCRhsIH0gaNqYkS0xRyRHe81xt1B+wx6otd2kTQwfXe0N8I84eA==","_resolved":"/tmp/4e08d36c307fc3ce7023779740d59e82/ethereum-waffle-provider-4.0.3-dev.e7e18f6.tgz","_from":"file:ethereum-waffle-provider-4.0.3-dev.e7e18f6.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-xZlSIF1rzkO6P5V4ElBO6vJ1qFJwk+uocAqJCRhsIH0gaNqYkS0xRyRHe81xt1B+wx6otd2kTQwfXe0N8I84eA==","shasum":"16be3d0f3068b36fc2e93b3132e95fb983c1e0df","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.3-dev.e7e18f6.tgz","fileCount":35,"unpackedSize":61997,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFtzNgqooD8GkfQMIl3qgrJKOsoI5/qr2/yDcOpZlfUNAiAXN7pJ7+o0zXYfnlag/KhigVqctu9UU5p16lIc+CpD/w=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi6kfdACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpMGw//Ymvih8Z1FpMHN4CYIyheSbZ7gL6ThF6S1JeXyv/Ut0cipKUr\r\nypDxbVoNoP5AqeJjYCpWOTVUT/cbr9s8dBcejwuX9xyIdLqJKwVmtThFg8f8\r\nSLd0Hs0Z1cwuE4m6rPiQzHdjOYssxCpm4nyoTboFGe72WjzRgv1+pbzK9SsE\r\nPSKGlkNCYTUbA0U8AlIFZpENAdyPfusYq1v2QRejfs1Lb2K7yWBEZrjO1WuI\r\njW4qSqky37/nbdSkXFICEZsF4Usv0tIywjpbhZ55vfY2pw8i/lKgeY0gSFRk\r\nkkXsYyz6zXTUGoV17Qj3Dw0TCKTCBsu0bVYQJs/s8Rr4PjGUGusVw78igfar\r\nWZB7bMRbMET/SPrQHmLZslMW+pYKNC9pUULBBIT2ZuRL2X1dr5ncdibXw7Eq\r\njtOLBNwwp3G3NMDpccCI7E2U2juxIppJXcWWY5LuagE3if5ti81+2X2FTplM\r\nkap1NNwbmMmTkTYGslXPYaDMZhPZ7VVsNRQZcOVZIvzz7QGbfD+JjQswCS0w\r\nUrssvoOOC9DkxEmbLqgcCr34m4IbiL1sQjln0dshwEA8IC1/+o4OBmxKja9U\r\nHPih646DKMBSySnRQzggVN03+sJ+8My3FGYP+OmtMHJ9qJA6szAi/jl0D6Ba\r\n0ElaaxEOXOAXrNm8D913zkADnvvoW6QPHEc=\r\n=o8+w\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.3-dev.e7e18f6_1659520989112_0.5665222617709718"},"_hasShrinkwrap":false},"4.0.4-dev.8eb1578":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.4-dev.8eb1578","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.2-dev.8eb1578","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.4.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.4-dev.8eb1578","_integrity":"sha512-mjOSfSQnd1otIt5QXvfPxgvLVWtmkW6jhhaboHG0l9gSSzub/rkfckXEQMHxGzBn5u1cftxyxhErTM5HfJYFMA==","_resolved":"/tmp/da23fa2706e67cf48ab53ab9f6120809/ethereum-waffle-provider-4.0.4-dev.8eb1578.tgz","_from":"file:ethereum-waffle-provider-4.0.4-dev.8eb1578.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-mjOSfSQnd1otIt5QXvfPxgvLVWtmkW6jhhaboHG0l9gSSzub/rkfckXEQMHxGzBn5u1cftxyxhErTM5HfJYFMA==","shasum":"597d46db65262d2c2a0fb8dc023e0936fc0e0d6a","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.4-dev.8eb1578.tgz","fileCount":35,"unpackedSize":61997,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD6vZI+ZtEPwiWpEOC2Y9jDRnceT0eNyAQFEOFCu8x7RQIgaCihAM4gZwTzxLpcC28aD76sKkIVKevvcTt4b39d+qo="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi7Pa8ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp/HBAAo9nw3N+y/P4iBXNFt7TJt8fxNxWptewVJbioH0kcpvoWx219\r\nTcA0JczvQFhrR6ffYSpkGDA0R6VY7UIpdKaAjI9jl4EvZWZolhEOgHMjAzmu\r\nO/ZTngAH+mK1S6Ox4sdzRaiLbsVM4SEdEUfFO44GNBdU8AhA6xIJkH6eXCbb\r\nbW8oeSpFPzKr1Uh2B683ZdMvRwkfF7rgXNpaD3IrZQlq8H693g0lZ7OWcz1t\r\nWezaPFBk6WD6kJpRsl9o6x0JggN4UrQXwti8kWCjWGR/uOY8mOdmkhvn7/3L\r\n+ueJPR0NsZGIAU2+DYcWDJJaax1DAxlSKqil9nPvXDFT8PMUqw8D0+UGy6ME\r\n8cSJhX2CF3s35SH0nrhgE1TvLW7VrgLTDxFJFCpIzdS2frtr5ViHdMs0NxR4\r\nCh8/VHuqZHp7nU3AKx83fwOrGgR5sFRYZAnZdvxGBtudqpmFDYJ2Lri9rdpE\r\nhj2QXZceoHeJTAh/sF/XfbMnSbqquk2hKAbDeYr90bUqVjJ+AWgcfmI79qng\r\n7zgfpK5Ut6NTz9mnBwq4EYp41ze9MIxzSWbLoexT/278fdNsBBsTj1k7wLmy\r\ncloTQIWdF11/YMLtvIdeaRDKsGKfOqrInWtwewWsJG2vxOA+06ldDJcl2r7W\r\nEc3SAKqfb6zvhdto0AwXQ6vNuYa8CKLYZQk=\r\n=ww7u\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.4-dev.8eb1578_1659696827964_0.8457256262226018"},"_hasShrinkwrap":false},"4.0.4-dev.e22c4e6":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.4-dev.e22c4e6","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.2-dev.e22c4e6","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.4.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.4-dev.e22c4e6","_integrity":"sha512-m12uiOL0RdTh4KVuuZNnR1Khbn/mLaK8za9kNMxJUvNjLph/mWw0Jt6H0SMnF7cIX7ucdjKMUlCxNwR1xXnpAQ==","_resolved":"/tmp/08094362803f30764f29d6a0034d580c/ethereum-waffle-provider-4.0.4-dev.e22c4e6.tgz","_from":"file:ethereum-waffle-provider-4.0.4-dev.e22c4e6.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-m12uiOL0RdTh4KVuuZNnR1Khbn/mLaK8za9kNMxJUvNjLph/mWw0Jt6H0SMnF7cIX7ucdjKMUlCxNwR1xXnpAQ==","shasum":"0d7228a72e2a8a68a823de4f244eac3e43ca6f6a","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.4-dev.e22c4e6.tgz","fileCount":35,"unpackedSize":62778,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCWVvRkXlnfyV9pgKQ7JepabwQgZIOfowk6wxSZtNdEuAIhAKM2IzwDYUV9yNgRHnMqkeS8+fOnNOi49uckhin/KkC6"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi7RXhACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpixQ/9HWWQSBUzR2H6SOP9q6dQ9Bhj+lETSC0ymQAV+/1ZQdG/iLv0\r\nO7x0LLXgCGdrknBuR1Rlk+vXaj+dIJFAsImUIIq4KGATLM+L8yOHXwVLNYPO\r\n1JdJML6sFYoqHFrPEUVDgZpLTxSqVXihW0tO+pIJPt/6Ffm4+TZj/QmXtIbG\r\nu1Hl2T1QYUNv+XqyzhXDQy67WWXCp83bfdE0+wnKRFWq96Vkyi6KYoseQ84s\r\nDCsjxvwh01ZgKQw0lgjY6e5orw7FZtV+rTZKVLizpmzKhjJigjfArD86yD2F\r\nuQdxc2FnwaEt/D/ti8pAh6x9r64q+sOK0Nth/1fWW9SB8FAeWvZk1HQa1iN8\r\nV9Ef5izFcHF2uE471K6zdrNbDXdlaKta+sFnXK9duFECY6huvqxu5NZUD6of\r\noVTqokBrlg++N0hA+4PRzm/4FhYejvwha1hYMfUmJDqEehiRaTtp9rdZwQiw\r\nzpYQqiYe3hMS6L3JgdQE+WnNi/ndSk+YCO1/BMoOMBSH0j3J0zQi8V7tWU1j\r\nxxZUWItdK1NyCpGgRNm7xFePXMesdqMguhmJPKEeAKVIUaK/q52T71bVm9er\r\nRXwEair6T9irb0u3E1vR/tlTZBY8J+DV83ERnsm600xQ5dcQ96V5MQ/b5sxn\r\nAoS/pwobhQsUZQcotLit0eyhEsVofMIOx0M=\r\n=sMNk\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.4-dev.e22c4e6_1659704801494_0.7684539884156427"},"_hasShrinkwrap":false},"4.0.4-dev.89498ae":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.4-dev.89498ae","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.2-dev.89498ae","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.4.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.4-dev.89498ae","_integrity":"sha512-atyjjjnhqidlKr8QD3LgO+VYjgbXjZ1yCuvZ2yDCQE7/cCwDWYJZnzV3fNxIxZBYF1t1dw43R23C/MFyGSz/+g==","_resolved":"/tmp/029bd0d7f056120f4518ec140e02b5eb/ethereum-waffle-provider-4.0.4-dev.89498ae.tgz","_from":"file:ethereum-waffle-provider-4.0.4-dev.89498ae.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-atyjjjnhqidlKr8QD3LgO+VYjgbXjZ1yCuvZ2yDCQE7/cCwDWYJZnzV3fNxIxZBYF1t1dw43R23C/MFyGSz/+g==","shasum":"73431eca45b9af13dfd1425bfd1e0eeac2f92e4b","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.4-dev.89498ae.tgz","fileCount":35,"unpackedSize":62778,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCdM6+4bkzeWXvMcD3gigKttiN0dvb2aQeH7hj6VO7PWwIhAKpJ0xLkklZBpP2KUG6NK+utI8QwnONH34XdXV+3LW/o"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi84aVACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmrrjw/9EN2jG+tSNNRpqL6IMqlRX0qyvkiXPFc7z6A1QPY5s14PB+Et\r\ntIfYijvqTvfonxAa7Te7t2jNh5RLxdolBRMhbCwTOmpYI3joTOa3WWvRZr2f\r\nEmfXdn+RyhmoKeR7lE8hAB6E3JA0NsGpUZiXiaPXLMwjSt9nm3hBBkOcMT25\r\n5+YyGT9yjA0ebAI7+MiY8GO0ErXlIlcccOBOwtRcokyLqCCznLvelzR3Xraf\r\nqO0CW0LvrovIRXAHsQ+GCS0WKY1/WfSAkgHssrn67iPk6w0QgpPiV+ppamB8\r\ne3Mur/ioBHmRrXnqddj09IfnW42OljB6lQ0BVOKECKM5jEpQNki84+XtPv5N\r\nXzugGOet7UGt0l4STmv9DDsIgCEmgm+p2BgXyIMhY8QdCHy/LTCA1hjA5NdE\r\ncmBl1e4CEmkBzxkHOn5ROZdbeEQISyHaPZ7EFEFrURCTDc9xwF3GqNrc8aIc\r\nE0C/2faShk4sK7xZVxDI1duQAAUEs0/zetTke8cNlyCttrfDcvTlhSWisypu\r\nBnJK8apklcykEXSV0NX4ci8S9NStubBNLwjdxGS8g7dN+JOBrvPwmKWJytpA\r\nrElH8A0KRbGJFvdAqrgW1ZkOs9yf5lNp7kvDluOIh25BJJAF79EtUOl/6Yxe\r\n1HZeerB8VRX83ABQnsOpqh1YbeewGEfSSJI=\r\n=WFhg\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.4-dev.89498ae_1660126868963_0.7666922010725521"},"_hasShrinkwrap":false},"4.0.4-dev.71e4b73":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.4-dev.71e4b73","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.2-dev.71e4b73","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.4.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.4-dev.71e4b73","_integrity":"sha512-/0Ltooff8rp8AUpCF6aszv665WTGeJK+WaRITwUD89vODOzJ5LM/84MCtJgyPHbXx+AB5xuYtaPp1K88/d/HLw==","_resolved":"/tmp/bae70bba01904ce9440eca2992d39294/ethereum-waffle-provider-4.0.4-dev.71e4b73.tgz","_from":"file:ethereum-waffle-provider-4.0.4-dev.71e4b73.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-/0Ltooff8rp8AUpCF6aszv665WTGeJK+WaRITwUD89vODOzJ5LM/84MCtJgyPHbXx+AB5xuYtaPp1K88/d/HLw==","shasum":"1c0e200ca4f31ca4e754f9037a7dc4f31d734487","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.4-dev.71e4b73.tgz","fileCount":35,"unpackedSize":62778,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIF7n3dHgF7wfLN97MdKCF8rpnhUAFM+UDGv92Yd+uDXvAiEAwlIRe3xlzUWJBtj5zdbYWzmxR/IJ+bVTdO43/Kq7Xfc="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi/2aAACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrGoA//WsbT1Y6rgjUmAsJAHgICDsr4WcMuZuIRtZLGs3r9BuGfI1/v\r\njEg+L9lymbcMZvj1OSauIwgKMjz1J11ujtC2lqWnoyx+UCimNJBVTvIPDU2N\r\nS8/WpuGMGOYLPqdBngsrCKSkTeqSd5hnUBbkdWkJ5H88p1hudkLfr+JYdGPN\r\nr7gAVf2JUgV6eMeOABJyRtWC5xTjn/Y9WJyCXj0Z7Agj5EHgN4kuLZ5EFOyA\r\nqDAfY4knjdjHysxtzoDCWfmtmP/Z+sjFUsJ4qWCL1EECJPyOcPegwHjxGe45\r\nUOoX7izH/LE5tkbQtYNCoqMIYTRhZ2WGWeTXhHfYQgHFH4jqxlsc4PwClLPg\r\nbOklI24V8c1mbJwFMk0IDVH51LE5fFS2a443/uiisNX/OXJPXpg3C7269Z/Y\r\n+XyciaRRcKxz+G6jzJUt/2+RBMSnLYYp43Rj7EfiZZeszaNZtdMk/BIO1cAA\r\nDtEfjYMfiBY/AmBwFhmkweNQ3rRJXWtiRrT7UpgCMUmus/Xbv/fTv4OgUsut\r\nNuUTew0yRGK/mj2ytbhEf8vNirnMNSepD2WjD1HFtGBYuYyTux3LV36WHX2i\r\nOrPz5YOAuzHJlJl7P3lkgBizqUchoX4m1AEdQqN0XfuHRPF+kDo9Nloz2LJw\r\nwZ0FCIceHgRrtpxp+LDvtnrMZKYbF+XG3+w=\r\n=dpl4\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.4-dev.71e4b73_1660905088646_0.1126544256904416"},"_hasShrinkwrap":false},"4.0.4":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.4","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.2","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.4.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.4","_integrity":"sha512-G5BKFDKZsAxbs3RtvczpCyNyaoi3DPsIhCd2r/ihyUEO7/QrY2N8THVoi+T2kqTxwgbCrNqQA/nHPuBvcpVg/g==","_resolved":"/tmp/1834e1ec3f65f3d8187c495f52887568/ethereum-waffle-provider-4.0.4.tgz","_from":"file:ethereum-waffle-provider-4.0.4.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-G5BKFDKZsAxbs3RtvczpCyNyaoi3DPsIhCd2r/ihyUEO7/QrY2N8THVoi+T2kqTxwgbCrNqQA/nHPuBvcpVg/g==","shasum":"f1551cfa9828a2742c291c346ee23af5de216c5a","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.4.tgz","fileCount":35,"unpackedSize":62756,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAd+2cVzlwAHuSrlFTj4AmoYld6fTsT6oP5DwHy4CFdwAiB83FJrpKZhM7deMYJfmIlHlsax3It43NYL9GM2Miqbvw=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi/3f5ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoUyxAAoeTQyrKz1mJ7gYyvv0o0n58LCcFYATiXQbilnqf1GgU+U+dF\r\n70/nI8wV799fmnucQnoGOVlzMnST7wBF03x4AvrMfh87cl+Dw8wTmnRmu8QZ\r\noj1XWO/Mo82o+R7Yqv4nhPEOMkeqV9PcfojbXt4QlxHm89gvaNFL6ZGNxqqU\r\naSmMzvyg0a6VLyyY4TLsNiAzpxeBTQ/G1BXuAjg7JSVnIWAYwB20PrxQoFcb\r\nF3I6rJvlzofEX1/CDp3tIhiqz1gRQqMtLRKX/+qTaoy8nNLoEmpenM48PAbg\r\nN+sFZs5TEUTNJ978lWVaW2K2jQGzUc+huQbXIzrlfe5NjTpwWRAwCAqdvb4b\r\nDYanb3tYNj9F7W0MySLIvLko2Yv3mmYmxLzpYkYHiYVIpwIZHhwvZwyTkQVz\r\nghpKPfMWeoQUTqbF/OQtuA8ICbqT1czMyBhYs8isolavWBy3CbWVaYTmKc88\r\nRURiwNxZxsKnj+2KmqTQ3BpIPfMt9+GKZq14/5VE7RSqSJ3vrQ9+XjonB6hO\r\nfytbR4rxuxfX7TAsjEddV8XtIUopziXDRZsJeX2+9UY3epB6961iWhEQUQCx\r\nQeTyTlFK92QFcZRvvBGdNpeiIQSDIF/3uGiRj+9u+pPYab5OwO6YjlEziuJJ\r\nQOTKOpU2QBveDMOiaIzwwFlsYRzrWAl57ro=\r\n=OI4E\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.4_1660909560765_0.481335896505906"},"_hasShrinkwrap":false},"4.0.4-dev.2f8bbd1":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.4-dev.2f8bbd1","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.2-dev.2f8bbd1","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.4.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.4-dev.2f8bbd1","_integrity":"sha512-8uicr6wVv+sVIYg5u4U48UJm7as8X1R7Cbi1RE/9Dqi8bpvvcioPS/3WpFH/rOMWWRkdAOPlg3ocopRjSFOCSQ==","_resolved":"/tmp/9f6a60aaa0894e86c0ec335c7330c63d/ethereum-waffle-provider-4.0.4-dev.2f8bbd1.tgz","_from":"file:ethereum-waffle-provider-4.0.4-dev.2f8bbd1.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-8uicr6wVv+sVIYg5u4U48UJm7as8X1R7Cbi1RE/9Dqi8bpvvcioPS/3WpFH/rOMWWRkdAOPlg3ocopRjSFOCSQ==","shasum":"f4405f9ba2661a7e29286e5c455d47cb90173661","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.4-dev.2f8bbd1.tgz","fileCount":35,"unpackedSize":62778,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICs2HIYgFxrW5YmpRBtEe4lAXMftBTuGVMZY8Z9SeJGXAiAlzXBgFhZSIQloUqbeGdrMlOlwlluyYIwJY7AZj/t46A=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi/3ihACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqrUxAAn9jG3ld9JUlho/Jz9ddxB5ZpDTSYuaEF20aIRvNrzcQuNNyv\r\nh6WpoWT/qpGfm7VetGZ+871ut6n6CWP6WuEFCZ1pBDZL4F6EPEIlNn2EBh96\r\nkkfHSyt9RBN940K9iODVZb/UbYIyCCfd2PUE+LwJqCyWZJ0/E7czS6DtPgCL\r\nZYtt9D2Bb57yot3ZeUIlxob69Zw7u0sDYy/TX3fbjI5Fd76B2vznHwKzFUEz\r\noqTmP/y3v/r9beQEi7DYC3NAqJwlMLVLddZC5e+tMjoUOMRHh2QTsJwdRWlR\r\nguIOrbsvcHgakqInOdHUOEq9h0QpTxi1x4g9RchQd2ngFMZImIKvd81RLzpL\r\n0Zq/mOA87R7nafvlPKBnkG5i/IGkNaqu4Vy+CbDYYOJROAYblMaBOAazrTb6\r\nIHiL5XCbi0flL85YKFC/seF7XGrJD7OHqwU4GNVXmBYOXy/vJPj/nZIU4FLA\r\nHi6fF0lpERjvkt3ttiN9lSKqFRVuAJFjumEMMcPjn464vvTTsd/+qJs9IKdR\r\n4puYwKJWGQIfaPbcmq+H4Fkbh1gGqrp3TM2G3S1W1nsm4c04eZG8ABSxrAEh\r\nhQZGJcrgjoLGhWcweJWcjz0rFPDUWTbu8pjrbn6F/a9Y6nfr2VGujZzVflbA\r\nMm3ZKu5uQZw+ZQjgiIVRgBPpnnmbyi+dYC0=\r\n=QwNJ\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.4-dev.2f8bbd1_1660909729141_0.3783312844857749"},"_hasShrinkwrap":false},"4.0.4-dev.b96f0af":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.4-dev.b96f0af","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.2-dev.b96f0af","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.4.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.4-dev.b96f0af","_integrity":"sha512-L3dBWt3yUKz7/mVpFrUqt6TIoWKo3Bxs+J5hKtUdSy36a7HmdX5MowOUzHXzgbmCnCsOh2Rm6JAp9Rd1B0Qqxw==","_resolved":"/tmp/26674b79bc28bc8b741c7a152dc071ad/ethereum-waffle-provider-4.0.4-dev.b96f0af.tgz","_from":"file:ethereum-waffle-provider-4.0.4-dev.b96f0af.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-L3dBWt3yUKz7/mVpFrUqt6TIoWKo3Bxs+J5hKtUdSy36a7HmdX5MowOUzHXzgbmCnCsOh2Rm6JAp9Rd1B0Qqxw==","shasum":"2a116838b757b70c045b023a12e354e9e6db98a7","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.4-dev.b96f0af.tgz","fileCount":35,"unpackedSize":62778,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCgbRoZSTF7IftBjR74DPq+saj3s9gqWroXEVcwCi0xbAIgaYlUehyHHpywQ+Fx9vqDcdU2VSbZLtv+AHNWLtLpSU8="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjDcnwACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpJMBAAnWefLO1Bp0dgVxNJeu6Hit1PnBlQquzizTAOPMyKDbjq9WG8\r\nCxUzg3rw7v4IXxCHgq1P/n3Wr8AU8SawMzZRq+VRWI7JQn2RpfGDeOZHQLFG\r\nUziCitVRoqUWOblMPd7PcXiwM4Sp1cpsy5w1qJvhKfrH94er52pUn885/pct\r\nmChjHTdx3AclJExric5UBRhCFI4BxXF1atXFCGl33StoamV9/sZytNpUp5yN\r\n1f+ReyVB2o7I8QQIDgPHA4jBtObIfctyVVP7VjWsVGcuDc0q3l7A4RxWNdT+\r\nImImkzps7xwryg3eP1fddefnjOxrmmJfR99jiCEolu23jSqfiUtn7ffcZ2tr\r\n+O24vCVcTOiIul6KnU0EMkPbwwpAwAuF6R/pe9q+bwoF2C/XqRPoQ9m2RliO\r\nchu8S/0t83kPGfxrOiLLd0IyohZkLqaeN4CM7T0vKjGKLvLx0xOecTAkG9r4\r\nFgwdj5ndlCHSX6bXikHjr3MnHtiYRHRmm92+tAmpwXCnDpK93TXwLLc4XYMQ\r\nTqs/NO1zoBk0WW4KxDzq4ks73ZhP8CcFLBYlr3F5VFKXjDt2BenmmJZfHo9V\r\n4FkhoWWqCy3pHb3ZxZcqnY2HjAqHnVS7Il51VJi7BCP2GKDbboNuQWzh/T4T\r\nBu3UJsiRFvsKoqdhoj2Es/UYehnPn9RdOs8=\r\n=JpZ6\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.4-dev.b96f0af_1661848048054_0.2628642684222857"},"_hasShrinkwrap":false},"4.0.4-dev.f0bea18":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.4-dev.f0bea18","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.2-dev.f0bea18","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.4.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.4-dev.f0bea18","_integrity":"sha512-MMpiYv/+Dm+G/tQEG1NbyZNSZnC9y7ICBUTPW4ymw1egotqj1t2xrabp5px86nAKgDyXDpUZp6td8NpZvfim6A==","_resolved":"/tmp/c09e369eb0866e7236477cb5df076726/ethereum-waffle-provider-4.0.4-dev.f0bea18.tgz","_from":"file:ethereum-waffle-provider-4.0.4-dev.f0bea18.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-MMpiYv/+Dm+G/tQEG1NbyZNSZnC9y7ICBUTPW4ymw1egotqj1t2xrabp5px86nAKgDyXDpUZp6td8NpZvfim6A==","shasum":"f7875fa539892fdc1e7ac79c4e6b74ab586537d7","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.4-dev.f0bea18.tgz","fileCount":35,"unpackedSize":62778,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCnvbBNZ+4u89Aofoun0faptVRuB0oO3Y6ql/I4hLJutgIhALmNQLD+zSK+qr8jGbVg0N5Cdeba9PlushbYtPPNe0GG"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjDfBnACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrlwxAAi/QrZIEhl7X7dz+/X9kEFLoINWgHnblzQWvQTZ6zXocF/vho\r\nwQ3VQpPdEovH/qITZ089ENvu4yaV/P1BYO6+arF0EHPetrCAdpNwDNMU2FH/\r\n5LHanwTbQElzVMpIwHxReIdw5zbJ/fmXO1/9GDNqI1fOugGAQfrTGRJXuWmj\r\nu9Zo1d+m8L0WMKriGNYwlZrAIlW32kiAw7XadFpFursL4LX8+T1q3HHKlQH9\r\npO5JUBsqC4jSaNOKP85u9cMp1XL7khZAYpRpuMUY7Lxa8BxbZj4BhUOjtWrD\r\nVdCtbpHVzzjGhKzAuhvBvI72fH68TpdPxOU2mNNigKlevJXOicFzzpQT7n9r\r\n+83KqbrqtSVOYmdd799C3o9yWxF3bGGsxqVk13+59MmYZYaiWx946wENfJpW\r\nqQSoM0Iq95HAiep7kCr91US2JbI936Y8ourpgtBm8fEFYxFFbaffhStfedHj\r\n9tptWrKJOsV91DewlQ7r/rAnfqjPpLJPZhbGhgcsB7fepCqNnwjYdDo/lTAC\r\nAJv6yOxf20PRGZgvVJ/T/K4KsY40vHnDYQwD05KMGMq86xj58k3EWmrnHIOj\r\nr1wpuBXmC1aLxUKYxAkLz0bYTkI9ubbHrmB9jgtRXh+xPwvCxenZUcEx6HXi\r\nKBb9DMzXMj4vr6VHvgCRLq7KGykeo3yxwBc=\r\n=2C1B\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.4-dev.f0bea18_1661857895134_0.6738173182139677"},"_hasShrinkwrap":false},"4.0.4-dev.6f16299":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.4-dev.6f16299","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.2-dev.6f16299","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.4.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.4-dev.6f16299","_integrity":"sha512-HYP2xLPnhfLmE6GRksU4KsSZON7Sz/gTOS6cPjRvmh9YlvCfQdLPxWdtvpqfGxzti56hgHcM6U05ysMkk60n/w==","_resolved":"/tmp/06bbe3c607c65e9d1df13f5568e312fe/ethereum-waffle-provider-4.0.4-dev.6f16299.tgz","_from":"file:ethereum-waffle-provider-4.0.4-dev.6f16299.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-HYP2xLPnhfLmE6GRksU4KsSZON7Sz/gTOS6cPjRvmh9YlvCfQdLPxWdtvpqfGxzti56hgHcM6U05ysMkk60n/w==","shasum":"2bd56c5649a80ffc7b6398e0ae68f9bf8f0540e3","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.4-dev.6f16299.tgz","fileCount":35,"unpackedSize":62778,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCam4rbmjbrUVWap5KIcZb0rQfqagwXAbqeQJqXgZ9prAIhAOXtzVn/G7Kih2ksatLO2aZIj1tHjD2Da2P65b+O7jhN"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjDfXPACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoveQ/+NVHYOcj3kzAgtp5Dx0JoxxRYfmvBSOmjwYjHsZ+dWZjUswUR\r\nz3wThihqqS5Rn9JATuVV5yKsCpPSmYTaxmRg3E2xj+5sVO7xDbbsDoi4UazD\r\nxShJBLPb+KVgKd4isS2H83QKaFS8MnWmB2UeargnrYQf+yfLfJvUl2sEdLCs\r\nNRJJnH/193+iiZSHOQt/uvn/6tbPaLPWJkqu30TaqmaKyx6tairn8i7Q2YEN\r\n7mIHFyj0dF8FyPAG3rWi9EFKXcW3U1dRkZj4P2pt7m6DyfmfqYiZK2NeZRN8\r\nQzD5rm/McbhUcJS3wkk8JTLXyYeP92tg3OTG196fHKE8ME/ME8NPzonTezDP\r\nQy9XbPmYtbA2fd8Au3W9MCFrrsSNDX6tTZmqFf/MZYZ5k/U8kdwu9kKhdTuM\r\nqrGiAUi1pCfjuIcusQLSsTzxhJvJtuqdligpGe4+SSgYAH332ViKTg1BBhjl\r\nFZ95DeeYLAM8IvbdKzljkrCmyjd+E6b4AId7XQtJAxgaXbt8UAzuAaAbPiTL\r\nL6IHPSy2NoLMk0C/X4lEMApeITnADFol7OeR13SIwUiBAExEgVHOKh61xYx1\r\nVwkdwOyk1mJuVZtncy3rUPYs3oo0gIXKVOQFFj+DW1oiqIYwf6sC/m4fdOAd\r\nKwI233AYz5Ue52dtAc7dbzoRAoV4tPTD95Y=\r\n=lLM1\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.4-dev.6f16299_1661859279208_0.2210462157409634"},"_hasShrinkwrap":false},"4.0.4-dev.60ae4b4":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.4-dev.60ae4b4","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.2-dev.60ae4b4","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.4.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.4-dev.60ae4b4","_integrity":"sha512-7Fu6TO3Kne9WjGxPA9JsWtdOOkG6pXYi2KV6gAoer/E6g7bd9NtAlhFmODwZVBfgMemu2RUGRRoJv2QVTGQ3xQ==","_resolved":"/tmp/a4c3cd572d890e2d630e638f721b8c39/ethereum-waffle-provider-4.0.4-dev.60ae4b4.tgz","_from":"file:ethereum-waffle-provider-4.0.4-dev.60ae4b4.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-7Fu6TO3Kne9WjGxPA9JsWtdOOkG6pXYi2KV6gAoer/E6g7bd9NtAlhFmODwZVBfgMemu2RUGRRoJv2QVTGQ3xQ==","shasum":"fd0dad23d93b9a50657e62e337be48a105442d65","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.4-dev.60ae4b4.tgz","fileCount":35,"unpackedSize":62778,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICbGb+qFsgTsBOUSUoyZe67Sb89w6pKcgV8kMcmWJFCSAiB9HjePNsKu5QiJa8dudDrQ5C15JTtn4BJ0iAf1u2WsvQ=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjJHzbACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpbMw/+ITzzGdqS9hO1+uc7TuJC++Rlk354jTSZtSslVuElQqne8zK0\r\nc92U3TiPYUfLmcIQbc5y3cX1nYed6HCuGVgkMXB3qyHJPD5JMN4yD31KoFu9\r\n2K5Ch5MVBDHzRBZr5vXOA61RuRwmPbX05hYoVl2VLWMH7qazWJZnO4TUDwV4\r\n0LgPmxxyjS4peEIGq5XsFK8/N6h27jiW/aoPBss+3dWuyWO2u5jikvyGne0P\r\nFgesF5Gc96doVW4JVZkPtyhb0nTKU1XeU/BvMHCmY+5zu3xl8KhZLOM9TfUb\r\nvHao7nvJqZCteRe7V55kOixXpNVeR+AVsWZ8dQPPyqJzt3qs8GTK7SoX2PfZ\r\nel6UjjabyXOX3gn7a46ESrcO9VthGnI6hAEOiJ4jVHmffCnVSGGrqscRzrWO\r\nmJf/exgrFP+FIwpBLsXD6Ovp7m9Ih0gmuyQpLJ5FZ0xPMfzy8nWB/iEFi2oj\r\n+bKGRzVxz7NusNbnEAUadTiuBo+wuPmuNbxEauZMgRoYfpVo2uHNARa/2jh2\r\nDzgMUy46oP/I/JQ9HpooAnS6EVl89L8kn43xRU7yGuDyU4KaqaA4ocOIFNRH\r\ney+Ca8YUJpC6aQvN5RQmb8IEzTdu2ZQC1HzVas92udlQbh43BmioZCN0zW52\r\nxC4zGN6B136d9Bslf9VU8CmRfWNuZtRSvlk=\r\n=J+yl\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.4-dev.60ae4b4_1663335643544_0.08227149797351285"},"_hasShrinkwrap":false},"4.0.4-dev.2d19dde":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.4-dev.2d19dde","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.2-dev.2d19dde","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.4.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.4-dev.2d19dde","_integrity":"sha512-ZOsr9hGzSfKFwjOG/mwZXWX5xpTiNY49vbrOlqgOtnagsnJn1JiH6jT80AfGzwizC8EKpDRCiDS4YIJf1tvIXQ==","_resolved":"/tmp/28cfdc47ede6517928a295f3aa5de110/ethereum-waffle-provider-4.0.4-dev.2d19dde.tgz","_from":"file:ethereum-waffle-provider-4.0.4-dev.2d19dde.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-ZOsr9hGzSfKFwjOG/mwZXWX5xpTiNY49vbrOlqgOtnagsnJn1JiH6jT80AfGzwizC8EKpDRCiDS4YIJf1tvIXQ==","shasum":"7ac5bdee34aca6bc4c06ba5b98e582d53bf82e27","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.4-dev.2d19dde.tgz","fileCount":35,"unpackedSize":62778,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICrDJQSdUPg0nBfLbMHqJWBA/w3uRtGZv5n5wCb6dRXkAiEA9KzZCLtBMvqL2yP820YUN85wwvs9sJGeQLYji3UAY/E="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjJH3qACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrMCg//eW1cSn6zxnM3S/fIP44Hb9Zo6Y4YWVf3/oa5YBSmguEwQyu0\r\npYcYrKg+6NIaObIikPBrHU1o4wscIxaGZL5hQBP4AzaU2aMPgo2WhNvcd7Ja\r\ne3uRcXLJqUys9YsiKy+4nlYEmi86pE4v1f7W+Zqr58TNcuTIT70gmc9Hl3Q2\r\n4Hcx6YKZTeHJBsdLwy3MvYhWPb/ddy7db8Nje+/BVg9v0u57S42WE/oItsQJ\r\nQTm6WVnZGxRZi5o98NLaxHrRW8djJgjwO4aYswaTGbVYSwuWPHBpzBhRgavA\r\nUC+H4O/GteK8yXTsmGxPy4iwk1hBKVrTL2HIBUnMS2gnLypJx7gny7uw/z8/\r\nZiu7YTHL2Ms4WCA2Jk/QANXwOqqUXRNoz45kh44ZnIalPhUAzq/5x4ZyK3NO\r\nlwwI0UKazPpV/KTDRToGMV9yfi217puA7XuqeWLqp4lS/dDi1TXlQkLxqLCO\r\nTNfxcd39u5iFT1xZvo+yaG7D3qflTftjZr1Gu1cLCUEVw0eSgj/+36gFtJtz\r\nWoqUPpRmluK6yb080RWNtb+OsU//bdi+z3a5jrroswTUSWTpxTA4hf7eHPT1\r\nos6BfjzucYeIpVx4Eo+23/kOcN7JMysUFgg/5qmerood9wUiLCSGvGKqhgAM\r\nREa75HSopxrOF949rKyFY7IP7ulky8X1F0I=\r\n=Lzri\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.4-dev.2d19dde_1663335914211_0.936891912922402"},"_hasShrinkwrap":false},"4.0.4-dev.dd21fb0":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.4-dev.dd21fb0","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.2-dev.dd21fb0","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.4.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.4-dev.dd21fb0","_integrity":"sha512-AXMIgQqH8g44rGzsVJiYqBJI6Wd8ic2UDOZ+GK5BwylQr2tRMABXhY5GE2f3BNVgcJJYJpvWQwva8DlVeSvDnQ==","_resolved":"/tmp/ce107beb2ba7872a52b354e813eb4d4c/ethereum-waffle-provider-4.0.4-dev.dd21fb0.tgz","_from":"file:ethereum-waffle-provider-4.0.4-dev.dd21fb0.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-AXMIgQqH8g44rGzsVJiYqBJI6Wd8ic2UDOZ+GK5BwylQr2tRMABXhY5GE2f3BNVgcJJYJpvWQwva8DlVeSvDnQ==","shasum":"18c6d9c9e0d9416965ca0f03a4b8adfe2a71316c","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.4-dev.dd21fb0.tgz","fileCount":35,"unpackedSize":62778,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDKAd4vkP6zruwrwO4eaIOcbBgwI87rjTv/K4tsmm1PGgIgakiyx2R6zXP5V49G1DHlnCz7oxwhdWtMyGGS902MGRA="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjJJeSACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp/rQ/9HFv34zjtp+Y8XpBSQ7o3zTq75vs3u4Jk2c929rqcWSJbT2e5\r\nGN+Eg99VS/Yj/xnT35Flgng8fPoHVDt3Vmnb2Kqf/d2trqNQxQ4V0ZpVfiXX\r\nI0JfwYalcfo35RCS9yDcA4mMFjNEIcIR7jnnU9Yy0nxt1enak88lo9hbmLxY\r\nzN5vfP2XJfAq7LGwbXMxY6xI7HC5O7BLaRZlgCL/dp2aYZjDhMFefvrqa4vw\r\ntcD6Z3em9DHiTMGfYgNJWP4FzHoKmc2TGvX415evwURubXkBPjrnadMXvk1y\r\nPA9XUBAWyyTulMKtj9IQZI/0UHBcz0V9klT/uztpMp13I08PJLYSqap5F2Df\r\n7NOmM6RpELKbyd+vITOGaYzc3nVSB7zHuCT4y8gXF0rqi9KFDy95Y/ecUppX\r\ntL/vmAbM6LmMzvNifW2/DCDKa7NnuOVAzKg70TTp5wmNnWNWpIqhSfrx3ztx\r\nVN4/WBEZyjiyGjrJoxcCVzBfXCg+aujabW1yY/YFUlxNJCkAZ0IoiMHnVrEb\r\nxwBTtwLnq3liSjnd6txjVzUoz2WO+lC5A51IMqxTkLwrsNZasyZDGsHQ2UZj\r\njVnl5E+VmQCM4HTgYnDJLdp6A6aX4qeAw2y5XpkYu66ipt8n2lioVQeBYzrk\r\nm4Yb2gYSmqSWqIRLSe+jxowqHaVH04HDuyo=\r\n=26En\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.4-dev.dd21fb0_1663342482335_0.4042957343332605"},"_hasShrinkwrap":false},"4.0.4-dev.cc2dc55":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.4-dev.cc2dc55","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.2-dev.cc2dc55","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.4.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.4-dev.cc2dc55","_integrity":"sha512-RCNcgdt0mD3eBrUUkIrD4gpev2CfysnsIq3//CZBa9DWrFJaQNMj2LdRgdAbO+qKIa/Y/4Fq5plfaatSnUE7RA==","_resolved":"/tmp/0acba58bc49a55073c8444d517e4f26b/ethereum-waffle-provider-4.0.4-dev.cc2dc55.tgz","_from":"file:ethereum-waffle-provider-4.0.4-dev.cc2dc55.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-RCNcgdt0mD3eBrUUkIrD4gpev2CfysnsIq3//CZBa9DWrFJaQNMj2LdRgdAbO+qKIa/Y/4Fq5plfaatSnUE7RA==","shasum":"b0b7bddd553f1a3122115a5c74d1eb1e00e2545b","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.4-dev.cc2dc55.tgz","fileCount":35,"unpackedSize":62778,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDdDLC58QO85MREK7RuyvBxPuSWXNua5D8C6XIa5+jgZAIhAJvlBezbsvcUZMSfMs7qNmGrUstLUTqSauKlsNMK+9dd"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjJJ5kACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmrgtg/+IuAciupizl00bzoWQyF4OaYyHxkNr+90KrS6OjbsIFVWGWJF\r\nvf6rqqHd2C9pr491TOzSoqyVlVJoYu5QA1cp+SGCR83baVP3znLPv+FzyAYi\r\nVNkf4uPRsIPC6Kh3cgVX3LA67jt2p7kT9dPt4o4flUpyRDDZmzTFZTpTdvBn\r\nwE+E9Rh161ozIq339esvyELV+TrXdZ0QTVJb2NWBjd67t+Wtyb4sNpwldTcz\r\n0H/Mg4bA8VZj9DpYCEAcjGUnLJr7XjykSoShjCF1eIqHcC1gppaxZBP8Yr3h\r\nozJ3+/DtUofZl5yc9tVToTfMd55Ibin/Kw+9L+fMaa0LpC+KvnJm6vidCndz\r\n30L3aD4WqjqMb6sytPlchsj69nhudvN5wMbGvTMq3EfF2fpNM/ZEFkonaMUc\r\nNTcaws0dct4GRHx8MNW+stz2ClJtpkhcSy2WxSiHlTtPsdGzfxtubWNOPiLe\r\nDLgQHDfW/bc3Z2Xw5gg9Rstjp1XAVlZxyjJnk7FuR7CjJV1UtXy4Txj9jC4Q\r\nOXJubd2AmiTgua+YfgpAgiZZTDSCplqVylMHucTFkXoimhy06lBs5nsiDkzj\r\nt7wbHpK0lPVCXtyIiN65t2btm2qmALJG9dps+khsS+HuDaIugaLsAJ1Dp4tM\r\nZ6fG833xzO0/4FsRGqUj8bauitPftFAa8zk=\r\n=2Ql+\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.4-dev.cc2dc55_1663344227775_0.057696999611107413"},"_hasShrinkwrap":false},"4.0.4-dev.cf5427e":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.4-dev.cf5427e","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.2-dev.cf5427e","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ethers":"5.6.2","ganache":"7.4.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.4-dev.cf5427e","_integrity":"sha512-JmExz9QGO9d/CJ+amGkV2MKv5mRzJLQimrXrdDXjueMKOc54NI5HQNzhYVflIdiCadSwkIIQaQT9oR6EV0Igzg==","_resolved":"/tmp/cc1794a326f357e95f8d5fe27a2a00d7/ethereum-waffle-provider-4.0.4-dev.cf5427e.tgz","_from":"file:ethereum-waffle-provider-4.0.4-dev.cf5427e.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-JmExz9QGO9d/CJ+amGkV2MKv5mRzJLQimrXrdDXjueMKOc54NI5HQNzhYVflIdiCadSwkIIQaQT9oR6EV0Igzg==","shasum":"e0115c6e8170225d89a82055b58bbc329dbfd96f","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.4-dev.cf5427e.tgz","fileCount":77,"unpackedSize":250745,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIC/2TTXBoitSJmNjvpHN4VHLKJqrk+rd8014tHJ0fe0EAiEAvH00swAKYsPvFDcf5PVpZJ2qHoQ8c4VPjPiC8k9O1us="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjJKnzACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqYlg//dTVUfWbsZ9a1IGmligYyilJUg7rh0CaMEGHtt/2zudEimNZJ\r\nHLjez1+8XmBiA1wa2FYSCTHR4rV4NGy9BOwcfhACmVdPdRGYvI4fyPZIg+HK\r\ns10hRJYPlgj7GvjUbykN3PWebjyjKuC2lC6j9tfMK8Mn/y6bwLNdvqsh92oI\r\nzhbxt8Jr63Sg/5KF9VZKpffNKOCrQeMDQY+PExCSTPIiSIyjtOQ4gCiedviB\r\na5ucV7sLNZ2xFx4dO9dFZ8AJRqbER9wPdbI75ltV28FyRgQVCtugSr56EYul\r\nt+07T8BMNbDbiE1meHgv3OdXvfOBgKqwEe7Bl4BAbqHqb45lz743q2IFvbxE\r\nLMkJ6fdfcQjdGJRtwTWCMfSVQGhhs3sIfnhvUVHclbDfW0ZKxGCixlerqGBJ\r\n8+1fKucqZcN+d8bMpkDlTJYuwic8aszjHv0y66Iy+Qq4HazjNXnMVrRqRNAp\r\nyiqjoPalYBo+X1NGpDXPnBOVPRhfpuhFHRCpXPAjOIDmksQYhY/jHN5BJAqv\r\npyFoGMEt9elkT+a6q2EqohF3d4Wq0e04KH4+XrhOY541JXEE5DmU7FA/7yqT\r\npXgO6oJZY+JoR03YE0YeZf2vzD6jp0FWssYnHfGyNhDjGPhivTLCRtz4dS9c\r\nH77sKHJGOF2oXg1m7vyS8gLYcIpp7mTKEFA=\r\n=qH7x\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.4-dev.cf5427e_1663347187207_0.5295229080069439"},"_hasShrinkwrap":false},"4.0.5-dev.d863d0a":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.d863d0a","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.d863d0a","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.0"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"ethers":"5.6.2","@types/debug":"^4.1.7","eslint":"^7.14.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.d863d0a","_integrity":"sha512-6f7Lix6fMF+fXSNJemT8YFmyaOjYbc3MQGiBaFzlXGTOrv44r2Jl550yHtVGDMXidFlvMd08mTXJwzEg/yXNEg==","_resolved":"/tmp/aaade84fb813be97cf568a1cfde0e6a5/ethereum-waffle-provider-4.0.5-dev.d863d0a.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.d863d0a.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-6f7Lix6fMF+fXSNJemT8YFmyaOjYbc3MQGiBaFzlXGTOrv44r2Jl550yHtVGDMXidFlvMd08mTXJwzEg/yXNEg==","shasum":"b38dd3a5b16c9fe6fbddf46d3a2e0be3c65b75e5","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.d863d0a.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGMx6Td2lgs8CLW6pR2HahFmozabwBvOeejSl78QSoQvAiBwLe674uZhj/riGobrySUKSE90FnXw9uM+8+l0U6kiIA=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjKEexACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpUHQ//VcsTeQjVvwfBecEnl7T96xNYaupokKwyU5WUxy3bPuLnYtyn\r\nnn2yOrbkzHARX2arr21B0R9rPKe/byXylpgZyMsZCgtm/usPo6FRxlw32HqW\r\nqkJbMOESGEfVJPYnFrhBenWGOzFKF6s+pFshr2RpVPG/L7WI5MQrExCDyadv\r\nhyeDD+/oqsF7S3+PNLCC//72f85YyeU9J7NadpYArVlVkilvfHwp95Qa7IWC\r\nJOsZ4bHZJA1iUEEc+IdvmuB2btktxybEtTO+wu6zKAqTbav4uM/SfR9sAKqf\r\n60Nk1fDf8HPm96J7ehvq5I3/16G+ylK8jC9sSQfaarq0iqDiKBycqOGN5nUX\r\nMCE9dXlkj1/nM7wn9RWUJmJJLkXGj6jlNpx2oiPXpsGf0wqd3i+zMFTTCHhA\r\nwOcPALSa97c3HIaxD9ti0dgOmeUVXThthj5St/tp57DCRNzd58UhnGdHO0xA\r\nlcnVUWSlD5ajIV9yIKrS2Oilwq5Gw5awy2d8y1sJLLe0oZCYLvfnqWOjTkdR\r\nQtIf+EBw2ZifOV4mv4Jg+NoBkxVhtIVA/4jJ4XnmBohxu1QwpRKLa+IM084s\r\nb3E0rYuZfelhQJna/xoKryGUq+UOW3zEnTGYPGPCeehrd1UZi3RkLPLgvk/T\r\nkAHFjtCaJP3GuCHCjo5ZMvOoGlDYO+pcRTI=\r\n=LWh3\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.d863d0a_1663584176996_0.7001721041438873"},"_hasShrinkwrap":false},"4.0.5-dev.0c72c63":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.0c72c63","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.0c72c63","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.0c72c63","_integrity":"sha512-/OpMVQpD5YfaxD3tgDd6JpPlfpml8A29Hpixcow4Xe8gKys+IsS+OlCNoc8qqtdhx2hJKZjSjOeGShOjG0Kedg==","_resolved":"/tmp/1b2a8b485f211fbce13eea5a81499a89/ethereum-waffle-provider-4.0.5-dev.0c72c63.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.0c72c63.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-/OpMVQpD5YfaxD3tgDd6JpPlfpml8A29Hpixcow4Xe8gKys+IsS+OlCNoc8qqtdhx2hJKZjSjOeGShOjG0Kedg==","shasum":"04da8fa6707ab8a6d47ece0f9ddd94a4c455be5f","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.0c72c63.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDb8yCzBT85qFSL8DoYkA/Ch1rZ1uTXDCsEOWXFcqYdTgIgA4+se8DNdQQFsrD9noj/mZLlpMgQhGdBKesgjDioqzY="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjMYpVACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqZiA/7BoHqMa/cA/J/cse7tOb4K1NqQHrjrYmbpvFM4SSelOpw8ENS\r\n9nLSIq6DT8ChEckcCcTr9IapNbUCBa1yIO1D6Y4UnY7ed3gzEjWoEnPObu84\r\n7GUoeVw2gXYpYPrn28yRQWvAXzoNDmCeJzEfLkn1nFZsT9EyjpnlafrHDCoC\r\n01U+mBdzkZaNNhxjgyoRlWIfhGF5M4uw+MTXfC5ruPfOkPNtBbyiLcWb+q3u\r\n1IH1an487wMuhUPQ+inaCmGgQISKZPiQDRgcotkVm2lA3qPURwUXkDQ2xt7G\r\nQri/9jGSBBA+oGUHwfm2WQSsDMnNSHAZJeDccWWmgJWono/+qnjZ+7ORJcbc\r\n8435TTkSUzhzB9r+gDVnrFZ+Q6xONw+0rylyQ5BOW9o4fAVsME2+6wVtRHBE\r\nxVox8YnycmDO2V7JRh37N4yVssKHNcPEspz1n4E86a2p36PKiAOxMKlQSdig\r\nQBhYDq349+EP59a60DI1Y7Q4rjRaQNrfakJSs5kM8aQBOll99aQDINF56wk0\r\nQiSMLbtbjUrS/6gfkxVm896Yd1S0fSM1LIzfgnUP6FL5CB4exVKhyF6MdGLl\r\n5vM/m945kN5cEjwzaREepG5xQ2jEyp7N7xTP3MB9ObVB4MTKa2TCL8PQZHsX\r\nGPChnaUd1SX2x6+2aGcYIW944lZXOc52czM=\r\n=BPd0\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.0c72c63_1664191061027_0.8848551576306753"},"_hasShrinkwrap":false},"4.0.5-dev.f3d5029":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.f3d5029","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.f3d5029","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.f3d5029","_integrity":"sha512-LyErYThQvs4mBaPHCJVn9xIaYzwBxBNvBlM4JYMyYDroXPUXGL4d8+lkdQcvERta5TmwSIRM46fwczgagGeIhg==","_resolved":"/tmp/937750fcd9dab87589b31ebed54f0587/ethereum-waffle-provider-4.0.5-dev.f3d5029.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.f3d5029.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-LyErYThQvs4mBaPHCJVn9xIaYzwBxBNvBlM4JYMyYDroXPUXGL4d8+lkdQcvERta5TmwSIRM46fwczgagGeIhg==","shasum":"6e05a8749472a53c8c95be8e8b2fa75654631a05","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.f3d5029.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCUZXOJQTZe8WUd/ZwRPqTtesv5098nZ1Nm8NehFJJb3gIhAIyRr+QhD0baovdnEzOARvuEN7kbZlnr9sCeqaJkiN2V"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjMsU6ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrJrA/9GeR/xaaVubjbtpM4Z6WemfU8Xi0G59J38qPMfeO7z43RroM2\r\nzQ+GgyYKluMchOrItd6ZHLpHVaVIwseNeqM3dQ6cfWv5kY7CJB78XlKhYyGf\r\nhk0U4KilupQIq6RiB3hq0nEgEdK7HXbPFrhp/LKw4Mmo3picsG4LPnOEcFcv\r\nKis9Ec5mmp7G0D2ySczow0kC1z9dLKoEZHHSlZtoT+VXJ8ZE8eq05Z+IuLUT\r\ngVm9OEdK0nNP95pVxR+kE7SGpLQzSWovfdvF6aSuX25CIJf+YabsbGd8UcYM\r\ncLFAH1PPF/fKzudTUM/0QEgL5vePBJyyodSxUHkgMepe69qgxpMjlcJbz4iv\r\n3Li9lphxh7RUfVf62wdnoNqoK5ZTr2dWUJdVPBZqdEkG/GHzpiC5fnW9lcgk\r\n+xF0yOZkgYMO5u1ytrdzhcoDzypjeqUL0D80FInTsbdNoSmin0dmuNNZ0u3B\r\nRLcfm3bazFFZ7jZr7UjNY86Ps86X1Z7CHUvE8Qjk/9V8lb4376hrr/s4g5nb\r\nHeoQf0jjO7bvpoytBNTJ5bzoyY3Jypzv3cPx/hlgGt7lwuhpvcr68w9rT1Qg\r\ntiVepjqEo6hQijaMusa6ahuyUTBYX5Z9frbK5Z4VntSUQx1YdP0dgcOGsZid\r\nkFlY6KV5YqwUm0sBA4PUq5Vmc+AHRa2pmKI=\r\n=uaQg\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.f3d5029_1664271674756_0.7235717792561038"},"_hasShrinkwrap":false},"4.0.5-dev.379ba2f":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.379ba2f","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.379ba2f","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.379ba2f","_integrity":"sha512-oVS+pZEDuQdIEx3v9yaLvx3oBFB+g3NfLOHgtjZV3FaTC72arMZWuiv+OM6oIDn37j2eFEsVXcdvpYKss+KPnQ==","_resolved":"/tmp/1bf82b84cb3a91413375423569c4a6d3/ethereum-waffle-provider-4.0.5-dev.379ba2f.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.379ba2f.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-oVS+pZEDuQdIEx3v9yaLvx3oBFB+g3NfLOHgtjZV3FaTC72arMZWuiv+OM6oIDn37j2eFEsVXcdvpYKss+KPnQ==","shasum":"81a1c9462e3fbaea16a355117ac8921fee55ef0c","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.379ba2f.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFrO8HViBH+dKyg3+YTnXrUPpG4bz4MMGdcu5aoB95R0AiBqNf7umW3ZjUvz2ErGdS7a8l2ok7zlfuljrEWaNjUKag=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjMsxtACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq2wBAAnsDy2KWmsRcrFV6Nwh1H0LQCfQfdZML1AU5HDk2yBIb4gWdN\r\nHl6dfk30hSwFkR+jHMnk8NFAbDCHkPxIjHRvWkmyDwBhNSB/xr5FzmZFpLEz\r\na0VaoT5Ff4V9TA7Qvrel6HE1TzLByM4UZMl15VKk+X79qt8pOUvPRn53pDwf\r\nS21GMcpeyM3s+gjwJxR1IS1yEyTBTeAnrlk0UK5A7lrrjLrpcim2mJqjhc3q\r\noerUZIcyjvKwq5XxW7IWEr0vrm9Vs+E1jKqIjoVkbh5Ede55HChI7H3jbDPl\r\nhA18Ku9TdTTn7OhftkMyCXapUZV2J3oQH9nsBO9L8Q0FKtfhFQNppV5/POE8\r\nKms4tlKPu8eO++2P+N78J8KpDPrBB2Q1nC+pClu05LTWQ8LzaNxKzwkNEwWl\r\n/pjWuMV+f4mX6+fB/erhqFvq9OdowtudJkTs+koGMRLCNaM9123rAoW3NI8r\r\n6GxNF3QUs4TllD+z1bJFXuS2DQ5IJsTOAJ3jtE/dCK9HLbdVr0nczBr1zucA\r\niDivyJS6g/jfkscbkdBVsRHJDXGamwGHjTkHdNSp4pHwifDZjgKz+u5KZYtf\r\nifbG/ZCDqF01VvtFZpBYcFw5tj9gGWmmwnnyQG2QCx+e1uFMs6gw+puzmxOc\r\nG/NJ5Wtx673R016EojCqjUa3iPQS7rBh6A8=\r\n=yJ+g\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.379ba2f_1664273517095_0.04712682485887276"},"_hasShrinkwrap":false},"4.0.5-dev.9bdd800":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.9bdd800","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.9bdd800","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.9bdd800","_integrity":"sha512-EgCOD8NUI9HkrS6XI45Ilqk+HhDaZaV44UUrpRGz4Vv4Ef15UCYiXGreldybwJc+uJfpTuvEounO2WIiZFNaHA==","_resolved":"/tmp/6a70d36c87569bc7bc4f56987232856d/ethereum-waffle-provider-4.0.5-dev.9bdd800.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.9bdd800.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-EgCOD8NUI9HkrS6XI45Ilqk+HhDaZaV44UUrpRGz4Vv4Ef15UCYiXGreldybwJc+uJfpTuvEounO2WIiZFNaHA==","shasum":"39af5199da0d186dd5a335e3c3b794240b151ad0","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.9bdd800.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCLW14+IOF63vWjwtMEmtzMVIx+Fs1CrwQSSF9tkqR4bgIhAOiS+7yAmcXwqPpcSGTEcM+Oep5sbySHvhsD5754z4Or"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjOtPYACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqbJRAAh/s1oy7ymWEPNdBq+enIfkQY3j0D2iz7BcVkQERzBHA3DnyF\r\n69frF0pQMoAgL8VNoZVvQ4s1TCCWUWsjK7WdZkv3q1/BKs24Wi1GunbzMPjs\r\n2YRqQYWHe3tdjMWmEo1NzS6eIEcCIRLZjnpeBA5XsLKEwVRE5CAqBNe9Hm0i\r\nCE+7ZHeXlnfcHOBgsAVlm0Xo56+zQj5TdnnkCnAoeJjCCnfaaitGQWMzvmSL\r\nOOvjTCJkes8LFTEpRCay5hYeQd23cXUCrzTXnFX1TLVrnTaCFTTd33ZV/y9C\r\nnZqkSBDMLqnTIDKDZIUkuK3TRdrz1mY3DmMuIhHtOn4JP9fIkMu/1r/Za5oW\r\nsv51eilngdPK35jp0iVTQVskv32gDNfRGwYUqXzk9ZuV1VkFTH8rdCE21i2u\r\nyEjc2P4Z4VMY7K3J/m0XAWX6u/tEj6Wboc5/cEi7pXzJnO+1ba1BVdJ6BCID\r\nBG3b0bI1bIyiACm8x5p7lobbVCKA6s6E32Z+wxF43oOXZ06DCqxQoWYYvWN8\r\narOIrnBBjNqvTmQ5oJHDZ5mon7TbY+zocpDIppQFTV2xvIBeMEJyio07N0Oe\r\nHsPWGQb9GxKSdcHagfW1yXRJGABM9ky0oRLrC1OUIO8jcLNyKERrfSY8/2VD\r\n6Dz9QtW4GrY23/vRsTVOfCHSuza+bCzqBS0=\r\n=fQ/R\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.9bdd800_1664799704709_0.16531548376334992"},"_hasShrinkwrap":false},"4.0.5-dev.06c4b26":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.06c4b26","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.06c4b26","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.06c4b26","_integrity":"sha512-Wgy/2+LAlVt3/nLFpD9MdItFBEVTIdy+GrGyg05jrPtI/n7lXs6qXbaVQrcWvtxrA2Hc/eB+ubpubbMQpo/90g==","_resolved":"/tmp/63511cea876a352676eefde5e5549c91/ethereum-waffle-provider-4.0.5-dev.06c4b26.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.06c4b26.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-Wgy/2+LAlVt3/nLFpD9MdItFBEVTIdy+GrGyg05jrPtI/n7lXs6qXbaVQrcWvtxrA2Hc/eB+ubpubbMQpo/90g==","shasum":"1e5f28573dd770e120ad7e660cad3072d95421c4","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.06c4b26.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDFBrK90ItMNqlTYX6aRIRlUJUHH6UTQWuNaA5yWit46AIhANVhkVxPvbFYz82mjuj7v1r6iCTJkE2pcsOV1AGV+IZA"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjPB+tACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmob+w/7BmIFIDgq69UdknfYtJ9raKZ3UdGM7/JhsEVCXg6/E5uPhcsO\r\nP4JFDC/EsXENPNdYnwsVjJw+wMdcRhjm1ttfUMFPR6/d/MRL1t1RzvC50mer\r\n8Mn4TF+f4XmAuXtbTuACdjEOR7kMGPir4JPtAykubZ5AFg4yIlEsVvRdrv9E\r\nnl0Nke0Knxp8aplRCjiJ/vdJ72U3KvSytjKm5PhDtslJ5p/ddJCzoP2/SqW4\r\nc7cERcOt4Xndc2vwmJwjACtxXIP3hI89n5zy4CR6Fx4GZ3F0BtI2FbdO1Eo9\r\n2J/JeMP1VFtSD2ZFRnbkuhbAf+2Lg/gLfBpzvzfeqxU/1AUHbvje3JmdDM2Q\r\nZZs9hCbm2dgKT7TJeFs9WDSfXmgBM4rwMQSkWxsPva6+zCQl/enPGiobANKI\r\nzb1VTXS85uAGv4GHKDXj6oHWGGkjZIjS+QcnvRiNOyNEp+sV7htNFu+BcfUg\r\nxZZFaIcbEKOkz2yL3j8FuLljqOThzzFvdNO7/o/atz9Sx5wwrA6Y8yQPxSd5\r\nS75WQTKiQ9Ui/5xwNkGpOBNV6HNNdD5d8jXZhxABynsz8wj2K60PeUnAAH2Z\r\nigAC4jgBNSJyX94+mYkXrJfP3DWm1QZu8cMWRcpLkCYIkYqeMksKlygTY9C1\r\n5svRxsxNV1jMurWnk7TiOsQw5xvzo/7/NFo=\r\n=ixsE\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.06c4b26_1664884653485_0.932660690304967"},"_hasShrinkwrap":false},"4.0.5-dev.90390a9":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.90390a9","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.90390a9","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.90390a9","_integrity":"sha512-VBtARp0dlryo/GAlLd7Jldea0nCPgPjJ7/B2kTy8+rSCLsgOpIjoSw32TOARc7aL7u58hFIt31kGK7ga7BNErQ==","_resolved":"/tmp/c688696fd9a96df9aa0610a84d27bb4c/ethereum-waffle-provider-4.0.5-dev.90390a9.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.90390a9.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-VBtARp0dlryo/GAlLd7Jldea0nCPgPjJ7/B2kTy8+rSCLsgOpIjoSw32TOARc7aL7u58hFIt31kGK7ga7BNErQ==","shasum":"19a086ab9d351a6548d874eddcf4e671881eaff1","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.90390a9.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIC4IydyeGSnlynJwBL9nOeplIeQiEAUj6tgtkpaY8aWBAiEAv9sIPE8yl2Gm+wISS2VNrp39neCvjBvbCxV5aTBdaGE="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjPFNbACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrrOw//TQWbO9D5Ce3QEjr8QHPPATBepfSLz9XKB6Ahur2y4ziBVHqO\r\nf0hQOFujo9r1GgwbTiVwQtGAOt/eO59UDQXa3Xstpmufy/AUhIrOZ9Cf/X8c\r\n4kF3rOwDXN8uSCAZIpN4Dneyx0+yyfkGcsK7YmhYmKZlifZO46zvhKc3HXge\r\nA7BqZIFAJhgZRNJ26zP7ITgHR+VMwv0X5hGt/vPYR2Uhous5CCgD4vDGtaXR\r\nvzISZOrBHS6QoOyN4rw+8IrButrpc1qBAqLd2ou3b63BIn+9ZRE/UqUw506o\r\na+AOE5qelZVKrwKmabzLDxE/OKnUAG+9ShK4v/sKcYLFM1tQHCJjGTwIteqa\r\n13as1JGYt/F+mCXS2iBw206/HEYI5qYGrMWHoWfjJOc0HGcKsJx3M0ilqNGA\r\nu+oANd9catO2BNtD0XN+sDrrpr76c3GbIwptjkKRXJZyRBV5aTdsDfbeNM+u\r\nHESFAss2zod2+FRkXHKU8Oqu+NuRvwfnZ51sr7SC2+loOqY6hNNtexVqECaW\r\nT2gLFoQTTyYToDwZVUoVd/r2X1gu+3xlZCe0c2c2II3iW0oev+Xf9fENULP9\r\nbLnggsGShXBbfkOCWywX5FBdNb5o5oTNfQ3SNYIgdZOgIN3UVftJPiTtgsBj\r\nih0ShrGxvPUZuAv9lKcXBhh8yEQaAOqF2NA=\r\n=RscB\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.90390a9_1664897883268_0.37330350075081786"},"_hasShrinkwrap":false},"4.0.5-dev.cf42065":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.cf42065","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.cf42065","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.cf42065","_integrity":"sha512-qspl7CW31qL26nVTQnKFxrhi9O7vZ9yP0yhaIsvW/erl8f87RvPdV+L5tNhptofT9DLjQDSA8udLsTbqu12PJw==","_resolved":"/tmp/cf559fbacb7a9eae28daf6507c709df0/ethereum-waffle-provider-4.0.5-dev.cf42065.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.cf42065.tgz","_nodeVersion":"16.17.1","_npmVersion":"8.15.0","dist":{"integrity":"sha512-qspl7CW31qL26nVTQnKFxrhi9O7vZ9yP0yhaIsvW/erl8f87RvPdV+L5tNhptofT9DLjQDSA8udLsTbqu12PJw==","shasum":"7d139b5924095fdc7827e259d70df0d3817a6a72","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.cf42065.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD876r0ScalpGstCIMYkBMAsqeqRWnoU1Uko/fy2U47XgIhAKfbCR7V7Gvc6dZNoyTx5dNo9lzxIKJHWTzCX7V6CaqF"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjX6beACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq2+w//VhwUvb+3VloyMXI2wbuiwfwanFJaK7+5GDeH1LlO82PgNsON\r\nV1TJXswXr8d9p/HdIPF4Ng7SF5pNTP62WDp+ANZ5/uXCh0h+dmPQm+ug38Xc\r\nvcxrNvdruHQw8y6fmOdDWi1LIhyeNh8IDMsTkMeghp/BzAML2/gpNU0STANT\r\nGR4CIuwvHQKGmE31fj5rCn3H2YA4cxCpWd5mobV4IKe/DW2wisoSWk5D8nX1\r\nzGtnbxtpzgEVtYFFqrLU9KZnpGyZrUs6xy982mhdjAafvljRIN7lTdV/DSFk\r\nKuXHg5+FqQm4Ft4Zfu3yt1/pij/oa+h1AJB3DOG7sWh8sbNe0I2Ut3+l7SZW\r\nSPqvb3R2iT9F9HeDI4eUlrztGREABUEsIT508B06iVBRR3BV4X/02m9u+O5z\r\nuFO8E37z6uG9r/uVwvhoVMgwPIXH8bj8CwtAr2E31UcM2WYrlyx0qqtldMou\r\nkuzAR5VO785sXDaY/fnHZMSXYRzhnzYRS8CnefZl4ODZJgOO1MkCKqq6MZnn\r\nVNkxhbcQkIajhCnrfh5NWuOm4E6+GwDsLZTLQiK2v+QuJNx7h7Vzf6AyI3eA\r\nPWPDA4kGvAyXUgyKk9a43ccE5cT01E+t/kSWVfhZ2zwrEMbN5zAdbckuoUS/\r\notHZQR4uCGipNB7xf0Js6ZND9R1k6jGMVzY=\r\n=L8Oe\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.cf42065_1667213022040_0.8861467954073998"},"_hasShrinkwrap":false},"4.0.5-dev.8671be4":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.8671be4","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.8671be4","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.8671be4","_integrity":"sha512-zOpLnK8XtQ1twsrYmc6HmoEaaAQ3vZSxaSTyq9TVOLlARgyW7Mg3s1nqO7MrBXqgex6vMVYpxkkj9tFbUyuUew==","_resolved":"/tmp/33a8fa7f1e402804b30f6dce0143f441/ethereum-waffle-provider-4.0.5-dev.8671be4.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.8671be4.tgz","_nodeVersion":"16.17.1","_npmVersion":"8.15.0","dist":{"integrity":"sha512-zOpLnK8XtQ1twsrYmc6HmoEaaAQ3vZSxaSTyq9TVOLlARgyW7Mg3s1nqO7MrBXqgex6vMVYpxkkj9tFbUyuUew==","shasum":"0d67e5e0e8660e8befb36faa3901e6b677bc1d84","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.8671be4.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGJS9Hk6Tmd6BLnXPgjKNfX0DBR+7LPMlcSeVdYNDRMKAiEA/ZsZI77cLTPdWIy9XG4ROqVGOjNmwgy2yHLgmzB6O+c="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjX9xnACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqYkg//c9r9AwaAZjuVTyZrfZVWAUYNH0rR83hV0wZ9u44vyiOqpZzQ\r\n/6m8+/ffGvONNmb8DHAHYzWmGaDYVsiHOW2HuJFUGZtodzVTwCs5T+IKBzb8\r\nI1jdtfog2hw+feah4EZKY1ohreUUGJyZTd6h3h28BEw4tTeWlF3nY4ZMLb2u\r\nDIAjDZlGcaJXoknZmkTNNNR9hXV0Tghl9P8O4E8DedSh19usAkWicNRn6fPW\r\nKW4wbf91UYa1kpPT3rmRTcTYIXCAbEQg/Pn2tu2P59sETgTR6oZv+KzgRrXQ\r\n4eNtI6v19+YfS9AE13G4mNioiPo53Jd5vDAS8ww1fH+AnvLCXQt1VwFJTaC9\r\n2G4Jo0MCRHrRqZtQ5GbsPFpQVoUokndDw/igArxofX0u1PwW8xWDMdCYrTHD\r\nxjdOB4hfAN10+OqW7Pc0zs3J9v5Bs5BvoU9fB3DMNbj4w41xtIWTXD2hMeuC\r\nq7nwK5UJ7U0xWoLClQoqzhnSFF8j1IlbyRrCLzMXmRX8uolaHTrBMuc4OeLP\r\nPT0HwVm1Hi0fN6HKV/qY3NtDwaRD8jLM1b7npmA/Xz4vDONaiVfub2jFTXL4\r\n31mRj8DxSDsWNX7rdxB0EHK64w9KXb1vBZR9ZH/9ZS1yXCFjAygs8iRcz48s\r\ny9dxLV/N4p9MW+9omScLc9EbVBvqfs+ce0s=\r\n=3d0K\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.8671be4_1667226727537_0.5429667406348175"},"_hasShrinkwrap":false},"4.0.5-dev.4541f86":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.4541f86","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.4541f86","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.4541f86","_integrity":"sha512-RzXKESs5o9y/3Nvn+eYWGepozWEzGJGkBEQR8ujZT6sNLKPFm4uMd91npgxDSfsXgl5H9vSOKpIHDIv+Ua6F5g==","_resolved":"/tmp/6358a69f965a3bf579866cdbae15aab2/ethereum-waffle-provider-4.0.5-dev.4541f86.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.4541f86.tgz","_nodeVersion":"16.17.1","_npmVersion":"8.15.0","dist":{"integrity":"sha512-RzXKESs5o9y/3Nvn+eYWGepozWEzGJGkBEQR8ujZT6sNLKPFm4uMd91npgxDSfsXgl5H9vSOKpIHDIv+Ua6F5g==","shasum":"f5a114db953387ab3f390a131de2aec3769ee2eb","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.4541f86.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCOw/ajjxys0dtPTuI7VT2Q+qBeYsnVHU69MCbZd3Q46QIhAN3SzdT2tBYWCur5m25DBB5z7CJwvRg8u/bx4UihWZCK"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjX+2VACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoGJxAAh/hpLyj3P76ctEarHQ01K5lj5HIypfcjNJ+bhrGX/oSuUoNs\r\nfEvLWLtLVgAN3x+Xgb6u8B3S67X95pdUjAaQnfQ7WB62FTlRRpC2sRbvptZY\r\nQJu4i7flE3foV+B4TwicUZ6sgGm456tPcPlYBcgR/bEItmUQwIWSc+ErzGwq\r\neSF0IYzcUYfYOE47XwuPggOC7XoTwk5XMGKKS4HcGoRNHUQpFlsorYOASXH+\r\nPZ0Xi4utLjNiej41pF4mHabhdyHTdDrl/nYtkJTamCSmM+xDHVvEzlDzG5Ni\r\nSA1nFoX+iok9fivcZcfXNIvaGdUwZTC3sZcgahwHBZoNu+FBzmr+Uy0MInc0\r\nAStQM+7F58z90BL1uJJX7tGZXfw7EUigftzLbfg8tyKBAfan4orbUnHknGju\r\nBf4XlQ+wkBKBld9zUc6/iBrweoKQLaPNt+tHCBq4jkk25ED3vEwCWE/0UKhK\r\nLmCFVPOA5BksJzkjAU0JkOyqnHq8YiJp7venRL2UCU+3VD1vl4Lvp5PRTH/t\r\ntjtP2QjQv5GOZALEqJNsrvIILv/BsTaqsaf9sICt5nQLHNrvw5uTmgY4ug4/\r\nzEG6r7T49aK0PNkq3swGg8AElevAJz+zj7xRq2Mv034eftcfIW+IaSH6TSoC\r\nPXNvY/FwRJSHGpCnSCdHZSt1cigMdCHVPNU=\r\n=pvAU\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.4541f86_1667231125265_0.6306619361054513"},"_hasShrinkwrap":false},"4.0.5-dev.4946c9b":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.4946c9b","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.4946c9b","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.4946c9b","_integrity":"sha512-cy0Ws0V2Oq0XH5VVbd7CyKXPN6r0M4NNeyHuvoMHrcUjBfd750XkUmG/Le0S+6VGm8L2gcGZLkmGBMloovYHbw==","_resolved":"/tmp/689709b2000e6cf4fc37e3d25d7b2432/ethereum-waffle-provider-4.0.5-dev.4946c9b.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.4946c9b.tgz","_nodeVersion":"16.18.0","_npmVersion":"8.19.2","dist":{"integrity":"sha512-cy0Ws0V2Oq0XH5VVbd7CyKXPN6r0M4NNeyHuvoMHrcUjBfd750XkUmG/Le0S+6VGm8L2gcGZLkmGBMloovYHbw==","shasum":"d34e55108f4412144d9887aed787785517a4efa5","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.4946c9b.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD8VL4s82hla5yk02xcEBwlKvPxabBlGaiypkR976hCCAIgPoN2zwHwR9lUf3+T0Bjbzpc3noPpRJFYi9E/HOYVI/s="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjbRH+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmriYw//UdviT086ENIpsDJpoy/3Q1vWE8VOaCIRYpuy9NY9jwTzPEaI\r\nZPXzHkk3XdsTvxssYoRa76qN7OZzCto4+N8hylqjWuTpFaGYBTRmB3SPUzcr\r\nDOAapV/ePM57MpCb0s6PLE83xE3xEtmS56kkMRJq1AJ2/AV3suqVeaOyRlRq\r\nIfW7OepvcWWTm5d9usWA9qRKAxUotpYdJBTH4oZW+JdEECSSAi5N7poLaxPV\r\n3kN1evSfS8qMzHMjcWlPypt6WcO4YDspg/Sz4R96VLFcK5dUOu54ixEXMZS6\r\n6VykqkoEX8rVcjT+Lb8QdZ3TiPGtr7Sm0NSvAWD8c6GlBSwin2QGEik251hM\r\n45m9cpryhMaoy7f7yRqXc3z9zF5MmXjAJ8Exp23/2jyedN5DH4uAmqX59Ocy\r\n30vJrJ5o15L5J88ZSVfcBmu+XqZunZoe9TWKTLkmHx3E7mixzlgAfhWjpQOP\r\nIZF2Ec/xnN6DI+VFc8yxZrg+tyoKp7pzG//xq/pdP2fINSerBx69BN2U38Uy\r\nQIru0PqBJd8zNbaKyp6dN33pm77ABwH/x/9iymCI4BruCdqQDwvyqA22iuXM\r\nB4r4XPf3pym8CIdcynLqsqP/jUkWkLZCkVSqr/X928Yt9mx72xivYTqXrEm4\r\nBVQ4jf9RLyWBBi65rhgHuc2LuGX1Rvyf+S4=\r\n=Hm22\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.4946c9b_1668092414391_0.5834199844162142"},"_hasShrinkwrap":false},"4.0.5-dev.edcb2d5":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.edcb2d5","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.edcb2d5","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.edcb2d5","_integrity":"sha512-fK7yQXnUyKJdcVYOyasrUn590jctBbnLSFOmqw4beWjERrul0m7ADt5L8e2CQJMR+yt5knp8k10SZ3WFMuuhiA==","_resolved":"/tmp/1b70760f01f4f886444143189c84eb7d/ethereum-waffle-provider-4.0.5-dev.edcb2d5.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.edcb2d5.tgz","_nodeVersion":"16.18.1","_npmVersion":"8.19.2","dist":{"integrity":"sha512-fK7yQXnUyKJdcVYOyasrUn590jctBbnLSFOmqw4beWjERrul0m7ADt5L8e2CQJMR+yt5knp8k10SZ3WFMuuhiA==","shasum":"e0fd678cc9cbb142d3cd7f3a487e58c3a2647e2c","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.edcb2d5.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDhFukANHRj9wnnrf4yRaTgihqG3T1HlmONljW7DsKJ3gIhALWqFXH0cKZdJgB9X6n0mxct0pwjkBd85QqSihX3on5Q"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjhMClACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoyAg//aKx/X+/ht/YrALehHoPZqWfN/k8SHmgNM9mB9R4hu/LYxF9e\r\ndJ004f0JOXt51QoCMIZ4O4kSc0IXPBRnRhPBh8vp2VFnAS/qx9OKjB8zFsEf\r\nXlaPcyyvpkoWAyZwruID04PoLFMaLtWRGZ/xCU5MYsI1AP7jW/QQMqlVVIo3\r\nwl/Una3xb6bKX6VIr1pa9Sth2z4OUrqt/0uA39NU76eDUxAT+uKvKgXP+zkM\r\nisyKJIlsUpWTSvWy2RPayYggcsiQdtE3ShNVTsBliKa6DmuP4Bdl6piHNa/e\r\nIuPPPwxPXLTPT3YhqB4VC105uj0dMbNY64K6nBs8pjOuZhfTV7y78OwsiEcq\r\nFCU8fr4onh8Xul4Da6NiCYiJXWQQGSi2biqYDY7/oQyWufRlwWr/FTKWSRTw\r\nE4o9A8ugoW0Ce9GqE8EyZiGpN7Ka4T0DmDJuBZzZwTHNp1kcCq3GhGAiZIYc\r\nLNJsJrXTMner3jsuOaE3shOEAYdFPv2CMEAkMDK94Wsp12sOybABfw389kV7\r\nYADJMbrwMdOCTgpnpltO/hGNMXfLX6K4xlzClpVcOC9OJg7f8/DSsS90mjLX\r\nlQAKBH7GVmoCWnjQidzyQSKyvxIsgcc1Jf3yAQ2TBBzPKKKOS4ZocgOw0EF7\r\nQXyhLa65kOm/rWLbDbR0umar+xsjZskZGZI=\r\n=z2D1\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.edcb2d5_1669644452833_0.23022325929221887"},"_hasShrinkwrap":false},"4.0.5-dev.4557ff9":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.4557ff9","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.4557ff9","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.4557ff9","_integrity":"sha512-5vjXJhNO3LXd8sAs8X/ETL7p5X6o3D/ebXSuFLUH1jR3AKlHLzQdC0mFWfW4EdEyPo2KMJEPzfinT0VE2ZXwTg==","_resolved":"/tmp/9b456367061909b2643914bbd25ba947/ethereum-waffle-provider-4.0.5-dev.4557ff9.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.4557ff9.tgz","_nodeVersion":"16.18.1","_npmVersion":"8.19.2","dist":{"integrity":"sha512-5vjXJhNO3LXd8sAs8X/ETL7p5X6o3D/ebXSuFLUH1jR3AKlHLzQdC0mFWfW4EdEyPo2KMJEPzfinT0VE2ZXwTg==","shasum":"6ac74d5c99c8c51a6b79cbe9e8320f878d3faa5f","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.4557ff9.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAtpud0ICit5BGuy9uJ0MIKnW8Vuiw21D+liStrfLt7/AiEAu8g9o+BVjzK0Uoo06gNr1KrLyf3OW2kyLAScGmYS0cc="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjtE8VACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmoi7g//WGWKoLax2PPplc3aaI6EMIBv6KrfrTfcuV49mkA75u2scyBF\r\nPdjxo2AzEVMRsaNyXJFxpqA9iCtdc6qjFHnrS/FBnuVGjI6fcM6/TAASkN4J\r\n8/s+wq6PERNOslaAPBTKIV9V8LQrAG+h2eRjjTsxVq0LlJced0ejvf9ZXigo\r\n7VdK04XhIlks5r8xmF2+mjMUTYD9M8S71DLxzFxaWnQoMovlkCwC/6F/sejV\r\n5L6QscrnlibQ8/ek03LIL4zrS5l4CCYGqORnc0xhRf0jq5RXkygLUpD++drW\r\n0bI0nxk70j+k7WV3mV+zk9+y04fPXHbykDfYs3nDmRiO2bSYMBwB4blV1+Qz\r\n83bkl9WIFz21eif6JsdYSTrp35YjWE66ZeHo8QFgHU0yAeHzlPHEozJ8jheR\r\nA4JHSFFzkYmn87ebqUgHFPogHnHR2yU4N/y6wVKERyWUNGS0nnGwNWjhllAV\r\n218dXJeyIu7ntTBfzrvWPL845CSweM+qy5L3e9ZbbETTHwlQ5Fc/tO9s3aUF\r\nCxuqNI214c1hPdE5AV09EMoobhAnOf1IiuDV+GQnwK9ykT7816wT7L2mYK9f\r\nsoGVCYI1LrHVaFqLK9I8R/ZJBn/2FM/JyBca0t00rN16QPhEz9i5LJ2xGy3Q\r\ntpxL8/C17vj04XWqkf4E+VqhkE5fLLEqi9A=\r\n=UUOc\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.4557ff9_1672761109168_0.039452943770824866"},"_hasShrinkwrap":false},"4.0.5-dev.d4cc0eb":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.d4cc0eb","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.d4cc0eb","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.d4cc0eb","_integrity":"sha512-6agIiyOKn1oXFdGDq4uba/OAL3+7fGgMtOewnON+OaTqpLAxjFPWuC/Nc01X7tH3YIcyUFC1N2mAScgYHNWHYA==","_resolved":"/tmp/07517a8552c6ddea21cdfa8fad75eb73/ethereum-waffle-provider-4.0.5-dev.d4cc0eb.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.d4cc0eb.tgz","_nodeVersion":"16.18.1","_npmVersion":"8.19.2","dist":{"integrity":"sha512-6agIiyOKn1oXFdGDq4uba/OAL3+7fGgMtOewnON+OaTqpLAxjFPWuC/Nc01X7tH3YIcyUFC1N2mAScgYHNWHYA==","shasum":"bef179ed0563cb141b9ead3b7ecc16942c158b8f","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.d4cc0eb.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIE577RGjj6RlzrCPB09HGU2wfAlUEHXk//9l95P/zyDlAiEA1kj5U9cbzKJWAffzWksLHGjzSjT5vQKzdfHNSesSbEQ="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjvV26ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqAYxAAhCOH/ktMIgzokZE7SBWEBi2fabOLckW5J9w8zOR0RlqEQtKu\r\nRsb8wii95KRCezm+JmJrYMzWaG0mXZBJcGOENXfURmOnd76cXb4gDwZi5Vec\r\nuJdMN0af2v+L41pB13q98C8CZuTdwE8P2O/YdgAcDuzH2QK70/SESc9OYyHz\r\nYBYOVSg4uJuX6W8VDr2bc1hDPlyODDak20n326AehrjpNw3/iYd159rLdhpB\r\nXRzXvndVSE+EQa7xAQxVAF+YYomUza7N0nZfJ2tsFPyI5Xfjto1+uSHqGYNe\r\nIaXVUf9nZ8De8yz6AxRra7oZ/Ub/xHDzhUUHzDlL4LfUvAgw/XrXcJy2xdUT\r\nRcWBkgry8pmq3O4uI8QdOuKsgb3xjlTWGARndRBxpehZUm8rNvch4v7VhM4m\r\nwkimhH6+6Xee9bE3OjO1Q4gAiSigoh7J6IyXpVwp9zFrAVDeHS5nL+xgUQPg\r\neKU3bm9Uu77hOGOYpa0LX/GWvP/ZkbQoEA6zVeu/R4jRRygFcxDyOwKUtaWt\r\nvlOmakNoE+O5biHMPXB7ca9peaTWEDZSk3JmK37cOHJQQlflIcriOwVFrSg6\r\npyz78KD/YKPqCjAbI+pKjaG1GuEdPKggnzrW7wSwhgf+XqgbKnylYgMwOgqW\r\nKDmTZck37ktKMBidE86PJIjG80p8a5cMeag=\r\n=2toX\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.d4cc0eb_1673354682542_0.46805592921672745"},"_hasShrinkwrap":false},"4.0.5-dev.e1d3ccd":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.e1d3ccd","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.e1d3ccd","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.e1d3ccd","_integrity":"sha512-v/9OulWLuMfEKbP1VUHCv/BLLQAAcvm0rAQssmtuuOyNSsRqM4y6U9TfRhxr9m/x2pms4yuVsvkbs2I6k6a8sA==","_resolved":"/tmp/608def4fb4c3cf275f98dd0a922014ab/ethereum-waffle-provider-4.0.5-dev.e1d3ccd.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.e1d3ccd.tgz","_nodeVersion":"16.18.1","_npmVersion":"8.19.2","dist":{"integrity":"sha512-v/9OulWLuMfEKbP1VUHCv/BLLQAAcvm0rAQssmtuuOyNSsRqM4y6U9TfRhxr9m/x2pms4yuVsvkbs2I6k6a8sA==","shasum":"9c65a30d75ffefdad807f57db27ded4cea3f91da","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.e1d3ccd.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGXNOBaJZDWEUkW5rk7ifFiWUK/l7ZBL2XfkPTK6srPbAiAnG1ir3T5R62p6wMtl52ThkiQwBDl2b3KCmcIviMUMfA=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjvp9uACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoqEg//ffbcjlhEXb6hhB/9UEkKpFCm2ls24ntKis52JmF7yijcGNom\r\nYcRO7m8Np3ikGCzwh6pWTbqpXWf2LSQEXMw8P4VYIBBJqGb8Cw2WD1FD05Yf\r\nNx+JpgGw8e46w8snxRnpRiDU69eDRb47y73zNqNZQTAZ1thu0l9tJZnaNPIi\r\n94XxycL7TSqzXsFGjKjKQLMe6hOJ78MEtaTG83E9MEU1cv11dJRQ3X9ECY7x\r\n390j7BwKp9oT9XkgkHlAAI90BWWfVAYnBtrnjrzy33A24Tv1thstvHvszUnx\r\nm3+IXKp36QYGV5LSuBZMRFS1i0/5o1WY99h4kCq0pd4YDYh4kK7FXbEscHC0\r\nPl7pSGhjYkOe2FLOhRaz91XVEPjzOVXaG0AhadQPs6LWPNiROMIkAR/WcQlY\r\nMZhfM5w2ISJFO3LotHe+CGDTzzdIevQOlCzI9x03m9tiHA0P/PwNvtH5r/7s\r\ndjaTUfVPx9jkZVLTOC1aq89BUMfRfu+zKbxNDYEyUsZ6RdRkF3+0iJX5YYoz\r\ndD4PXhvHq/dZ5eSpnaEUXzk1tjN+529se+26nGQp+9+lylwezkbei5vNopya\r\nt+uQ0kmcKgkx4KwlBBZwShwyJMcTjVgwbKXDVLiSe3RPa7V70J4plK8vnUPF\r\n09y5buooJlK0ACdDiItCAJtFNkyV4O3JGPA=\r\n=2Q9Y\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.e1d3ccd_1673437038495_0.3924773354482862"},"_hasShrinkwrap":false},"4.0.5-dev.4d27a34":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.4d27a34","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.4d27a34","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.4d27a34","_integrity":"sha512-/jt55gCya+jIhfuAzqjXyZ3axGM6nwZ1S2EXgpA8Rpy6PHhDXZxbHtG+G2T9EbZjDivzYjNCEPxYQJhlv4M9/g==","_resolved":"/tmp/c27dae1f762702751508b798a691d74e/ethereum-waffle-provider-4.0.5-dev.4d27a34.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.4d27a34.tgz","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-/jt55gCya+jIhfuAzqjXyZ3axGM6nwZ1S2EXgpA8Rpy6PHhDXZxbHtG+G2T9EbZjDivzYjNCEPxYQJhlv4M9/g==","shasum":"9c9eb550e04077d266e245953f48469ef39a55e3","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.4d27a34.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAH1YO09BWFGP1ey81rV/BdSqHJfB7KF3K/vtGJ+nGptAiEAgcdfrzsEwGHzQmxYZNz7NOVk+PzVfj7ylMdEOZfJX/Q="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjzqcBACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpoxBAAg8mcTEZ+u1O0kGAuTXf53zY2l0D61eej55RmDeqlmZMAVNRo\r\nN1g9Vnumae47SaPZo36l3G4skKn+3grut2zp+sPxvW1IxqPZQO9UuWoNFJAE\r\nlexNOx+rJYIOTBjcCw/VAQ5N2X4Rm99Fq4R4z8xVBZDzqk9egt0uKh6TFVkE\r\nFN3xN9lEZ5qzM+sllDuXNAy/eMyF3MVTJ7IeKyS0qyYGOEH05txbS4j9wQiK\r\nAq7pyshulBfh/uXmJB41LEVq8z0lgQ6EaDDmnNoidCdgJdmlWlmE0nKoqquc\r\nwr4QQDzTwmUi/+ltsUby6F4sAXO+gE+hDq/t0FiEUbRGFXV6GMUB0fcgzJOw\r\nnegO05x+hxrznqIX+pDVmReS8Jc7O4ZjxdGocc0p2UowblpOzmXRYZTiaQYi\r\npvouhIelXzK40QilJ5YsVhVoc7hBSPXEhUPyu0/iaB99+QOICYODSwuXwwLt\r\n4gx7NPJcWXKtWeOIqEE/G+MV9tgoUgAZD007fgMGOxlx5lzHp1/GO3TvszmF\r\nPq+GhmaVAfH2JZXumnumijmGWzKgGS28GB/04UY0NoVoHP/NdjBimqXPvr7X\r\nSx5W7puQAmuLaBqwVpccTWvLBsVj7Be0Lr4PemEnmF7DycCqOBJCeFNOpFdH\r\njQHMWao5dzOy6tn+xR64PphOsx7r/k9fvtw=\r\n=MZ+d\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.4d27a34_1674487552778_0.9029261253957124"},"_hasShrinkwrap":false},"4.0.5-dev.a50814e":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.a50814e","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.a50814e","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.a50814e","_integrity":"sha512-eos+kPZWVTtDa7seTVUd3QPyNKdTs5xEnTWYMBExEUyHOHfQhyI2UL48A3VFaPktEdPDmDeUOqJquRqCYg9Jgg==","_resolved":"/tmp/ffcbc9e211015cee61d7694557b0129f/ethereum-waffle-provider-4.0.5-dev.a50814e.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.a50814e.tgz","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-eos+kPZWVTtDa7seTVUd3QPyNKdTs5xEnTWYMBExEUyHOHfQhyI2UL48A3VFaPktEdPDmDeUOqJquRqCYg9Jgg==","shasum":"0d69a553c0a30bacb8c9209882e93e50e436a942","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.a50814e.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDgNq5XdHm7Qq0FdGZcycpOSPcy28gzW9TLmdFlbGSqfAIgZO+NwsyCtNZkRuW30fU0+E4SnMm/har+gK+GT6pi15g="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjz/o4ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq+Qg//Vyw597WJkkqMhsaHwJ24hE01AoDAxfuoMHgfpI3wBUMYV9te\r\nDbPxMqighEFgWHr5zUca1rjqlJCNh2he4URl+5L9PuKPZUHsZx0lhdBRzfk+\r\nq+yvsvsJmNZJQEjrxa3vgWfiHa5AVZmLYLQVjFiUbYyk82dlS/UN3EdcY46y\r\nxLs0V8RTCC3jOgNH1oANez9LmksmIyA0Q/0Tvqgx5hc1IAKe/VEqZO+bGaIG\r\nDg7tYhM/f7Q/BBBfHhtjK8kJU7iiFR7QrFun18SIbnO/+8HDGit8Gp6XJ6+c\r\nSjrBKGU/l97UFY5uAibRNrVlG+llJgL2hm7zo6H7DwxmNxyvJYwdS031lfNq\r\nojFot4wWFriNJa/mEvS+XgCpJmBa/OI8ay1BGYcCBb+qErkuwNyx3jVqVvZp\r\nrELnoQVNQeHttxCjXTzdv5kDuQ1JmPkYIJI6V+qnX/BkjaazqS3QjxX3xqYS\r\nLBL53EhxTWnCMRuozLg9C9KcvsXoE87Zvzd/kCfhGiCddNIIYu4w2MLNSOFi\r\nXnX/2wWjBsUcizhm94x7buJPfEwCTllp3QJ2/c92Au6Tbj5e2uaQkxG492Sm\r\n8LKuKYkuelroa3ObmMfywh0HPxSdVgLoOQYWR2nkwGQKtRvu90PoItGgZdTZ\r\nkNH7ADMjJuIxJT5bx7gUUWBJNQQ3xlvalrU=\r\n=gCW6\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.a50814e_1674574392703_0.6726209565492431"},"_hasShrinkwrap":false},"4.0.5-dev.166b72c":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.166b72c","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.166b72c","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.166b72c","_integrity":"sha512-ngrgJknsWfFq6ILtWlFoSXgY/G+mibJk5mi/QyCLMHPEGNP4v4dFD3/pOzkrpQsVN3Cpg2BA18TnPgTG5hjlPg==","_resolved":"/tmp/99bdf2b09c250b6d90671535c5977b1d/ethereum-waffle-provider-4.0.5-dev.166b72c.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.166b72c.tgz","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-ngrgJknsWfFq6ILtWlFoSXgY/G+mibJk5mi/QyCLMHPEGNP4v4dFD3/pOzkrpQsVN3Cpg2BA18TnPgTG5hjlPg==","shasum":"f0d126098e9b3a3a934cfd9ad3f5fd8c14af80e1","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.166b72c.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFndTTrVCw/knm0x5gbCDielSXL5GsWoIjlAWdcCozFDAiB2eOdJpmwcqCjwN2u9+4rsyd/956ikaHFQ8pUFrYjMEw=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj0l3+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpjIw//SjIlNH2KpPC9oNWXlEbvDc/1bvSqpT603xnJDWZH1APz0khx\r\ndxXBd7e09CkY/MfVkzrInLJ+m+T51Fql1RBrlGzQNpugped86+dPbi22FIVA\r\nRNpwWrKn/8zkrS3eE5toqRYKDN4QF6MPay8xWIByRA6VTF9255hgkwRibOjw\r\nJzhuxT6ST6KVCD6wWlp9bZgx4LwhwjL7JruYKjPKHjlu6W74RDPU3oxMQ939\r\nSPQkmo6OA1jc93Y9t786rxaD67P3LbNYlWVvqeLht3kmpv2IGmlFvK49pMxw\r\nJfL1clIWa+4bNjbKy2Idhe6xa2tI6dsKSTZs5DzmXZLbjJA+Hh+Gcy7+z4Xz\r\nbjKFQuAgiOpCOogjn5l4lK996dKvx5l97R0dh0QRme/QZ98CmyQL2XmjHoxZ\r\npS8YgI1JKJDOy9Zxt6yhuDcsZQ1MFUz1xtEzZfzPUZgR6VQKFs/mQz7TBlAo\r\nchcwGTVR1Pk0ADFx1WaC0huupuVOzt5mWnq2DbT4Oqs6nF6b5CMMDfm875Wz\r\nW/ztJqx85jiR/78DSXXwRWZVv3MaAHRTlr9x+iH2BpFKt/Zb0sKj1hkKxUhN\r\nozEGrwLVUbJw4HVvLV1+55D9ZhuxcD4elbTYa4HXyNwiAe/fDmBHpIGtEzMv\r\nYDgR/amVuKf/LCWplcazEX9P+kqgtP1GhK4=\r\n=a7Cr\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.166b72c_1674731005911_0.8467320427117309"},"_hasShrinkwrap":false},"4.0.5-dev.0bc9af4":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.0bc9af4","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.0bc9af4","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.0bc9af4","_integrity":"sha512-Y/FTy5ZHFDKJ32hCVvmrbHCHqhw8We/rxKEYBVziT6ADjv/9nXNm92KtXJajJ25zkraThMybU/l0euxTCYdWRg==","_resolved":"/tmp/b836d01ba610cd8049a844864cd32a93/ethereum-waffle-provider-4.0.5-dev.0bc9af4.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.0bc9af4.tgz","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-Y/FTy5ZHFDKJ32hCVvmrbHCHqhw8We/rxKEYBVziT6ADjv/9nXNm92KtXJajJ25zkraThMybU/l0euxTCYdWRg==","shasum":"ee7898aac526b2b25f6114c7d5ff3731bdfba51e","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.0bc9af4.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHZtVvll8Hi3yfEHBENs1EUl9VWw1CSTcbR6hLSxKUvQAiBM2Ciyf3W+NYFUDRDRKUOpFj2neCGuamasObhinuUQHg=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj0nnAACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpHow/+LJaFYCkC0pgPK63U3QJ2coogi99lw4+PGxztGjeCbg0JZyO/\r\nj6SetHkX/B+fZNRQfjTawDt/evvCY9oVDAN8mjy9/QyIjiOvIsUil2RHoJPy\r\noA2VhSug2kDNF9QiDTYo6Wkc+Vk6llhAT26VXiqQY1qFmECDfp+yYziYKSlY\r\nCki/jUzALf82SQ525+ldUU7KJ+lPgZH7+EBXz4/G1UK2IkvfrOxamUOnH/R8\r\nTrHKwHxQqhXwyWeonVhrhQDnnZ3nzQw2s0IuaLcdD6g16hqMgUTeLPHYxqUU\r\nQbokQcPXUsiNSNEqJ6GJ4vnxxgN4CHuGGmx3fGiI2Zm52QPRLPiTV0E+Hk6w\r\njGNZq85p8qDNtgWqr7JgvYoT8Sk6RXbF7AG4XqjW26YZFZ5ZT7vIs+OjCrUC\r\n/Znc1m4XlMrzM9CQUFWM8D7VO5jatVcfR+cAgZhJu+rKe5tolgpcSoUzRWf7\r\nGyjkDFbhNJkA4xUQ0uT/wuRS3uP7Rlyk73mqgFuwS5uYjIwvGVe88wZw0Lf8\r\nsjbnZRGYnifcv0lc1NWNoa8MN7Zsad04qdg9R990SggpX51UKvIyRLc6bm+k\r\n4hw2ILZ5RLavNXX/xAOlKcbcy+L6ZoAeR9ymDtNIlcXiw6JUmYIMk3PgVZHk\r\nVQ4+gbMM0HAL2NG5NZRGGDpacqNi8k4Z/Es=\r\n=UrWJ\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.0bc9af4_1674738112182_0.38094679438916423"},"_hasShrinkwrap":false},"4.0.5":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"_id":"@ethereum-waffle/provider@4.0.5","_integrity":"sha512-40uzfyzcrPh+Gbdzv89JJTMBlZwzya1YLDyim8mVbEqYLP5VRYWoGp0JMyaizgV3hMoUFRqJKVmIUw4v7r3hYw==","_resolved":"/tmp/b567539a6d7fc3264f9599f8b18a4b99/ethereum-waffle-provider-4.0.5.tgz","_from":"file:ethereum-waffle-provider-4.0.5.tgz","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-40uzfyzcrPh+Gbdzv89JJTMBlZwzya1YLDyim8mVbEqYLP5VRYWoGp0JMyaizgV3hMoUFRqJKVmIUw4v7r3hYw==","shasum":"8a65dbf0263f4162c9209608205dee1c960e716b","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5.tgz","fileCount":77,"unpackedSize":251152,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCA92QuRs3ly5U3GgNSD3JOJ2su5VJothI1T7dxd+HxvgIhAP8a1qaeXeXzgRwJsqPs3ZxMcU1uEf4AGooILnuqaxE8"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj0oLNACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpb5A/8D5WBkxXv7ojQeako0Y1W3PKp7njRIusvQgc6vFC2NGrJVAto\r\nD3HGIwl18+LKiK/yN/AtfN6rC4QjpSl/vPuEzxprRgoB56QiCAoM7Ctbm5LW\r\nsBEazXBHcRpEbcN3mCIbztmJWZHZwja6fXGwAwEDjJ4eJIMfDSmlP+5Kbdts\r\n1+dzcOOfab10arYYt/I7tWbNtCrtn2OBe2GbePVbCpkl1HWNR4MMOofCWoe+\r\nd/sOhy8mMCj6GJJgxghgUSdZiSL7V9sQDgSJArCsD9V2YzVqJulfbBICyBXl\r\npeiaEI1FJxBnDmRxj86RzDCV8LftqJ4ahkjdIwKJyprU5LJ6QxXDnoxYvtxR\r\nHQvVVIAg7IRpt5+CAzCKGRBkP3vS2+fssC9nOCz5T/JP6BdaIFVAYBU5uCag\r\n3gbOo9nZWK8IdGFviCGTECtvHyD1qihpxb98b13LYHBReJLBoXZQ674vr+OQ\r\n2Zg4NBnuCLjU+Jjaq+0yhki6KYqIiKxa2fN/IvyrRrrcQ8RxpWbE2NgCKxX/\r\n10O1g9fmN+eVYkp2buYVKhclV4fkMtBdDrMiHoh5mzzV2NhfnZhcdfqHMWzn\r\n8M9XRgwnq5ECFrt7rs4x0oanrpdxymKqyO1PiJ6ky3T/ZPECxXCFgqcXhCZe\r\nCapdGdJvSUafRxAgK+HSW3vZcXZj2pWTLaY=\r\n=Xuwy\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5_1674740428993_0.07762006603572758"},"_hasShrinkwrap":false},"4.0.5-dev.13d1af0":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.13d1af0","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.13d1af0","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.13d1af0","_integrity":"sha512-2+a/6H1zsonj9Nq/E65nHkivvbUNLlL9AohRQQ6VNjmmAVz15wkMYik3RrqchvBC9mt6nCD7Z94RyRUnD4SqEw==","_resolved":"/tmp/18151d4a657a0fe7781d5621a9131c0a/ethereum-waffle-provider-4.0.5-dev.13d1af0.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.13d1af0.tgz","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-2+a/6H1zsonj9Nq/E65nHkivvbUNLlL9AohRQQ6VNjmmAVz15wkMYik3RrqchvBC9mt6nCD7Z94RyRUnD4SqEw==","shasum":"99c9e3d1029ef92bd9e00fb7d17a1de08a3b9b0c","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.13d1af0.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCD5TnVNs/v4an73iaHZO8/uq2ub3JwLnbc0JmmTm8qXAIgc5zsHRsEf8Z2ctuYmKoVpA09TJ0L1EV/3AdACoGTK9M="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj0oO0ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr84A/8C2Z+5p9jRGnaVSBIdy1xd6kZt4v+wi9rmi0xpSZEtzGG9IsO\r\np+Mj2ILElsXSGvyl6A8f+pm8+2qZF6uwkIGj4qYgOs67BFGKVAZc5o0sxhxf\r\nA40sdGC57xIx0l/xqDT2bQ4/EQ5IUN38vDS3xlFBa/xPW2xbqyXMy0eQwHXq\r\ne//v+KAqrpXqFukie3AHuJkFhYZq1FRNW7BDTHkILvA7vCThSRQ2ACBQlnug\r\nnbi+YvJwRKqxIpQR298JTDs10ZEQPo27y2kkkuRNCW1InF//5SX3X6CDaFZT\r\nS0fuu81JEAEQNzgvle8MSKzD7yzD7T6geOl7QFUN28Lr2aFZ6nJltn7evRwU\r\n3W5xeW+loM6QZTbZhbtHFvs2ZylPhkj4B/PkWSpOK3YzWpp15IE/Dtlsdn2Q\r\nznXzrRYPiMfpkCpT/kRxaBHfVZsa3B08qL4NmHbKdU6acEmKy8BmNFHy4EfZ\r\nlRkxO2j0MurolQuq5ZdhnIaNob7WJY8YbweCjHm7AnuvAybFs2AWQ00nS9sm\r\n3Xy1rOkC1tEC6wy/E9RKT8dxyyAGDJF2p9Yh4XB/nh0FA8YEpr1+hE5WDdjF\r\nfBVW+XOzm88iGfyuKLI620xY9tpHXXt/X3rT21BjvYGOYvjRE3U+F/VIYSbt\r\nCKkuPyg7b3sIcU2YXqM6gchITIlJaBwKOak=\r\n=6AwG\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.13d1af0_1674740660462_0.46103272360768455"},"_hasShrinkwrap":false},"4.0.5-dev.f8ca718":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.f8ca718","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.f8ca718","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.f8ca718","_integrity":"sha512-zRWaooHETMt7uZFipndzxjWm6JXue90hCGE2Dmd8zdD7cPfUqng87/ONwgkYaMDqoF06snVtHmnl4TTFClbCaw==","_resolved":"/tmp/6eb4880a9496ac30e83518fd259ea90f/ethereum-waffle-provider-4.0.5-dev.f8ca718.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.f8ca718.tgz","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-zRWaooHETMt7uZFipndzxjWm6JXue90hCGE2Dmd8zdD7cPfUqng87/ONwgkYaMDqoF06snVtHmnl4TTFClbCaw==","shasum":"fe340326dabed2a3320833249a2dc97b4c6fd3af","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.f8ca718.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGkPrCDLKDjDY5fOT9SFZwOUvHWLmf4quJfZAYEsLamPAiEAu4phd71X9iL7T9e4tI0NpIopoibLjx1FjY13e4FQxb8="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj0sNtACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmovHQ/8D/tWw4uUnHGgyuf7p8fYWAIUxwabWVOerm46WjpxnEIpcskp\r\n5dRUwHbWALZ6v5kaha96nhyVp/rQetctSy3sd9kni8Xg8h0n8O6xi/DoNmTW\r\nfDLGwNCulHFLNL+zbfE0ZDd/HiJ7P51wdPOFUSPdi1Xy6afD6kduizxId0xM\r\nzndai+G0+NOeoGeykIIH0Q5gOK7MiQU8BZhq0hmSVupl0TD6d+C19MePy/Us\r\n8xZfPIlBl3FiZQJuQ75eH11THfDnp2AO++SfB2pePI5+EGRq3IHpRBzDwVU1\r\nhEDcTyoBI0nGTSCHDutu+fpZHogfYcFQcXwwKoOm130e6z2OiJcKHCy1kOOk\r\nkBloTSdImfN6g+beCivjgDEIAe3zZrhbLyPj6evEa5OlG6A1Tc3csmy//ttH\r\nfhHd2Mg/xsC99kYFi9hLQgHhv2Q6ygxB+c7K0blNaK0rniW8mKRami1suOWb\r\nfr0lgWKqKxAQh8jPfoDuCicQDCdaXdSWvq/bbKNKu8VT4s3jfJYe0/db6f+k\r\nUKtGevSszqsSgU1E3NaxZcf6j0k0VD0DpYGGU3vD4byZLmJeV3NhtrqeSg17\r\nqVYuE5xxmc+ttptz2h8UfXpxjg5v1j2UhQDUXRX76EY+G9tPjCenF1MAcVid\r\nFmTEOVWkihnFFBEPIKimfvDAPm/1KAAg4vk=\r\n=t3JQ\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.f8ca718_1674756973017_0.6148198887197629"},"_hasShrinkwrap":false},"4.0.5-dev.a1d89d0":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.a1d89d0","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.a1d89d0","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.a1d89d0","_integrity":"sha512-ginYekTQ4yHHvFeP1FRluk2PCHal/YvQkDizDWCWpYhNRJr+OTEhy0Mak4zVyWBxbGXT//KOPqLWp1+QUflV/g==","_resolved":"/tmp/be98c65cda617b61694210f5a4defaef/ethereum-waffle-provider-4.0.5-dev.a1d89d0.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.a1d89d0.tgz","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-ginYekTQ4yHHvFeP1FRluk2PCHal/YvQkDizDWCWpYhNRJr+OTEhy0Mak4zVyWBxbGXT//KOPqLWp1+QUflV/g==","shasum":"d835e53e9d14fd48e1f9b795d1e018dc2415106e","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.a1d89d0.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEvNpFuDOTF4ttBj21mFohOrgu95k1er2glHW5SFgx3ZAiBoRWUBvkMwuDVifrPDCl+P6v6ebZYvjq9SYIvcgSAp8A=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj09MoACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqzzg//YTOP1totbY+8U4dXavOQmPPv7CdEnzg4AvBN6VPnhZfsAXX1\r\nkrQqPd8BmHOkVgR8Dpf2VadzoWlve+cyiOa55MWuj+7oIvfBosX1g9W1eEi5\r\n8ue5NroMrcP5ytMEtUoiz4k595o8lULb81WY/X4/wW3eScwLfAkWwl3+TXCT\r\nQVbh/FY1FElCC3o5QybIbyHpeg9yyQ9OmcezGhdkG0GS08lgP/mcw/MB/ftp\r\ngiZTjrJsiJeZco2zkF85GzQvnTZhMglws4T3pm48BsYU8is9ZadaE9vFltix\r\nKVFEQCmeNrs8qufs5dL1uWGCkDzqvWR1fwGgjsI8mqo2u5evLbRhCrDk/PQV\r\n8JnWDRmS22ZRZVafNZnjYrFZ1CXpafOIuwqSYg0zhCdELuc/A21sCzJ+01yJ\r\nfyKzGyLDG9jDvAGeqBqwrpaX1ukNMBRCRTP4BrvMsB3ksN3PFgbRe9pJOEz6\r\nT4Azhq8XUNnldLjUaaA152LAYuNT5Z9W6lFKvZl22NWvP4eljju2vJlo8jBw\r\nQFuIttf0IxijkewAmDbhRVO4NbrcLiGwQBhVqfw3sM/jbZtqdbNHLqoMZUUQ\r\nn1J/wLTnM6vskxz+qFV2iQ6HHGxM1hQxcwIxfaqxStB1X86SAyuvwWAoL77G\r\nJAA9+8Bx/QxiAhCjnxh1rSOI+auPu9lMFHw=\r\n=0jAA\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.a1d89d0_1674826536267_0.8136923749198486"},"_hasShrinkwrap":false},"4.0.5-dev.4740ec6":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.4740ec6","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.4740ec6","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.4740ec6","_integrity":"sha512-d5A5otENmq3Ti6onYwgWy/wjvKZE8ISLJxGKsCASHPju8r0K3zJaKP7WCgY5nqFFiiZV2GEQ+r65wadtkuLDow==","_resolved":"/tmp/940397739e47e1f90efa6d2d3547bb85/ethereum-waffle-provider-4.0.5-dev.4740ec6.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.4740ec6.tgz","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-d5A5otENmq3Ti6onYwgWy/wjvKZE8ISLJxGKsCASHPju8r0K3zJaKP7WCgY5nqFFiiZV2GEQ+r65wadtkuLDow==","shasum":"f0555fb0a6488cab60b17b5b990b41241e0e5278","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.4740ec6.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDEnccCs3/0745LNaY87LXY3r4SZ5wS4og55q+7NnnJNgIhAL6B2QFNSG1GzdY0ep62HWxKG3lR+5AYAhCNfB0k2MBu"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj4OcCACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoYPQ/+OWKKdeqA3ELPNb+UFHhpUBW81OY0ivtiFwycbpGj0M8VS3TX\r\nK24oDD2rKtZoCCEhgHdsMOTYKVYH3e6Y2XoV5JxlgD+5YIykGwEymgFnvy0V\r\nObjwUKpgofMcwLrEK1zpBqJ8KoDq2LCfm2mfImKNd34+DDjtHWAcn+TYYQ8r\r\n1mITDisuv/td7oi4sU2F6uq4fXnazJ1d5L7KtiH4cLAzcoKN74pMP/Rv/jal\r\nPVZO3D/KWyHUczukfj5k2raa1aSTTTR3aKojf3xPSLvw2jalFzwkRuhKOxrF\r\nHmVDESsxb4iqbfsTUKUwGUaN5/SnyG1td6LHyBPOo1bYY2RfPLBwn8vHODb8\r\nA9ewC8o8/Sg4uD8qK9VFquwykCmgCGG/6U9uvymng8VmnX3szY2l2ICUSS2l\r\nUYD+cPiWn6fBu6QCCbo49JdqgLNnWvH+nrPzIR7RIUY9bbfBW4bu2DNLeL4X\r\nhjEXDOpKG200EEz4zw7HaSCowX+IVrqwZfYgB1u8FQrnSBr46fH61U42mBYs\r\nq9UFjuxnRlqJmrs6X56gzJqY3oAyPJLDxNl4M//Uf+yL7pPPGyO59iYX5uiz\r\n814gzCVT/haas5bDN7w1FBW5389pFXaf6G7aeK/qUXPEV6iDLxyG2Razv0uj\r\n1LCsLP2zK5lgJESnmCELKjMHdSwCK/TQyDk=\r\n=sWgj\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.4740ec6_1675683586490_0.3437868901074659"},"_hasShrinkwrap":false},"4.0.5-dev.0915e72":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.0915e72","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.0915e72","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.0915e72","_integrity":"sha512-tt5MfKbrm8BIckZ+z7mGfUSYWxx77eQ78JC0hOhnqFqTBC7rycmHWb36hiC+BH6L3GDs3WeEg66KlqHSKfbE6Q==","_resolved":"/tmp/76e150a05c59041a72c3d8b21131d872/ethereum-waffle-provider-4.0.5-dev.0915e72.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.0915e72.tgz","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-tt5MfKbrm8BIckZ+z7mGfUSYWxx77eQ78JC0hOhnqFqTBC7rycmHWb36hiC+BH6L3GDs3WeEg66KlqHSKfbE6Q==","shasum":"dbcc631d2c6a12035aa25467906a33f6a8df11e0","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.0915e72.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDtrfnSDLxPS3yBAMPWGDv6u1chNars5Ni25ElnCyJ8lwIgNhu6JwA2/iM2Z2NbxYpqgNZQz7qoTYowBhdFyMQu09U="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj7QsbACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrYFRAAjmI80Ix8uu+uLMNoNrPEsDlP5Jjr54j9xn55TCj8pvO350O5\r\ngyJrvGwWkiu1JykMNadnDJ2dK++NTWt+4wTf8lrSr1eZjAqmRhe3aliTbicD\r\nx2xHEZJBAXpBrnjHVBEQz4/rB72d6OMouQ0xoIZHAbt6wolpsCyZE5/sQsZN\r\nocRqym9wrvGdc5T790ekn1s5H43mCXpmdl49fVrz4f75lH4V8IRcxTlGvI13\r\nP/SgC1GGDnwvhx27twtlGPhkxQe8HYySuKnWIHw/xwGVi4XomeCu+XjObKh3\r\nwybEo9puV0J9VeJIXzj/TkzpLWA1/gartTPMdKOuwtH5KXzU1DzsQQmlhi1l\r\nnUt9g18dCuHrS6JWnCoA6tH2Q5vrZpRB5ZRVd9WzvaoJn4XzVY8ixrEReo4X\r\nJBZkpfPdMlHOIUDHXaKF9sR0UxavY3y53tbHkPWRAMXNAt9tYN4TVcqL43x+\r\ndCsmgc4Mk20njqBnJtxqkllA3MffHEa6jCJOcn2gulAs0SaiHObpDKqDKEeO\r\n8jSYPPR/1SYsR14AMSANSBCnni6695A6iUCYBArzp5RgkDHorqWAqTigdfyt\r\nG1LDY8rC4eexssLZzO3WzB3wBD1Ys5LU30cIO5PW+x982a82Sm8pJZnd5IL6\r\nnTn5EghIF3SBqN3y4+JZWd6plKpbbFRelGs=\r\n=t83C\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.0915e72_1676479259378_0.9505795127241172"},"_hasShrinkwrap":false},"4.0.5-dev.efd5f2a":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.efd5f2a","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.efd5f2a","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.efd5f2a","_integrity":"sha512-AGNkwqQwYbEFFPh+9QLSkOtt6LoASU7vBV3eeVLPB1yk5EgIReIWBRhfmsYIttjQKYh2gKY2KI/Km4eB4d+j3w==","_resolved":"/tmp/8b591e577d3d6612e81284cdad2f924d/ethereum-waffle-provider-4.0.5-dev.efd5f2a.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.efd5f2a.tgz","_nodeVersion":"16.20.2","_npmVersion":"8.19.4","dist":{"integrity":"sha512-AGNkwqQwYbEFFPh+9QLSkOtt6LoASU7vBV3eeVLPB1yk5EgIReIWBRhfmsYIttjQKYh2gKY2KI/Km4eB4d+j3w==","shasum":"deab66786f6556dc9c1a179d100b85b6daabf853","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.efd5f2a.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDHEL3F75EQ8mXr6gq55Ht+gyEutoqTRA1dKAkmEtKV0AIgXyZYY0dq1MDMYnxDmdKr5hGAPuO5tM1/dMmAWhxIw6s="}]},"_npmUser":{"name":"ethworks","email":"eng-services@wallfacer.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"eng-services@wallfacer.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.efd5f2a_1697111501427_0.295392173814216"},"_hasShrinkwrap":false},"4.0.5-dev.238c11c":{"name":"@ethereum-waffle/provider","description":"A mock provider for your blockchain testing needs.","version":"4.0.5-dev.238c11c","author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ethereum-waffle/ens":"4.0.3-dev.238c11c","@ganache/ethereum-options":"0.1.4","debug":"^4.3.4","ganache":"7.4.3"},"resolutions":{"web3":"1.2.4"},"devDependencies":{"@types/debug":"^4.1.7","eslint":"^7.14.0","ethers":"5.6.2","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/provider.svg)](https://www.npmjs.com/package/@ethereum-waffle/provider)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/provider\n\nA mock provider for your blockchain testing needs.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/provider\nnpm install --save-dev @ethereum-waffle/provider\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### MockProvider\n\nThe `MockProvider` class is the main way of interacting with the blockchain in your waffle tests.\n\nIt wraps `ganache-core` in an `ethers` provider and extends it with useful functionality.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/basic-testing.html).\n\n### Usage\n\nExamples of creating `MockProvider` and usage `getWallets` function:\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\n\ndescribe('waffle tests', async () => {\n  it('wallets have non-zero balance', async () => {\n    const provider = new MockProvider();\n    const wallets = provider.getWallets();\n    const balance = await wallets[0].getBalance();\n    expect(balance.gt(0)).to.equal(true)\n  })\n})\n```\n\nUse `setupENS` function to set up your `ens` and setting ens address to the provider's networks. The function accepts\nthe `wallet` as an argument, and if you call it without an argument, it will use the last `wallet` from `MockProvider`.\n\n```ts\nimport {expect} from 'chai';\nimport {MockProvider} from '@ethereum-waffle/provider';\ndescribe('waffle tests', async () => {\n  it('setup ens', async () => {\n    const provider = new MockProvider();\n    await provider.setupENS();\n    expect(provider.network.ensAddress).to.eq(provider.ens.ens.address);\n  });\n});\n```\n\n\n### Fixtures\n\nFixtures are an advanced concept that you can use to make your tests run faster. They take advantage of the snapshot mechanism in Ganache.\n\nYou can learn more about it [in the documentation](https://ethereum-waffle.readthedocs.io/en/latest/fixtures.html).\n\n### Legacy API\n\n- `createMockProvider` - this was the old way to construct a MockProvider instance\n- `getGanacheOptions` - previously it was possible to load the options from the waffle config file\n- `getWallets` - this was the old way to get wallets from a provider\n","readmeFilename":"README.md","_id":"@ethereum-waffle/provider@4.0.5-dev.238c11c","_integrity":"sha512-/3DAwbuXNpuv0FdKUOC/BwexSlQb48ilryVQXzmk/3XW/186M/7X19OYovdaAbh7Amb2LJVYp4Csx46QK81LkA==","_resolved":"/tmp/5199884c5aa52976cac8b7c9677241f5/ethereum-waffle-provider-4.0.5-dev.238c11c.tgz","_from":"file:ethereum-waffle-provider-4.0.5-dev.238c11c.tgz","_nodeVersion":"16.20.2","_npmVersion":"8.19.4","dist":{"integrity":"sha512-/3DAwbuXNpuv0FdKUOC/BwexSlQb48ilryVQXzmk/3XW/186M/7X19OYovdaAbh7Amb2LJVYp4Csx46QK81LkA==","shasum":"c60b322e5e79fdb653126d38f13da23467b927e1","tarball":"https://registry.npmjs.org/@ethereum-waffle/provider/-/provider-4.0.5-dev.238c11c.tgz","fileCount":77,"unpackedSize":251194,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIE9VIFy7MNh/AuvR8OeBGZg+wOteMzaPZXM5moEoYFarAiEAsbqpSqh3NgHTG2/CPzrzznPrkUTod1j3jf45fpzCqs0="}]},"_npmUser":{"name":"ethworks","email":"eng-services@wallfacer.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"eng-services@wallfacer.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/provider_4.0.5-dev.238c11c_1697112521415_0.7255368512288547"},"_hasShrinkwrap":false}},"time":{"created":"2020-01-16T09:29:36.627Z","2.3.0":"2020-01-16T09:29:37.028Z","modified":"2023-10-12T12:08:41.847Z","2.3.1":"2020-01-17T06:06:54.701Z","2.3.2":"2020-02-07T09:59:48.139Z","2.4.0":"2020-03-16T13:01:17.555Z","2.4.1":"2020-04-10T11:22:56.263Z","2.5.0":"2020-05-05T14:17:54.451Z","3.0.0-beta.1":"2020-05-05T18:30:53.540Z","2.5.1":"2020-05-20T15:44:10.568Z","3.0.0-beta.2":"2020-05-25T18:21:12.936Z","3.0.0-beta.3":"2020-06-12T12:01:55.684Z","3.0.0":"2020-06-13T05:48:53.144Z","3.0.1":"2020-07-05T10:23:20.512Z","3.0.2":"2020-07-11T09:09:07.120Z","3.0.3":"2020-08-31T15:48:24.202Z","3.1.0":"2020-09-02T08:17:40.910Z","3.1.1":"2020-09-26T12:23:53.248Z","3.1.2":"2020-10-23T12:57:58.539Z","3.2.0":"2020-10-31T07:19:10.955Z","3.2.1":"2020-11-24T15:50:22.443Z","3.2.2":"2021-01-23T17:22:00.173Z","3.3.0":"2021-02-27T19:00:32.893Z","3.3.1":"2021-03-20T07:57:14.391Z","3.3.2":"2021-03-24T10:14:03.175Z","3.4.0":"2021-06-17T12:59:09.381Z","3.4.1":"2021-12-24T20:43:28.550Z","4.0.0-alpha.0":"2022-03-10T14:08:29.264Z","4.0.0-alpha.1":"2022-03-23T10:35:04.245Z","3.4.4":"2022-03-23T12:43:10.296Z","4.0.0":"2022-03-24T14:41:45.861Z","4.0.0-alpha.2":"2022-03-24T15:07:29.465Z","4.0.0-alpha.3":"2022-03-25T11:21:38.277Z","4.0.0-alpha.4":"2022-03-25T14:01:25.950Z","4.0.0-alpha.5":"2022-03-25T15:50:56.681Z","4.0.0-alpha.6":"2022-03-28T14:45:27.018Z","4.0.0-alpha.7":"2022-03-28T16:10:19.008Z","4.0.0-alpha.8":"2022-03-29T14:25:22.749Z","4.0.0-alpha.9":"2022-04-05T15:28:22.951Z","4.0.0-alpha.10":"2022-04-08T10:05:20.368Z","4.0.0-alpha.11":"2022-04-08T13:22:15.328Z","4.0.0-alpha.12":"2022-04-08T13:34:18.141Z","4.0.0-alpha.13":"2022-04-08T13:41:11.470Z","4.0.0-alpha.14":"2022-04-08T13:54:24.842Z","4.0.0-alpha.15":"2022-04-08T16:01:39.088Z","4.0.0-alpha.b94c36":"2022-04-11T09:18:42.074Z","4.0.0-alpha.16":"2022-04-11T11:01:34.463Z","4.0.0-alpha.17":"2022-04-11T11:47:17.879Z","4.0.0-alpha.17.4":"2022-04-12T14:19:13.441Z","4.0.0-alpha.18":"2022-04-13T10:16:14.419Z","4.0.0-alpha.19":"2022-04-13T10:52:38.094Z","4.0.0-alpha.20":"2022-04-13T16:56:30.700Z","4.0.0-dev.b82389f":"2022-04-21T11:43:40.948Z","4.0.0-dev.8d4934c":"2022-04-21T12:23:22.399Z","4.0.0-dev.baa1b2f":"2022-04-21T12:48:32.863Z","4.0.0-dev.8f72c9c":"2022-04-21T13:45:33.657Z","4.0.0-alpha.21":"2022-04-21T13:57:43.319Z","4.0.0-dev.51e05d8":"2022-04-21T14:00:07.956Z","4.0.0-dev.498bffb":"2022-04-27T14:30:41.685Z","4.0.0-alpha.22":"2022-04-27T14:40:22.776Z","4.0.0-dev.de3905f":"2022-04-27T14:42:52.461Z","4.0.0-dev.0e1e2e5":"2022-05-04T10:15:21.461Z","4.0.0-dev.b7bb3ba":"2022-05-05T11:26:40.151Z","4.0.0-dev.c694a2a":"2022-05-06T08:59:55.189Z","4.0.0-alpha.23":"2022-05-06T09:16:55.581Z","4.0.0-dev.ba7033f":"2022-05-06T09:19:22.811Z","4.0.0-dev.bc0a5b5":"2022-05-06T12:35:37.052Z","4.0.0-dev.900b71d":"2022-05-06T14:07:53.516Z","4.0.0-dev.ba8cde5":"2022-05-13T09:05:20.708Z","4.0.0-dev.104f4a3":"2022-05-16T16:16:27.325Z","4.0.0-dev.e3fa452":"2022-05-16T16:34:19.712Z","4.0.0-dev.9e7c3d6":"2022-05-17T12:53:57.359Z","4.0.0-dev.d9a8ab2":"2022-05-17T13:05:21.389Z","4.0.0-dev.e275a26":"2022-05-17T13:09:02.110Z","4.0.0-dev.8aa0bc2":"2022-05-17T13:17:56.088Z","4.0.0-dev.219fe4f":"2022-05-17T13:37:29.941Z","4.0.0-dev.7e092e8":"2022-05-17T14:30:23.871Z","4.0.0-alpha.24":"2022-05-17T14:42:04.825Z","4.0.0-dev.2ef3d81":"2022-05-17T14:44:32.928Z","4.0.0-dev.539c432":"2022-06-07T07:02:13.322Z","4.0.0-dev.2fe3f15":"2022-06-07T09:45:36.394Z","4.0.0-dev.b2ee4d0":"2022-06-07T09:58:41.152Z","4.0.0-dev.4fd670d":"2022-06-07T11:27:03.936Z","4.0.0-dev.0f1b253":"2022-06-07T11:39:15.735Z","4.0.0-dev.b21809a":"2022-06-08T15:49:19.266Z","4.0.0-dev.1c384e6":"2022-06-15T11:32:02.472Z","4.0.0-dev.d8521e6":"2022-06-30T12:00:00.699Z","4.0.0-dev.4867133":"2022-07-07T13:39:50.760Z","4.0.0-dev.838cf4d":"2022-07-08T10:05:36.425Z","4.0.0-dev.06401c4":"2022-07-12T14:09:56.659Z","4.0.0-dev.79d1c7b":"2022-07-13T14:18:40.009Z","4.0.0-dev.5587e09":"2022-07-19T10:07:23.805Z","4.0.0-alpha.25":"2022-07-19T10:21:29.105Z","4.0.0-dev.5c29ca4":"2022-07-19T10:24:03.985Z","4.0.0-dev.4ce739d":"2022-07-21T13:19:58.572Z","4.0.0-dev.c98112a":"2022-07-21T14:18:22.902Z","4.0.0-dev.b028d7f":"2022-07-21T16:02:18.587Z","4.0.1":"2022-07-22T09:28:14.562Z","4.0.1-dev.37f589d":"2022-07-22T09:30:38.167Z","4.0.1-dev.2e1837c":"2022-07-25T13:18:13.420Z","4.0.2-dev.0a87072":"2022-07-26T13:46:22.773Z","4.0.2":"2022-07-26T14:11:48.166Z","4.0.2-dev.b329845":"2022-07-26T14:14:57.568Z","4.0.2-dev.c513a49":"2022-07-28T12:37:33.479Z","4.0.2-dev.382de5b":"2022-07-28T14:26:21.814Z","4.0.2-dev.4e0598e":"2022-07-28T15:26:43.752Z","4.0.2-dev.1fe07bb":"2022-07-29T11:46:45.692Z","4.0.3-dev.bd741a4":"2022-07-29T13:54:08.951Z","4.0.3-dev.3b7020d":"2022-08-01T08:27:51.567Z","4.0.3-dev.0c13fb9":"2022-08-01T08:45:24.588Z","4.0.3-dev.0f5af9a":"2022-08-01T09:20:04.632Z","4.0.3-dev.d1f8ca7":"2022-08-01T13:55:13.136Z","4.0.3":"2022-08-02T08:25:01.539Z","4.0.3-dev.cae5bac":"2022-08-02T08:28:07.553Z","4.0.3-dev.41bc646":"2022-08-03T09:43:06.492Z","4.0.3-dev.18b219e":"2022-08-03T09:48:32.939Z","4.0.3-dev.e7e18f6":"2022-08-03T10:03:09.243Z","4.0.4-dev.8eb1578":"2022-08-05T10:53:48.263Z","4.0.4-dev.e22c4e6":"2022-08-05T13:06:41.693Z","4.0.4-dev.89498ae":"2022-08-10T10:21:09.133Z","4.0.4-dev.71e4b73":"2022-08-19T10:31:28.802Z","4.0.4":"2022-08-19T11:46:00.967Z","4.0.4-dev.2f8bbd1":"2022-08-19T11:48:49.361Z","4.0.4-dev.b96f0af":"2022-08-30T08:27:28.280Z","4.0.4-dev.f0bea18":"2022-08-30T11:11:35.289Z","4.0.4-dev.6f16299":"2022-08-30T11:34:39.496Z","4.0.4-dev.60ae4b4":"2022-09-16T13:40:43.742Z","4.0.4-dev.2d19dde":"2022-09-16T13:45:14.454Z","4.0.4-dev.dd21fb0":"2022-09-16T15:34:42.557Z","4.0.4-dev.cc2dc55":"2022-09-16T16:03:48.040Z","4.0.4-dev.cf5427e":"2022-09-16T16:53:07.435Z","4.0.5-dev.d863d0a":"2022-09-19T10:42:57.204Z","4.0.5-dev.0c72c63":"2022-09-26T11:17:41.291Z","4.0.5-dev.f3d5029":"2022-09-27T09:41:14.948Z","4.0.5-dev.379ba2f":"2022-09-27T10:11:57.278Z","4.0.5-dev.9bdd800":"2022-10-03T12:21:44.938Z","4.0.5-dev.06c4b26":"2022-10-04T11:57:33.658Z","4.0.5-dev.90390a9":"2022-10-04T15:38:03.448Z","4.0.5-dev.cf42065":"2022-10-31T10:43:42.217Z","4.0.5-dev.8671be4":"2022-10-31T14:32:07.712Z","4.0.5-dev.4541f86":"2022-10-31T15:45:25.500Z","4.0.5-dev.4946c9b":"2022-11-10T15:00:14.603Z","4.0.5-dev.edcb2d5":"2022-11-28T14:07:33.068Z","4.0.5-dev.4557ff9":"2023-01-03T15:51:49.310Z","4.0.5-dev.d4cc0eb":"2023-01-10T12:44:42.713Z","4.0.5-dev.e1d3ccd":"2023-01-11T11:37:18.727Z","4.0.5-dev.4d27a34":"2023-01-23T15:25:52.988Z","4.0.5-dev.a50814e":"2023-01-24T15:33:12.862Z","4.0.5-dev.166b72c":"2023-01-26T11:03:26.063Z","4.0.5-dev.0bc9af4":"2023-01-26T13:01:52.342Z","4.0.5":"2023-01-26T13:40:29.155Z","4.0.5-dev.13d1af0":"2023-01-26T13:44:20.652Z","4.0.5-dev.f8ca718":"2023-01-26T18:16:13.256Z","4.0.5-dev.a1d89d0":"2023-01-27T13:35:36.452Z","4.0.5-dev.4740ec6":"2023-02-06T11:39:46.680Z","4.0.5-dev.0915e72":"2023-02-15T16:40:59.600Z","4.0.5-dev.efd5f2a":"2023-10-12T11:51:41.650Z","4.0.5-dev.238c11c":"2023-10-12T12:08:41.640Z"},"maintainers":[{"name":"ethworks","email":"eng-services@wallfacer.io"}],"description":"A mock provider for your blockchain testing needs.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"license":"MIT","readme":"","readmeFilename":"","homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library"]}