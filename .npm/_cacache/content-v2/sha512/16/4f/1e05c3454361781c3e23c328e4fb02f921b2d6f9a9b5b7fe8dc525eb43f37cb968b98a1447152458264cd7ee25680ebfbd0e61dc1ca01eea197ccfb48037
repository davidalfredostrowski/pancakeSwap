{"_id":"@ganache/rlp","_rev":"66-88a488fafc829f4c397098616ae121ea","name":"@ganache/rlp","dist-tags":{"canary":"0.1.1-canary.1342","latest":"0.9.2","internal":"0.1.1-internal.0","alpha":"0.5.3-alpha.0","beta":"0.1.1-beta.2","rc":"0.1.1-rc.0"},"versions":{"0.1.1-internal.1327":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-internal.1327","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript TS_NODE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"^0.1.1-internal.1327+872b551f","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.2","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.0.0","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"872b551fcff82cf7972eb5de5745681fd8bd1b32","_id":"@ganache/rlp@0.1.1-internal.1327","_nodeVersion":"12.22.1","_npmVersion":"lerna/3.22.1/node@v12.22.1+x64 (linux)","dist":{"integrity":"sha512-og4V4OqQFuNbGRGMg0JWacQ5UqrfZl7eWPTimkwXf+fx4/qSFyzyln7/fx43a4djb0PDYAF5moFwrpu1hO4W+A==","shasum":"46e15603055352eec8d4b479c201dbffacfc67ab","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-internal.1327.tgz","fileCount":9,"unpackedSize":166333,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg56KRCRA9TVsSAnZWagAArg4QAKR5dPpr84LWEykKlK/f\n/YJJEb/h9fTu9Fbxgqz+2UzBUMpZ1f7fBegx56WUg8iGioNOZDJgkOG5z18Q\nBsAKDMu4vy74K9tlWpV8hAkaBsKq2eh/Mcn15HqVl+25lsZSzsU8gySBTSWV\nxxJtSV8MFmwZU343kPa0ssncibbqRqVCpVhmE7twRCMl14/knXASrmiQ/c5U\nUWRAbVj0p9urG9uhfsNlhbRLe5SeI4HPs8GHfTT1NJh4rLTUZkV4RxUaL+wh\nFbMrWmgbVnvEnRzzw8fvYdLvfTvGPLUGGAXx0RJ9bTGSTlDWDKTiTYX8i8zN\nqa9MiysKVCwFvgtELI2K7keyICmMCDT8lNolupu/KlWNmt3Cjw8DvFbyWDTo\n+Ds+WOoZDfZjSi+HSeuA4NKWLEO8pl/hZoO8BmT3lIQ+n2l+Eocd+M898rG5\nLH/qTenI98iZyG0JwEq0H7oQdfc5h66HEfB+VNp0d7Rp7LRNigoazkb0JOuE\nLdfO5BjCoS3HNkyYrUqSMZKWi8xW2TSJaaJS3hcIDnJUY2h/kWwqIPDJCDB1\nBRjm9P+0r2UalmHtaqJbGpC9CgnFgTDGE4TCtDwbMGO+/UaP75aqSEMzPoe3\nwaqTMkVV+Q8e5HiuhPC1VEpsVFQxghhLCzTdRSUbyKXOkhHX6GEi/F4IJ6Dx\n9Cs4\r\n=9E6k\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBGxGoEKMAmsMSRbuB2rael1dNB0/vl0NVdfFERi2YEbAiABw4SA/caruppP4mn5gbpEdQmu49ZD3Q5vGS+nia0vHg=="}]},"_npmUser":{"name":"davidmurdoch","email":"david@davidmurdoch.com"},"maintainers":[{"name":"micaiahreid","email":"micaiahreid@gmail.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-internal.1327_1625793168655_0.872947047717527"},"_hasShrinkwrap":true},"0.1.1-internal.1328":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-internal.1328","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript TS_NODE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"^0.1.1-internal.1328+d5616bc7","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.2","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.0.0","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"d5616bc79a9984bf6e1915b54856177f50325753","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-internal.1328","_nodeVersion":"12.22.1","_npmVersion":"lerna/3.22.1/node@v12.22.1+x64 (linux)","dist":{"integrity":"sha512-nep8GHaSEvoKLmTccxTNOpA5fLB8UyX+mgtcXP1VsVSrPu1uSXZP0tVQB7DnHVqjp6rPOf7ZhmLiJBfswnzpgg==","shasum":"b0279334aea1ec3707c8ddb68d47377a7c855246","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-internal.1328.tgz","fileCount":13,"unpackedSize":174483,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg56T/CRA9TVsSAnZWagAAWwoP/A06aFYiD4DBmLdSDCys\nQGOj2EQum3gxKhPdw+4YM/EqZ7Vt+OLShb+GA0ewSO2sKZNrwtflzGAnmxI5\n1dBv3dORDEjFrpkMmXoCSS8X0d2QMg7Ns9iJ8vmhUxY9etPV93XqtsjA2G1p\nMay17GjOQQF3I4YxpAcJoRRDqQtFGELYplOCw1ar3hehxSyvEBsT9mu9sXkh\npjYam2uIfKUjlHEART1ZY/TKHYPxqzXDQO4gz/ck3BP2+B2rYZ3CuiDjWbUQ\n2U5rccvFuy7sANaWwYUccmVIV9n8i3mkzhlguyXNHdrEG8WfodiTgcE5TZmv\n9Hv0FzoOTNWlaMvqurTo2J7JNcz5XoI8eqpPrvE2cRpo4u7oliYVA5Mm21jA\nYYDHIu1BZFdCu4dCABYwPgOAtAFqNyPa68gKBObb52cF2nV0172oe1YA5oUl\np79Sf0kJFPViIcl6cFWQcoCLo/hP4c5Y52vcHygunvA4oCPRxkRaSTNzc5SR\nuU4fPFD6VGJF6SDp7EJE7FAbZdigAtVNW2LvfVc1APDnEQ5Ii3KJZj64y6r4\nvi6mQIrlBcKFpbDkOslvfpOS8d/tN3+79kK4y9ryIvxGaykmI85UjBjvp74g\nLZKwmqi1fWs63D+2JrfUOSRA3u+Iw2COy3mYXHvEyfPFeGL0CVHQFqmFFOwf\nEkgv\r\n=sT6u\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCh98WG4nfaHaD2jGVM3oMEXddF+f1QuQuXDGqk+Sml9gIgfQKQ8sfhLs6dLwGJ2yFSskmECmwBV9Eucx9NOr8wGqw="}]},"_npmUser":{"name":"davidmurdoch","email":"david@davidmurdoch.com"},"maintainers":[{"name":"micaiahreid","email":"micaiahreid@gmail.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-internal.1328_1625793791503_0.5600563563262633"},"_hasShrinkwrap":true},"0.1.1-internal.1330":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-internal.1330","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript TS_NODE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"^0.1.1-internal.1330+9c44d080","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.2","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.0.0","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"9c44d0806e29316041b85b2d0965bab6e08cf1b2","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-internal.1330","_nodeVersion":"10.23.0","_npmVersion":"lerna/3.22.1/node@v10.23.0+x64 (linux)","dist":{"integrity":"sha512-+VB9t2IcnVagdwg23MzhTroLcfhEGnfP18XrtWWYJYC3tHPUU5AmAa11QjovZYO/qqITh8G1kSIW0oVfGdNzLA==","shasum":"333bcbc2d146e013a73c8b46de28e8291f0f775e","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-internal.1330.tgz","fileCount":13,"unpackedSize":174506,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhCU29CRA9TVsSAnZWagAAy6EP/3YdtDXaoqsl2Gwhopfy\nKJEo3bYsWsLyxi2ruSAKaTy7HpQvEhxDdL6zO6nsCJYXcwAQB13bwbf/eauA\nttFmjUhTjrTlLwTWO0O7m+2fB4EMqvYo27pKADP7z+fwWFGI7UW7LBWTUajj\naqZXa4ZQRrt4XxYvBaVdYFLF+H77BMPemjnVOa0P5NylAm4Cr7ZantSrl7Eb\ngOf90s4CuIjxvpWwlKHhqjz8cAQCD2BeLie9Iqlm0q3bNPIpbdBAcfx2zj54\nsDpeyodTAkm0fOAs+YIWtwZQDPmvNFFvRu9AHqndQZegUk/R8VFg0Abhc5ZN\nXUIkEy0K+6mFL6TkwdTFpUThaDFE7QJvzy/DfPknpgeyAoR3YqCSIR8c0UNu\nPW6n/OHXEkRuZ4jAK59B8UnaUjPPtZANuoH3B07tojm3AYHK06zz+0a2CvUe\nAMdqbHsILMgG4T9qmTjNkdjQcneKrMHhXuW6s4NnQk12xJln7HBUxRUWVZk4\nYCFaARZvVLILViuTW71vYuMn4Te0macgaY44lr57dmoWnQJe4uWgCqPZCUVk\njJM5so8O/8y1Pi6KCms21ru8GrAdbM8ak7Bp5ykhJNKGu6nVF5hiJucVeHx/\nSgtHJL+p34tNJegtZvZ2WtPB/qxXWyb/KJiR0xeQmvZlUmqgpow2L8GwQ5Dg\nArtM\r\n=VIaW\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGKq1ZfrGOprMuTw1ur+ckZf3ROqjc+e0nFg+BleJ/TqAiAlc+7a3dLLf3Yneg4YfCD9ySpyq7EMJDGrroWLFO0cJQ=="}]},"_npmUser":{"name":"davidmurdoch","email":"david@davidmurdoch.com"},"maintainers":[{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-internal.1330_1627999677502_0.7598304374348244"},"_hasShrinkwrap":true},"0.1.1-internal.1332":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-internal.1332","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript TS_NODE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"^0.1.1-internal.1332+ed097811","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.2","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.0.0","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"ed097811e9b8e6e8de4602e5873baeb2b0be0288","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-internal.1332","_nodeVersion":"10.23.0","_npmVersion":"lerna/3.22.1/node@v10.23.0+x64 (linux)","dist":{"integrity":"sha512-3RQALdfglHEiHorMQHRuWqZ4jLe3vzyIatqz28uwU5KB3XHaTkgELsX673n5AUpKT1pPEnK6yZOmhYJml6dTnw==","shasum":"a2de8bbf2b96ce72d816b13a9da25bd7daf7ff14","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-internal.1332.tgz","fileCount":13,"unpackedSize":174506,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhCVJxCRA9TVsSAnZWagAAaOsP/Ry3fbJfngBBIKBTmid7\njkS/hOHUmuZWT9JPVoqksLTXJcjTDKCz0Mk/OmnO/YhMVidwbHqWOjK3xuRg\nJo1vxnaz6kZo3GG6622YWCU/xhSJBroRzhix6nVScIGLwUY19tV5WeMBSKsf\nkgQhKKX37RYOgCkTV4KPG1wPTT1kVUkt2zYds3qz3d4w5E3F5ZUSbx+bI/gB\njK2vqcejEPklDuCI4/bBtNzmP7z8mL2BRPYz5xDiDiLjd441Z1FgEu8WgM+i\nJLZn6yUtLszTR1lwTQFrXe1zlb0xFQNImRG7lvQTFKPH/lEyKx4ykrWDiYoN\nCVbw5dviwHrkIDbLaklXYNsOukCET7k45ZdgUHkbI2SuIx7/gOiTxa2p2etE\n6jtX7gmIAg5h8Wd058QuFM3wLkiPqpUdnxU+tsj18NLRXbahJf35oDO0QkSm\nQCiFVDHBMl9dAY/hnoXlKi0VjfcwVDq064uCPFAje71Zzx5H0jnaoFwWaaFR\noWeP5dm7sbDfQF6rrKjs5m+sWnwyrfe1dv65MpjdND3ouRD6b2LFdcPWNMoA\nWSSsTmqtfBiqKSP1BscdwdElVkvgDdTe46GTPHQXE17TRosyATYN7bsKXfYY\niDHjApOpGnIdQVhvxDhiPDYw5r2btJAB6D6fzNfyNhOPtx4znx72ltkuI/B1\nKi10\r\n=wU4j\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCcDYgB67ahCaTOpYvRiAHwL2qG10NvmQSMrboSNcS85gIhAPeXDVFwrvfV1d5BnRDs8YP0y34DrKCWuFt8K8Mn70Jq"}]},"_npmUser":{"name":"davidmurdoch","email":"david@davidmurdoch.com"},"maintainers":[{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-internal.1332_1628000881060_0.06210654663441861"},"_hasShrinkwrap":true},"0.1.1-internal.1333":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-internal.1333","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript TS_NODE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"^0.1.1-internal.1333+7e80572f","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.2","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.0.0","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"7e80572fb8aefb786578c4bb5a8b6a286d7b9c99","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-internal.1333","_nodeVersion":"10.23.0","_npmVersion":"lerna/3.22.1/node@v10.23.0+x64 (linux)","dist":{"integrity":"sha512-29DI0aKOUn670fW6E7H+PlkpEGYTiCWX50Xy6s9VmfkNar/cAM6MKRuQ61NFD59Gk4+dQYGJK6fQ4KdTzl1+3g==","shasum":"79fb7c3ce63eaf57f31fad87987934e2099173e4","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-internal.1333.tgz","fileCount":13,"unpackedSize":174506,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhCVYhCRA9TVsSAnZWagAAMLsP/1A1pStldwJ4P5i0zrK0\nCrzJAFa8k9aJjbov1SNY9AxvHIeEP145sIoE8Sv/BtQwqSHJnK17asnm4V/Z\nEV3sNMoIdqC4Nybv/V3yIE1JYmb3vSr8uWjjTwRDqw94bJgaSFYxbCpGjScF\nFcb3c9mlO5LsTaeO+4UnizPcPJPH49FT+Rptho0Rx8fbcfMG3qSnjUirTQ0S\n8J6qNVzqJY2wGvdhr18ShXutDtDTfYQ19BjLYbz/jbglCuM5LNtUmeSL/WY0\nXhnAIM7g/uEiRWU1qS0YZhww8uq+CnQ6HvwWIt3m+Beb6qU0SvO1UkeseT75\nyiWoWnILoBEdwKwavoglEpHNkYjGnHgcWPH2KBTuo16uGH0pvNYwAMCDTA4O\nwO1IHfWrQQd3Q5gR2k0D0iVqr+wNshzDc/0NIQ8SuJ6TWS9AV72NVVGMw5gy\nQmbRd4V44gF7gP8/dbG5LtpIQWsGxT7LiBwW1qRhwPIeNPF235ldvX5ah+kC\nxzAETC33lDgoEuqZv7twUJYocyINV+IbKgIDNIwQJnETZtt/c7q7dhh+yV8s\nZ2J7bJ9Csaq9ROCH/MwnRHghB5zHtTbG2pN3bPpNlxNjqUWTu4DoNYdvbWXI\np7rklxQetLNNOpwiY50DUyT2XbMgezvPvWDO0hhQhJa7OERYSoeDolQ8Mm5W\nLtHZ\r\n=s5KX\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDfpPShUlYVMz0fyBmLgkISKsEcoY60h4lhDq1QThRGaAiEAnS4PE3mRsdWDwaNvXxreYMItZ0nulGjL0lR4Dx4HIQE="}]},"_npmUser":{"name":"davidmurdoch","email":"david@davidmurdoch.com"},"maintainers":[{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-internal.1333_1628001825228_0.8632863095198828"},"_hasShrinkwrap":true},"0.1.1-internal.1334":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-internal.1334","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript TS_NODE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"^0.1.1-internal.1334+5f8ce0f7","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.2","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.0.0","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"5f8ce0f7f7cc9a3db53f61aac13c4539de25ca1e","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-internal.1334","_nodeVersion":"10.23.0","_npmVersion":"lerna/3.22.1/node@v10.23.0+x64 (linux)","dist":{"integrity":"sha512-qhVD6xxSk3pmni80EDOFJhZfvF8MUebOP3XRtoZsyHgMVnu4FajCXddGsxX4KU6WFvdFzJTvUNlfpQA3Y60FvA==","shasum":"f93879c2c9d4c2853a998c6c271d997b6f60d4ef","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-internal.1334.tgz","fileCount":13,"unpackedSize":174506,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhCVvVCRA9TVsSAnZWagAAl8QP/3MQtk6JK55fQCvRpUEr\n6XfwoGHhxGuC7fGrXcRsGPW1rZtmYV9sd9Oa89FERGQr6a5xIWNzV3xf5MbE\nz2zGcsxTmXBXMVsiG+2tDqMk4uAIWuAYOqlNj17Cj7B2cyTutbY5Ivf/xIDw\nQV/4PXjX9CKi8pvZUU0LgpLMd/U3bISXESUODavIcY10veIzmgLiQ5vYy7tI\nM4Ujpquq2/cYsjmIhR7plYFBNhgKNJJa36r59Qmt/lWyL29MB1NeNupwwDBV\nh0drQUu0buuS9x2GgB8SbNOBmLTPt51POdlGVbrS4hU5ZxND5Sqf2cNgpHFb\ne/W3ZTxnICkNwSZVgaZeiVWyqMCRt3GGSoNK2EIjopQFnWwX+kEv7wavBUVV\n9NJo8T7++Fi0K1xTS3ywf46eyRufr/K70yo/8MkbM8xKSafJVlz9xLgTa09J\nmwAgE0yekPc1atHJGhqKHomErRq1vqlK2P73ydMf3b1URH9vUSnp8iPqYLdv\n7I+0zKo185k7fgaz10YOZffg04zT1A/rFablQ+cR8lizuvCcQSjrHu6+XJa7\nykr7tqDjuVtm+ms9N9PBeVCvB8YgWKii0UMxkI0ovvvRt6G4lbNaqbw378Ch\nO19RPO7rQVe1ueq2qcu4EvKedOkGGVJLxgWuVn/3dBPbmZDiVXDWoxVsGeBX\nQMvz\r\n=g/1z\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCvr4K9TVzaSLuPWuafCFpEEQUXalGUFpuT7XhojS71KgIgQB5XcqXVYFocqRShg8CZKQr4A/VwezJ0I2HBGfDasqE="}]},"_npmUser":{"name":"davidmurdoch","email":"david@davidmurdoch.com"},"maintainers":[{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-internal.1334_1628003285493_0.7990741404667283"},"_hasShrinkwrap":true},"0.1.1-internal.1338":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-internal.1338","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript TS_NODE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"^0.1.1-internal.1338+2b88f173","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.2","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.0.0","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"2b88f17336d3844ce7803de161851cc3bf5b88f8","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-internal.1338","_nodeVersion":"10.23.0","_npmVersion":"lerna/4.0.0/node@v10.23.0+x64 (linux)","dist":{"integrity":"sha512-HxC2QhpFwSjgWo8+SMtZbFW0UYmGUEvbDBs1kOUjEGzmKouVJ3qxafrJ/GMkNmPk86ecUPlPoSM+r0trPTE8SA==","shasum":"3aa376d65bfb8d66287acbb399dfdad47cf17603","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-internal.1338.tgz","fileCount":13,"unpackedSize":174018,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhCW5zCRA9TVsSAnZWagAAm2cQAI0H7Qb1kHKFOw4waIn0\nBrE9IljfpxCb2Ei02ctpYMJszlQ/RjnmlnNYvQxvKTX3jPn8U9LZonebUlO2\nrjcAjp1GKun70tFSqI7+zHiXJU5jJ4emsJYGiX5cb7WXZgBXfTSZrrMiKDiq\n5i5qIfZ1PbOW5cOb+Ot/6ggiaLF5TPgTm3r19dXpSk/msEoPspoZnEUfOOtg\nZgIYZc6r2Pt3YjjmMZILe+AZa4WQUU2wS8IXb61PO1F7J4uZeTbXutzWlyDk\nHkV5Jb2bD95JJSmQi3CFYFP36fa5ifaUDgO0eRiWi8fOF4djUVQJGmohjP5m\nYW6e2hYtX0dGL/ivDj2lsPYfEzCOrygOsd4sF10+ibCleDDcsthIKRwjVp/q\nwATWDLeR9WcHIZDuQyqmMbZciqiW3SPS4E8vaWnapUiHl7GeYV1l3G9TJNsB\nWCY4SDgDUsrXi02ihxiqTrrMQiY/yMOFwdm9+vomURZP4OGxF5YQvu8D06s7\nEUui/rd/T0nC+yR9VzP3v8hWWQsqAjhC879UVibE/xf/N4c8NwXlnyKpuatZ\nydvWMQngQvW7hy5ZC7a8MpHX0akYcWdhhYD1plzS0v9te4k31kFYue8evYGC\nt93/usZlwp706ol/ZAEpnv7+NpjVh43h0a96eRj1/nXJGO/9Xwc1u5k41L2e\nlNjN\r\n=K/Zw\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDnDI2smyCD4e//5T9lpxK1ONwgcDSqEjkOEsdN09q1qwIgGkqR5PgW6Amvl9qDv21N4nqpiMXZa98qrbLDJHmr6ew="}]},"_npmUser":{"name":"davidmurdoch","email":"david@davidmurdoch.com"},"maintainers":[{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-internal.1338_1628008051297_0.028571227986232905"},"_hasShrinkwrap":true},"0.1.1-internal.1339":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-internal.1339","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript TS_NODE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"^0.1.1-internal.1339+a3923fa1","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.2","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.0.0","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"a3923fa12961ca6d325d1ef6ec69d82b4e3d5fd3","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-internal.1339","_nodeVersion":"10.23.0","_npmVersion":"lerna/4.0.0/node@v10.23.0+x64 (linux)","dist":{"integrity":"sha512-nSOOXw33d9dg1n9agFaaBb8jLH4HoI8gZVRLbp+CSDfAVUjO/lTDQhToCwiMQC/UOl26p8ZPNoNRwHczpRbCtQ==","shasum":"df4e6eedb8334a8a21d129ee9fdcaffa2bf0c53b","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-internal.1339.tgz","fileCount":13,"unpackedSize":174018,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhCXiqCRA9TVsSAnZWagAASQoP/20Szgb1MqwGgGdVWI1y\nv2xZT+tuc+09sUJBE7d93mOQpLFPGIqhqnnemHX3cvFN3m2nv3UQ3eITMtJ4\nyzKlB5opt5HdzTDvsQg1yrTFLloKfEh+gpUhGwZ8q18qqd5si/+LzJYz1ef0\nE17X3MhtceAvJLnV58/8l10TJZ1Nr+Ha12PwSuxNWjzLMnEzjQWD7hsaAhlX\nhgH8Xd3kvw9zpv1ADMutAwW6Dh8CUTs4CPNbZ1oK1y1UZRLbwNXbG/UUrhSj\n83sizQ7MbM4SanJm4yiMu62hntMWCmz+omd3UvDsd3qgljF0dnKHMIvL4at6\nHvq+GWqylzv/D3oodMW0p3yHM8hxIqnugj0aWcczng9sN9oDpkk3wi7iaKea\nEgC5ku2B4nwpE/7zc5fJgwIk30f2lH258ShkxMPsf5kTxqXWmm234dQALVzL\nSF7AszSnYzdWAbDaU8T4biskMAEFZSxDvidAXjImG8UXLoKJVnnNg+LgyDEe\npclw0W7Dm3i+9tecMPkkTFguibm2is9ghjudHlQtZrckMrUgsUZ5KJuk2X4w\nfWciivBhEpCXrHk+mIuMaxx5ugqccQ76qtJsIKdocdIcdm8axAWyArLvzBxr\n9rtzYpDDNUL8eUfO0yP7/nMgh5TuWrSTo+ZwD/SxPHNdXd4ddcjhsxFk1+vQ\neR1V\r\n=AkZ6\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBiLUdV/MQ7ix7pGUlJ5ECsCQ2j58iVefWrUjUqBrUGCAiBJ9XyoRHDznJhB8dc+SjeayhdrD44WoaUdl+U2s+IgZw=="}]},"_npmUser":{"name":"davidmurdoch","email":"david@davidmurdoch.com"},"maintainers":[{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-internal.1339_1628010666756_0.8517252857362334"},"_hasShrinkwrap":true},"0.1.1-internal.1341":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-internal.1341","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript TS_NODE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-internal.1341+f3e1b8f0","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.2","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.0.0","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"f3e1b8f0152ffc404d4aee0a73237ba6ba57ada7","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-internal.1341","_nodeVersion":"10.23.0","_npmVersion":"lerna/4.0.0/node@v10.23.0+x64 (linux)","dist":{"integrity":"sha512-9aqwRH++sXt9pzUpryEIi0yvDQFCKSVX3P+6pvv0D+nwal+LT1tpeXD6wiFhrAlekmr1TMmcceknnQwug6QUCg==","shasum":"8235841790a9ea43d04b0eff4ec2da815ee869af","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-internal.1341.tgz","fileCount":13,"unpackedSize":174017,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhCXx7CRA9TVsSAnZWagAAcncP/1ZYsCu9uWRZegxeiiuv\nwP4CUyGekHh5zHdfuJ/DrpYppC0gcyN+uViyJyplWrjroiLDV1MyhWgQvdhe\nn2CLBYNaLgJuTxvuK9Yo1bXShhMg7MEv4KiOzN4sfUjxsNI529tzsUf/BRxD\nb5FYUf5sHeXEAm6arbBGe9kJ71FL7+f+r+pEwSkIV1bOEwxMhg+D2zNYhvXs\nx1tsgjZynYw+1XHN/2LmE3BjPBkZ822/YXyoJ8ad1u8LZyEiHN1RTRdgQ5uB\nuMVHDFJvvy0dmCVQVhD8ybDoADyc0t4FghBSjyueXoKpv2EbdQd4O7fS9UzU\nDuf3FmstFSFdNaVjN3ufbed1Gg9nQhJpm7DIG2gBFNOVa66QUdOQDDTchjYJ\nIPcYsWyxb3MQK723M9gU7gQjrfnh2xh0f2OBVxNA2spVERFIeHc0ewNr0XEy\ncOvyfZGcraQn8LcnGURIeqEKtShPpD6n3jf0zhCkiZxGEMqkiCrSvwSNselv\nJLXSiiz7T2Nsre8NazAClZm7f5wfh46L/czRCOdZnFWo1FDnQ9gpUQwJd+Mn\n0rKxgQWh96Ht/CVA7+yeAiQvoBFR+CH5flt8OpSJ4YauQoFqGSFhlQtoGMTG\nroqDDMQXMj5wxBxnxAQ6a4ILVG9mzzUxQ/pU06TJrwD1NXlqknAdRwDEBB/9\nL4/O\r\n=LwRu\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC0je5uOzFrnU9B82KkxLQepFU1VQvghEdJ3tPPE2QGbgIgIIJzXBxYqLmZVZk1QKMqLjNNZYX2QkK5iP1xrCX+j7g="}]},"_npmUser":{"name":"davidmurdoch","email":"david@davidmurdoch.com"},"maintainers":[{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-internal.1341_1628011643265_0.4432233868007702"},"_hasShrinkwrap":true},"0.1.1-internal.1":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-internal.1","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript TS_NODE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-internal.1+b83ce61d","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.2","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.0.0","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"b83ce61dbf26bc3b9161f53933e9da551978b564","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-internal.1","_nodeVersion":"10.23.0","_npmVersion":"lerna/4.0.0/node@v10.23.0+x64 (linux)","dist":{"integrity":"sha512-jJBPfshlZhB39Bl874RHRyjfddZp2Es7sptRIvhgN5GruDAJezV9IKnJRZtT6e51ROA8Ll7Je+7F+pEHJI5KRQ==","shasum":"74470748c7942469c4d842e12643c19eba25b372","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-internal.1.tgz","fileCount":13,"unpackedSize":174011,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhCYFKCRA9TVsSAnZWagAAJE4P/03PjVUeRhOq16bWGWDx\nhBfOeTVSAXjWYyQej+MM/RVqCpM+slZy0z+4XtmQG3ALcPMUYhKuqkAoHEuu\nmdVdeXpQCrQ5w9lEeO4kzSfW0o1WYgI2lxeS5GVRH5QXm2eXAMGMM9zwE2mt\nVb++UbD86Huk9JCOUcqCFbGK7UHrbIoOdydKn+vzlfD70JCNWLeZ8LnHi1BN\nZmAoz2yNsy/a8hDyHLlyniUfjQ+HYXdyZB1L8KCoMnwzuTn0hZPtp54nl6Nd\n/TFHx01Q2e2YSeFmsG4ImPFdMk+wRhlHO51U52PzGRT4mjtvpNJAN8f/oHyp\nmrHpjZYrZxbZ5NcOfR77Oo2UPSjX4KrljqOia6zbm4wgF340lk6wX7TRjbmc\nSK3uUKQDvKVSLPxSgMRerWS0NQ5SpLmNARUJizAR7DSwSz3BifvFjxcOLbJQ\nFWOKy90L94Ee7eaH1okfYZr9h/A2HA1BoJIjJB5TxG7p5AqMrfO1crUMfvwT\nmkIjWCk0QLay58oDSb82D52tSa/HcULKI8x8gD8QU3fEdhg5RY39Xp34i5WO\nlVX7ZfXYYNoUHbpDps/+KkXq1JwPbE27nl2kg8/KtqAp3gNV1I9cp49adCNH\ndUabcbBcbr2JXumMWZwCQnHsET6Im5ALMkNXAfu8Y0r2AazbZhG3uVOSLmIe\nNB3c\r\n=hADf\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDUzZ+i/0qINklVPcR4a5cRBBs+9hr4W2N5Q74LkF9+8gIgC1lpWn2tXAbsWk1+vqP6VAK1qM70xTU0eox+pXEHxU0="}]},"_npmUser":{"name":"davidmurdoch","email":"david@davidmurdoch.com"},"maintainers":[{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-internal.1_1628012874575_0.9120910022880475"},"_hasShrinkwrap":true},"0.1.1-internal.0":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-internal.0","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript TS_NODE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-internal.0+ed917fa2","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.2","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.0.0","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"ed917fa28aedd51984d9e2c41d15b7cadcb05e11","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-internal.0","_nodeVersion":"10.23.0","_npmVersion":"lerna/4.0.0/node@v10.23.0+x64 (linux)","dist":{"integrity":"sha512-nwVjY/12rEZSoz5SUqlod/QmNiaWmfM88GhyNqMUa5rYqTIgTayA695e7PwWBgoCo80YTMegcrpMQOHoEzX+xA==","shasum":"f522dc217e9fb0f447de7ea80ebb9b8452b02177","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-internal.0.tgz","fileCount":13,"unpackedSize":174011,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhCYphCRA9TVsSAnZWagAAVpoP/RKOtHGe4c/NWnXqFghu\nBAqIW3YvwWtrYw+hymcE5AoEWTw9WmutvprJFIMflgggM/ggeGA+Aw8EzEHJ\nRKjrm8bfarQw2C8HlHyWgdFpADOwaXteoQ+K6N9J9wb5/SfIGQbeSjCqQbGH\nWEsEqeN8pHaXErW6mjjhnPZ76dOQvTVCaKoFVcjDgftG1E159ar+ropUzmZR\nC9p0RKlpIrClWCKt19u0Fx7Crk4RKYwAaeJDvdLpkHsf7M0VDeDHnoD25/4F\nMOShpbMW8FGHfPHbyaGuvtqai7jmsJs8mcmZthnwzcO6VwQWOmBZoXtUzPo9\nNh5z4kwkiexRLrbmQ5wwdkSkCK1ZApLH1pxTgpnnfCjJ4bhF99UiK5YGBwdh\n2W7M0W6KmlzxUxdP7GbAYLp+NvhpWsuzVSgllePTwH/UVZ/LeMw2qiEx/dB1\n+p9H1+93GX9Hiqx8oXWGVfZcRT9IN6P7S7nmzoKrplKqELbYBpvYmqH+EEMf\npANTsLBrCtUrWTP/VEfCy07e86pb2CKYB49u9wex33drSk5HFt77ZextCj8R\nvxEqQE6fBw/t8mpJxKTQtHvCM6Co2i4fPO5Lahq6vBHjy2jNG7ihuPVWKkvq\nm4hbjmXahE8VWjCRe3ZPxFQRmcjUComIHGoiHHEcVAN8Q0ZL7jcxfX+xrbur\nU6vO\r\n=z3VS\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFbGgj4tCCfgo1/D3eTFbZYx0+fJUD6t5hPQRosKLfTxAiB/xBMB87PTSbGQ9Db/E8YDm44WGBTK2eyFg3tU/rg3sw=="}]},"_npmUser":{"name":"davidmurdoch","email":"david@davidmurdoch.com"},"maintainers":[{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-internal.0_1628015201308_0.4227689945429891"},"_hasShrinkwrap":true},"0.1.1-canary.2":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.2","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript TS_NODE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.2+bb3106bf","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.2","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.0.0","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"bb3106bf9f2f1389096d0b3153dc7e4b463aea69","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.2","_nodeVersion":"10.23.0","_npmVersion":"lerna/4.0.0/node@v10.23.0+x64 (linux)","dist":{"integrity":"sha512-jJPEdkq7Rl0vGfKJx13HvpQcdy/rize99cmhlv5bpUpiCjIsbX9n7VQIq7hVhw42HLrMY2OARP0m+4Ki2yeJkw==","shasum":"98795741bb185ed6e708b76f95bfa91f0279f833","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.2.tgz","fileCount":13,"unpackedSize":174007,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhCYusCRA9TVsSAnZWagAAtt4QAI+T5F3vCPq032bwA0zR\nwuWnRXtwoWwUbbtL7dQWHklje3zzq7DDzR3vqodBpfjAYFVV7UUKxgkBABPT\nQIWOFiQ0OYiwMhdoUt21vF13FmkI9lPesObFYP9g6+t2xBDV0A4L+m5sy8h5\nXBqFyHESXmJSS7shY5LKuu9gx/lrEUkqbgkpBGiPFleZyXZjlJdIxZoCfY+p\nCxcvDJngINPU/yCxfUDjSi+Z2UszcF8x1OXzDMWKXbVmtA0Ek2Cb8npGcx69\n5RTSezEsDReG3ihb+oHOjgK6s682lDuTGgCfAsM7jTFw/5X419WwFNXgK7WC\nqpGkfdwEA/k8mL4ImzQp1CWCN5c1bEQKSsaezSk5Vi1ad9VF2NudLpkV6R1V\nNVGZxdBBI8CRxqiyoN9fjsjz0DOhjPSo+DTBrqgxXEZ1qe2uIXMmgZcKsDjz\n3QzVn4PNbL2dKWfy8C0MTbJpBCT02GICHbjtlbgaHozGx2rV5EVaaX+wjyUi\n2GXWjfRUvxbbcxKmFhRKEPH4V9GNKFHTJ+YISXNCRjVPMQtEmBfDzcu/XGxu\nvUK9EOOvEK+H62SgE+1ialfXWO1OzNzPOe+66g5K0+HUaUxqXsiwqqP5Alha\niQl0ktDCYGiwobtJGQbqRk3Kg7lt8cnpoL1GAN72Vh56ZnxTHlDbqYkuL81O\nf0hj\r\n=2edf\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDST3/9aPpSM0GvCKJtM+foGihMfcwEycW9j+6D0QdS0AiAD2G9qBXEO7L4g9gcLZyfCb59BbVgOXCWyK39TNsa+qg=="}]},"_npmUser":{"name":"davidmurdoch","email":"david@davidmurdoch.com"},"maintainers":[{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.2_1628015532163_0.0984376556887252"},"_hasShrinkwrap":true},"0.1.1-canary.1307":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.1307","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript TS_NODE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.1307+edabb55b","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.2","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.0.0","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"edabb55b11e1bbba3564f34434f4b414bbcd41a4","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.1307","_nodeVersion":"14.17.4","_npmVersion":"lerna/4.0.0/node@v14.17.4+x64 (linux)","dist":{"integrity":"sha512-XmPfK8PuNqfa2QwjsapvDJu1qoxC8bdyoa4xRWssP4s7oZW+N0A7P1CQHMfxx3MDCETOJPc01wQ1AndwH6oaDw==","shasum":"497bf6b49acdd38e9d899a156d473ac575e26fa4","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.1307.tgz","fileCount":13,"unpackedSize":174008,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhDKXNCRA9TVsSAnZWagAA2jkP/3Oe9uaX7x8sTO/8XvT6\nLENRCPDZnkA0/EEapeKfBFjyJv28Zj9lPIYAqTD40Ziwa/N29F1g/e/PgpH0\nEGhF1RubgNF7V35qYkkes5gDjAAV7TEyWALZ6tW2gbYx2V0/5zpZjfucJst0\n+roZQjyaJdkPwFNE1IS8GUhZUEl8ZT8NQZFNihQXYHAqvtUMeQm/QNtkGzJI\njWTVS46KnObUFTfEg5uuNpb+kkY0QZjEVgUQdNbBSsskJvuk3d7P5+echnUq\nngCF/sJu1eRXQtZZekYasGkErZW0itsogx9P5zTTnJ2MXW1ItsWNXj1nXvoW\nOQsWN3jWxJn3HGL7vibBHSOQp46rAVnwkIPPXCfUacPYOTx+WNCaMIsphpRS\nnPfdrn0bYpCBNcIXHDUJslXanm/SkC8h9X2ANqQihA/Ceakz/KBZcq7mspVE\noqVWoAu/uQ0ZegmFuQgYmDXJwTZ5HiGdu9GdnE5sQVCh5g11W6rdNIKFXRWB\n0/wm+hhBt3r/g6KIio+NzyHIoFVsWwAXlUIrX2obsG2sZgbW+gARnCeMh/vH\nqJeg5UeX9M1szsmBCkF0C8TCBsA9m3kOQp76LYwvlaAigGm1B+jTS2pYC9yb\nExrIlFCSjRqETG0hcQxCH7J1KWigxSHHNoIwux7YhN2y/HYJ3wl9J0J8196y\nFaaj\r\n=ARRg\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCC6CtPyzKjKtzyGDQUpSEYleK7pRzqwjdme+FRaW5cfwIgQorSQWCdSagSnl6wdVm7T9gv6nPi3D1mczAqWhtbpoY="}]},"_npmUser":{"name":"davidmurdoch","email":"david@davidmurdoch.com"},"maintainers":[{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.1307_1628218828863_0.8446743541952233"},"_hasShrinkwrap":true},"0.1.1-canary.1310":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.1310","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript TS_NODE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.1310+9213ec5e","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.2","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.0.0","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"9213ec5e10fe6708ef0cbb29258878bce4d25d24","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.1310","_nodeVersion":"14.17.4","_npmVersion":"lerna/4.0.0/node@v14.17.4+x64 (linux)","dist":{"integrity":"sha512-8oZKHFQeNt7+FfEH5eZvYhuD6aMEvpNThW7KQIuTzRMkLBBb4I7pnxDWZqKTAVBF1Q3au1krAOkJnR1T/XToVg==","shasum":"6254799d8034e67254d6b30cd5f017616b60a1e7","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.1310.tgz","fileCount":13,"unpackedSize":174011,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhDLGsCRA9TVsSAnZWagAAl+0P+wR9OvongjYc5Pu8/GWJ\nuZpVoY1n69Msh/IbJT9Hru6Ae00K3rfVyhMNywQJjhVd9U9oh1ff+F36x5fg\nZpElbBrF6dvWJQ/15ZG5ZZLTDUC2uZDDLy6RGI9AIQ2Fj2EocfYWYhtUJadc\nSIiYZBXpTFT0/FOyomlqRSr12kVzXdWV926gX11Xp//tUFuvLzWowYNNWZNH\nJg1++O/fmCiSdl2SjN6xSU3ssBx9nH6vUscguHfMqXLDAT0fq2ptD7yNcZYu\nFc6YtXSbeomIGidl3RB9AEjqGTj3UbhUYOAQK4EfMxz7oOSMhiZnViqJ1uL9\nl6pEnKwDGgUaiLqJpYtize8iUmKD721BcOzL8sLMq95Gbsmqcyrqo0PtyknI\nBBCKpOBqEeT1zLH21tWn+7G50Vd6M4hnDJEaWHZX+9JDkVWHQG8PYXzB6+Yj\ndOGlNAusktE6gw4NxfOemY8phvX5q+pWU0KBwu4NOKHoGtzYbdSSOtnSkOBB\nXHUKV1QeViXD8BIYALh5RBGT0rq6OpozCcDc8I703VPQsC4kQmEmZ+tYSI2V\nIdd2y4tqYde8FEr6YydfHDcClzqFjDmbEsTVhQUN8fPkik5SVSXPWW0YTWCv\nSjyX4E8j6l9SJe8g+F68FJyCOruuP1OCwAvTj7cy7+TUVyyVthNeNc/5Nq+2\n4ORZ\r\n=ALib\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCIz3bA7tjlNYzXdcliRPPUbojnIf7HSCpxFtNfymfwLgIhALQHfchZ/g10v/NJ3m+UpFpSMQrmsvJPZVQEYLwi4L9Y"}]},"_npmUser":{"name":"davidmurdoch","email":"david@davidmurdoch.com"},"maintainers":[{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.1310_1628221867875_0.7991794330478621"},"_hasShrinkwrap":true},"0.1.1-canary.1313":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.1313","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript TS_NODE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.1313+1ae4c4f5","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.2","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.0.0","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"1ae4c4f5522c50c53e35dd73d4731465b28ce386","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.1313","_nodeVersion":"10.18.1","_npmVersion":"lerna/4.0.0/node@v10.18.1+x64 (linux)","dist":{"integrity":"sha512-NNN2/QQ8V5Q1NLXnKiKhcTOCajpcP0dqkYUeiHlY1Qxpf8epyAlKxUin7zIf18/C96U1wzsyL6WvhMniffROag==","shasum":"b1e5e7583a4ed65f9e4a9770547b798e7bc476bd","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.1313.tgz","fileCount":13,"unpackedSize":174011,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhDXQPCRA9TVsSAnZWagAAKeoQAJCslyLmoCpXdEPXR/xW\nE0GyfIQIuKnsTA/DDsslEdWO3Xu5q3dcHQ8QL9Iz+BYmuhqqnp5NHxJXIVa9\nPdQsmi6Bbvzi8w9EuIfErtD3nNC07be+4VA3d/gplJfL3QcY3TkMaZ8171qY\n3AyfEkx1XrL2dWKVjKiYp2YK9QmYl5IcxhHR8FIi6MfU0DEpPbcT/znHQtfT\n9duSLgwtwkEyJ6mk2On6HKUpgi+ZHPu6s73p8KEzK499pjQ85Wh2tV4PSuby\nu86VGVxwLGdzerj9G3zy72zWhA9+Brmll3xoogDKlN0d8XxAlSFP75/7thn1\nnzizcMfyGZ1MkrdyQpqwm/C/vFBRRKS7imPKzg9h/pAI7U+Sp6q+xNXVuufm\n3VIMBqdHwjg+MysyYbZ1MLGNfTkctyGZ3i/G5uKRHYgRRy2xgpp6Ef4CR7F1\nJX5N8XeLWlMIp9u8G7taWEg5l+LH2KhNn5sANMBmUti37YXgoJfkWpmuz74Y\nHjNtiW2J801fAUVrrX9adL37G2o/qjxX4kXrYkobWYMonnJWixiyHRLeyMyu\nxjhdaxpAzAiIkt/3G6obJIaT9WQj02zVki687vvf7i/yyXGgXYfr2rzlOe+T\nZ2aOxuFKwDiKu9r8+aYzuk4LFisXhT8FpxYeoDcu8pxXLpoN0R4Er11Yxh/E\n5NjR\r\n=p2lq\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICNokOxZB9LKcDm/rqLzBCVhIAVaDfM5vXuVtetgnJeZAiEAsmEvH1/ARwQQ8dHWpUU0unwGAweqUAylZeCt8jYXLYg="}]},"_npmUser":{"name":"davidmurdoch","email":"david@davidmurdoch.com"},"maintainers":[{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.1313_1628271630806_0.4920331705351184"},"_hasShrinkwrap":true},"0.1.1-canary.1318":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.1318","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript TS_NODE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.1318+5e6032d2","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.2","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.0.0","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"5e6032d29ca8134eac334b59ffceab091f84db27","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.1318","_nodeVersion":"12.22.1","_npmVersion":"lerna/4.0.0/node@v12.22.1+x64 (linux)","dist":{"integrity":"sha512-F+RHpNFvWe5jzaC665ELnLDF8+9sTOMFLonzJFKiiNauwiwed9cT3sauBiytLZTMKMLyrraVVfh5oFRFfWVBtQ==","shasum":"39b002413a505894d72225cfdcb14353df1009c8","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.1318.tgz","fileCount":13,"unpackedSize":174011,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhDa1NCRA9TVsSAnZWagAA8zMQAJMUUaQP4d7c1bGtFkgN\nACeWzXBEMZifC5SY3Sn6CAWY5Dstxnm0rV3jqEwqKqfNTwOUCRVTed+wGXq7\nGEfoOEbbnA/IYFZC941GquusrINYnsyu0NbuydC2muKjM3gn+m43TRy6UzNs\nw41lBovtrEOzBty/ljWTE4fc0UGLwGEPEgrdm17Bp3M/xjyNhMll7t7dAM6i\nvNaaFLUxKhzhMRd0dYWBuy0cPG8na5dSgQxoZz8eOfe6poYU3LBNqkGJPxP8\nOfgea0tI801d7SEgC93Ai7fEx4W/HWXZxlbeEaoBOWbqpC7vAKvzGK1rggBR\n8c9ZFxzZ/slpjIN6Cw0reqPEdKiVi9bPPVl/UU2K6b2NIuGBavnmukUx+YFi\nuFiZmjfW7u0nhiNfvfrr8eSU+vyRIt8kIaN6RZ0yb6OK3PANE3qDNHQ8aA4h\nCBaDZCJdhTB2AbyMfljyskW6wFfdBlQLxrWCfnYBRQp4Iz8NSTA9NMWKULY/\nxUy/FVpISnBnWIZnwrXLVkkRm2wnGFfGS86ofzja9y5yNhfaKV27GvS53vF6\noUiUO/uWPS+SXakv6bHJ47HLSPAPcZ6d0r5yZW4vjmPge256dV88vMoEescA\nlqtTsUcoF2wIdkRx+nR1wD2Va+lVt1i8Lz6uuSc1wFZB6oyUPUcMjGM6iC6l\nkXD+\r\n=Z8OO\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD1WTRI3Ar9waDHWhQdQInCyG/lExgGK2YJWNNZxIfKkwIhAOpYsrQp32PPZ6z75e8yTQfmjKtmsMUccWG18I5WSl6f"}]},"_npmUser":{"name":"davidmurdoch","email":"david@davidmurdoch.com"},"maintainers":[{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.1318_1628286284838_0.9033308746613917"},"_hasShrinkwrap":true},"0.1.1-canary.1320":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.1320","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.1320","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.3","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.1.1","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"095f3be78553500e7dfed217253b8b68f4feda93","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.1320","_nodeVersion":"14.17.4","_npmVersion":"lerna/4.0.0/node@v14.17.4+x64 (linux)","dist":{"integrity":"sha512-Viujj9EKu+f0jzTmO0BOOZBu2GeEAh/HND06NFXU/Oai7XXQjFPcw2GVuoagDVloCBPpzh41IxcyqNEFU3z1mg==","shasum":"c02f8c7e5b60eea5ae590eb282e7e2eba2a11899","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.1320.tgz","fileCount":13,"unpackedSize":238038,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhEfneCRA9TVsSAnZWagAAkE8P/Ay70i2Q15qn1sQzD0fD\n1GqzxqUKZRpT/zKPpQDdUEMG01WuZRj/4VT07D2V0Bshy1DEk9cXGxhs3X2/\np63WH8WnjCCTsO92SQ1DSZRUyM8mIoM//ATaEcPpHOyUkn0Ztua+ztI2taw0\nIGdLtb4+sl4lvXoQ6OfyLt74jOjhwY4WjWnWocMP5WebkFdi4RECMsBOta+m\nqDoMCNHYRHMTU5p4wDr++i8F9oA4lcSFeYD/4YPi7gX4Rmythb9kzeYroWD3\nlR7needos4+/nytUvvcIbyMGw1mNQE9/lDs3SAntvTIHNzQtUZ4azOZky/Zk\nXaB0/31650K6L1IwmYqUQ4lRxKWYwtnCgGC8f1Hleyq93zzqA1FTeuXhz2Ci\nrrLHTcTLF9i+YVjz8bcqUd9+XBjfwELxbJaLEaz07O1kNVZ0x1DWwzfpAA9i\nWlhp51pbn3CHQJhhbHDmuEKuARTIMKxtqbz+zsiJDDePE45blomjrSfdKbaU\n62ywPoXkasPDJcNdP5WhVlvpv5sJxHBR9yG/Q5kgXSQOUglbN/gjR1w+Ndjj\niPol2xKK5suA9VQjcGsfHP7/3otD9A2ohEa8hYnaaFjO6inaVOQXpZBjJjzG\nfZ434zF5ibReXPt2n038M1tCVseG53Nx6LFHVeBW9Me63uzXSptuSZaUI7A3\neCQk\r\n=wpvE\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHGwSMVoCO9aPFUYN5gJi2hYPbt1HvxWwEcmNOAbI2fpAiBY4TW/Z+9JrUxPvmEmj3JG3921f2vLDEwSh8fzrm/6SQ=="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.1320_1628568030175_0.6416526355257886"},"_hasShrinkwrap":true},"0.1.1-canary.1321":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.1321","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.1321","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.3","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.1.1","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"c5b9aabe34baaa2eb14c43781b2370d49c08ade4","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.1321","_nodeVersion":"14.17.4","_npmVersion":"lerna/4.0.0/node@v14.17.4+x64 (linux)","dist":{"integrity":"sha512-aY9BbrSSDl4vNifiMqttEK2+OkS7gc+J6d7aLoWkJsPjKvo+rmjpm3ImKfDFfQEf6hd/qffQ8d/JaljkHtnMxA==","shasum":"249e31f62d581ffca0cc912365c21431f270609e","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.1321.tgz","fileCount":13,"unpackedSize":238038,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhEf7LCRA9TVsSAnZWagAAhBUP/3j6R0GLySgk5LFqNPEO\n/lfgwb3T4g7a0uyF6w9FhYC4C2fJqXJceDDVK8zP7PPE+3k8GIWXg3pHOg4p\naKV10WUghaDwaqZ+gIXv5BG6+7cGKOtveakmudLYdUVAT58F8ZUMa90ytptZ\n6SBKHU3Rqd+n0D4Jgt2qWyMAR5DLiHVIG4LMLca1vSSdh0iHfaqRx1xwPOE4\nfl5Y/dpo9mUO1Q/SkFqq1PT4r0atdPDE29v7j4ba4Zwxw+pl36PohWXz8Ul5\nxs+6EZQrm6AmCOuulrpLEGtf1H2IZqDBxwSrbhCFsBsgM5M57qZLPMtGSJSt\nuWqcl/8HiafNIrzgHPgISJsXR8JB2aZ2/uQOnKEObATiMl172j/onwxwWztK\nRIEqPwoFPjIdzn0TBUS7AAXgNcMSrrlIvQIu03ZZwe4tVhO7uRwAVRSsxF75\n0iv0dTxBWUGuX/ZCJCzveud5wnjqprRHXAC5BQWeLYAwFh/6bFEQvwurCiHr\n2Bdp/lmZJBYEmp3O++btIxWAHNQuE+aoswePFlFgffOAeWD4v17Asb12TMBH\n5OM44T8OJs+5a8Es27kxvzveFV9gFgRGkeHPnyBRQ0lpuMfG1Uh4iEeS9HO/\nZwbcx6NTsQYAh0L1vOxtpROOw/6jpuuOwynaPS/cis2xa5U6OGKZu1nQUey5\nYXAR\r\n=5rzD\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHf6V0VLzcwCJhi48fO/FSlEL2C+IhRFNvvtcTAnTrIyAiBXag5wZc4J4HFiyID5wzsFUchdQ4h3qvWMHBS3U+REUg=="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.1321_1628569290872_0.49362056113037567"},"_hasShrinkwrap":true},"0.1.1-canary.1322":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.1322","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.1322","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.3","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.1.1","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"f76f4abe97d81999e4a7d8847824ce3f08e16cca","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.1322","_nodeVersion":"14.17.4","_npmVersion":"lerna/4.0.0/node@v14.17.4+x64 (linux)","dist":{"integrity":"sha512-KWvQ/J2EUs0HXd2SbPU5ciPFyV6BscmPcsZ7vTq7V30dkfVTycr+xQJam04EOwBcqnooBQt3wnTt7mvef5n3Rg==","shasum":"7020b219d5b0713405fcaa4df9adeb5957b0eebc","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.1322.tgz","fileCount":13,"unpackedSize":238038,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhEgYmCRA9TVsSAnZWagAASuoP/2FcdDDd35T+LmIPoLMp\n/9ZhDWiaIJ0F8og/hM3oABqXn9cyLTUhT+K3V+KalSp+z9FPZwnCgE42ASA6\n8ujQoM6ZDTZPJ5MGfQppZWvP6Q9Sx1uUwQB6I9YDeUWhFNqHINxBFrkZS4Ul\nCmJH73gkLstjM0tx5TSpbJepUzdpd5rvQJpt25MiS0ohiGdOjz7YLaJWKY8J\nhqGalZBskAAEz0y2ebLjekKJJ5YktxRd/6x0wU7BXnvwZdGXsY5PNYc8b30f\n1fNk5D0HzXc4ykwR6A+3NrgRCht/8x9M+Acxj7pNVYiBEMWzbbyRrCUVziM/\nX6RzLNBpPdFr+c9YluLil/+i2UXm0dqPkd4ftLwGSQJEC4BpiXYkxtL/sVn6\ngrVVFPgj7QPOZZB3ceHy8MdQQL+FbVhY09JrGoKMzBNLt+kvpNN7lYfpAQFq\n01Ce/+/PBMaoMhahunqwgC7tY8ZZrwXiK1xb6FIickWaqMfNS979inn5nrqU\nQtxmEEAvWTP1pv3+vQiu28SnQiM+fqvO9Hf1YBB03seeP/Wq0aVognTwuC1b\nDOdbUMJnFh7Q0YlE28M0BbhAmos+NPuziyXQVN7iYDtTpjsn0toR7GOUGjBH\nlhfBOQtkux7glSwZ3zpEUkuMbRX6W2X7sFJrGQ7vxKgVTHn+rWu5WwArjcyo\nplRj\r\n=36Z6\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDKD4L9QvANsf4D1NS+4+hWK3+9ecQ3C5o1FqPR6Xe/AAiBuEi0gEt17rcJq6qz89lTArAKkdD5EcG59AjD0cftZSQ=="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.1322_1628571173826_0.70736298091331"},"_hasShrinkwrap":true},"0.1.1-canary.1323":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.1323","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.1323","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.3","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.1.1","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"86ee0566842311adc54adcd0f9d2b3806c00de9d","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.1323","_nodeVersion":"14.17.4","_npmVersion":"lerna/4.0.0/node@v14.17.4+x64 (linux)","dist":{"integrity":"sha512-edMfpASfe+dKRs41VBNotBQpMmy9dR4FXQZEmD5Q0TnH86gfQSN14gVnPP7+ng/fVcLY/z+l2ox7PAYW7+j9HA==","shasum":"ae8057e64aa70745c9ffbce0626d4d95d8fe78ec","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.1323.tgz","fileCount":13,"unpackedSize":238038,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhEg3aCRA9TVsSAnZWagAAijkP/3oiFbCpAY2/CynfVcX0\nInJdIh5flE0e1FYx8loiORU4/emlxggyn4pW3pnnA3Qg4VEEPUuejFiuMbgu\n2F1OW5v3Rg5mLgcdu6zhKjy//2nnEwovMV75VPQGczfbzHSJ3ENkydDVg4oT\n4zbUWgNXGCz5l+8e/CTc7HQcyrX9/xnqfmE5IiJCsRDw4aHffRZdLIdO0Ug+\ne8vbJbitjj0wsiuEY5uPEDnLUw+t4knCZHSNtBKSG1wb9yS1kMFc35vLAs1/\nYa5Gca9rVyiKyorEynr/pdCr8sHD7HUG+keQfCUc+6TmdHdYS5WdXVtHJ90L\n65BjeEp/RU6Z0OCCe98XFbl0U2urnDFvY7LzJbyOS9UbVS/QNDQGIaYkwLUO\nhjwIsQ6sRiKdrRQsrgeBgNt4/vu2/4eVIhoblxD3T9oyiMl+w925UgF+jskT\nsuTG2opCNaP+hY1A67heBRGs36PXI0VCikpEJTRhu0TTK6p65aAutJE6e6Og\njkXEPXwBipEwkvGBaQsc3vsrbiOhEnq3UWWl4ZFt/E3aBsBVsNr1MzKEdLL/\nQBupeuOExSWYze5n9yRGF2TdOauKvg8bV5kFHdlWP9mEnQw5PM2mr3OrLpQb\nnq08GN4bs7uMnmDTgDlQ88vrjnpnMrXScCPWfrSn7XHXW+e0N/MyV6qTh3km\nlRTE\r\n=6+ef\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBldQgMrVIsUb8CH58mfLpXHUJZ6h0EHlXPU9VXIisQDAiAmFTxRKV2suikqwkjVxatfc70YkStowS+O1e+2PIKkGQ=="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.1323_1628573146035_0.22376448023241768"},"_hasShrinkwrap":true},"0.1.1-canary.1324":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.1324","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.1324","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.3","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.1.1","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"a36eef92b9e80879c32246efb3379c9ca1b0070c","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.1324","_nodeVersion":"14.17.4","_npmVersion":"lerna/4.0.0/node@v14.17.4+x64 (linux)","dist":{"integrity":"sha512-sM6R4cIZ6YsMe3G0l6JZb5YisqB6N1mtPVdH1ipM94HPnL2v8imVC4sIsC3tDOSUOxeXJtexGiKGLthPQina0w==","shasum":"fb88ff3d05bb5a8052f16020e3d88a787f82a505","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.1324.tgz","fileCount":13,"unpackedSize":174642,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhEhMfCRA9TVsSAnZWagAAb8QQAIpuJbmG/egnh01Xc+Ut\n9fUi9E6AOcR34xkZvsegIk4X0D2F20pSxP33PZ2J1m13bBZmh+lsixmwOeMA\nrRvI0iKFDTho3Er1gdsUUHHmeWQNbqcGBnyEO6lmcToW9MVbc6Xrcf6vzVlS\n3YJ1MwVzKc0vIlkmQce1Yo2E9+07LlOW6KLk9CbmHRsN+2wySwl1EQXYkX8t\nowsBeQHDOxE4tHPIQxhATM62ybA8gaFF77PMLu95klKaB8illZkChDOaWyYE\nrrgc4n+5aLSTgLDqgTZw00bXVNZvyUlDoGNsc5V6RXBB8KknAAWfVMiZx2FB\n5fRI64dJgM8Ct8rP4Fw0Sd5Hydb+zzFyhiv8X7EU+BaDmzBoH/kCY4LcBRUF\np/7G3/fL9+xBK+TdjWQ3AmAgDLvwtfFbRCClUXnj+ZzyVP37JsGz40J7rU1D\nhOx7TGm03J5TOvpzn1I6v7BEb+F/wldQjqhdO/q6fO2XRo6ew9AUDSMRVEpl\nMhef8ltz/4mQzDOQw99POFWbPG9T8HBspdRpSRbPPHN6h7UuV8bl6o8Z48rZ\nIZw0GetqWcONnVTT0k7VrioJUEJaJ263e1C69pLPgFAMzRsQg/lb3xJA4jIB\n8jPuQ7xQyVSp4H+N7re9TTnAkCoOt/iDIJ1ZuAZkwJTQLX809qmx2r1bn+to\nrVNZ\r\n=s4zW\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBcOqyShQkFHghUvdaVgox7BzeNSaALLdMQzbSZSw22eAiA4m2bgTJ8UwlHG8sqbdc+qLgGAcUuZ8q9GBv4xM+LI9A=="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.1324_1628574494665_0.5542287956568301"},"_hasShrinkwrap":true},"0.1.1-canary.1328":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.1328","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.1328","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.3","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.1.1","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"2db10b5b0ed9702ce6d8ae4eacd9d404a8ab2c6a","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.1328","_nodeVersion":"14.17.4","_npmVersion":"lerna/4.0.0/node@v14.17.4+x64 (linux)","dist":{"integrity":"sha512-gRn0EYKbiddzL40dZ3jKJ+iliiLwDzjLYQfyA5WqP50xnZQMlQKCT0KQxHGwkIXpz7as1g8xHcYotDZGFvs3MQ==","shasum":"fdffb1660a7eaeef1093907b20fb2441093d46e9","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.1328.tgz","fileCount":13,"unpackedSize":237656,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhEiJTCRA9TVsSAnZWagAA4ycP/RvsV+iz5jarioS/NNhR\nMPnyl6NRbldrO3ybFeCuBXEf6paSfbwcexuBPrrL4ugDlEXA+ghRn9astzgm\npKHj1LVP1y5rAqWYbQdcx695ifr0pRtmQ5H71tgAFu7YVCJusBRuJSAzPNxG\nybmWr0R56/bnSP7+YC7VS+fEgB0t2klnbsiQcpd6DpWE4OHBMdrSSKHNdQZx\nT0VwhYDwDllCT6fMl/nUk7A6VzigZ7vSXutK86uK49cbUWz6MOxPoKyG1jSe\nnLMUy5Dvg8tWA3jjHCs/XWkdtBKH+ccpe+XDtjAbIUSp1I468VoFFZ/SLlyd\nxWaCMMOlH0gEj0G5hBXnj40/vcQqd+hArQcd5juSYYSNW2pbWx4j9HEv4/OP\nFItiCF6d7y/ULWQndgQ+GAngmluXW6ma4buRYvIc+amrxYAbgKzgzxcEAkzX\nhxMSzd6tokJn7qpQu7H360l4sW4IDyckbITAvnIJJ0z1d5d/zwLgffSPoIKC\n6h5YL63fusnjGBzKBfwIVDQmdAEB1SUlnAEhqbfFTkz4dWXAL//v8RIQtdvn\nywAuomguqUfWfz0OxYVFAoZFOkdxC8eMiWq67pszfdFe4h4ZVbaIT0/mEzF0\nkujVhMhcO8rfUbD3Mk2tMAAY2vaY9R8r/SZRqvr42Xff0921DGsSM3Ujhkme\ns0Js\r\n=Pp5A\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDeOn7O1WalJeQkuVJRdTVKDYlI6EZwfQTKlftBGTvwygIhAMlmipFUE6f97NOPJGAxKFiNxx39x1nDezfhLldBrOjH"}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.1328_1628578387418_0.931749710278408"},"_hasShrinkwrap":true},"0.1.1-canary.1329":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.1329","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.1329","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.3","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.1.1","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"f366441c6d991ad3c01abf7251ac9839c140ffb2","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.1329","_nodeVersion":"14.17.4","_npmVersion":"lerna/4.0.0/node@v14.17.4+x64 (linux)","dist":{"integrity":"sha512-VU/ozu8ZAIwYAshk26gv48iReSRedEDv6ClB4PU/OK5iMm0hizZ1m/JpoVezeDJwDqcbuBBdEyxIxxtSWH2scg==","shasum":"c443c97d9f2aa8fcdac4c6653748d245156a5782","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.1329.tgz","fileCount":12,"unpackedSize":98300,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhEoNSCRA9TVsSAnZWagAAemQP/Rq0YzOuvJ2/Ns8YMhKG\n7qdGP68DwXOYXJPO7y6dswDZV2FCu70di40WHE4RWa+z6MdcbKD1LPdY2aki\nFgLFCUQgeM5X8nS8WC54bUi+dqkCU2knqGvqHGYIK8P73aOl58ZcBxOu6Zao\nu7DnWK3A0GjphNUDErjLpj6QjnRuJ3QewLCTw//5A50A0vssZ4ye4ykf5o5d\n117diOCukugIwEvkemoJJNePw/gEMwgQS9GNcxDs2rdi3/GgSf9+VVS25pdd\ndLSuNk9/n7GUyozO0P2+8GUT6yCMWialr2J/SO3dA5sNItCRmx+OznkGKpjK\n1E+UFmlsVljgJ6eSZx8UiqT6Dk9fxxIAbyeZEbUm1WFRSM+cU/61m3MS5xGn\nKX8EkM3CpcpYbud/B4Ho6PsQZfap8bTgJE0llExgUsPBxTmy9V/x1y8F5Psz\nJ/DJ8J10SCYtfztKMYuNOZzPlNOg20Vy6eY4yDQIpTAZRCe/pjDDJ/s3T3ps\n7SpU6lrb4pO5eS13QvUSYVd57Ih2eTw9cRNenW11rvhcu1UWZec4p0zM40W2\n7HpJCYMAXLIzwUVw6NLvRTK0a7TsmKMblYH4crLXNnpXBPQWP+L58sanuhCF\noTQB+q50VBAboHizQ+t46SbnxfupedQLAVgkYw4MNNxaCRr7MqtjOe2c98DD\nuy+t\r\n=C7Zn\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDz36PBwgVnio0OXYLxfOdtbQv05l4nSN64gTlmz21VjwIhALBK5owKAXbPcth9CN4eQF9OmKJYWsl9MCmgMtYjeYxH"}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.1329_1628603218165_0.8444959693505876"},"_hasShrinkwrap":false},"0.1.1-canary.1333":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.1333","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.1333","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.3","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.1.1","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"2f63aee3274cd107172ba94f2d037b9aba23892a","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.1333","_nodeVersion":"14.17.4","_npmVersion":"lerna/4.0.0/node@v14.17.4+x64 (linux)","dist":{"integrity":"sha512-WRwjGwEUWE+NonvwVOq91GPRmubdYe8jKRZe3DUQmYsIP5VmU0WEMgPikrGfxzV3na6dM96YM2s+nQLNbCsZAA==","shasum":"643327a8460355a44277c744c14cda83578b5c4a","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.1333.tgz","fileCount":12,"unpackedSize":98300,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhEvv5CRA9TVsSAnZWagAACLoP/2FowVTazrlLddjLQwrB\nYSKMqBaKjmKPCepIYsymVpUpf8UIBnRtMl4SOpD9h9bGybjJw1BcyoD9RXJF\n+aBLbXjy1mXnY/RPBwOcO0RVNfUZ3Vf8bVWlGKoRTQQ6GwOdWkA9WdebvQ2i\n/Xrvg47v1OnTusBn8esQrSKm+2wM9puJqFifYOvhvZxlzJyUzGRbOJDi1ROT\n9p9T0ZR1lS9Qm10GPmZcUeLH3wamNruf5O95EiRfrRTFCyxcYDie3dkzWw9W\n4wXXD9e/Knx9j7Da+/ijusKig34MUm/582ZUQHAOFosD8497cxTiJ7CNKmr5\noKWY3iU2NYpN8a8Fnkyicnx+kXN3A16BMZqw0h9+rgMHpIstR52/xrOLZqOG\ndEM9RNG9yMjKmg3pn0Y21O2kbpvPRop3AvQMQxCmU2VQlBTayn8v5RSM14ZG\nt7HI1FUJrx5N+CXK49qvTNKm2S6Qv/Di+jKDmQ0quDNijktDSsnJd3R3zKJ3\nKAsWHZrkQ3KHo9+LuyUa0+NCePu4uwgJ6w/0A6wdilyPKbJls712yUJLq9+p\nYlgu1mAwJINKSXAyDEJ3o1cb/qV5yLk8uLIrcyLL5pHvqFtYRx7MqR3M23vZ\nks2Mo+KvXGE86tQ63HAFVTllNrYcERpib0VrMB/LIqDNMRkyvmlN0qMLxBeX\niM+w\r\n=F6Tp\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICGZmgVcp0r2golxQzbHehIQnAqXvPOnQhrAxAzK3WrYAiEArvZpzMv1iEnVdSgSU2EMfBAlwKa3LBTR9OHopfHSPYc="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.1333_1628634105203_0.8357466023319529"},"_hasShrinkwrap":false},"0.1.1-canary.1334":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.1334","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.1334","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.3","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.1.1","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"f0252a74cc68d643728a680d498a8fc0281493e4","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.1334","_nodeVersion":"14.17.4","_npmVersion":"lerna/4.0.0/node@v14.17.4+x64 (linux)","dist":{"integrity":"sha512-Yz0X9+rkRX4ULosdvOddu2CFEK59qD3xAB9rNWJ6IEy/TrhwHf2h0Ck7OSaOgH/Um5j0yjivR8ry7Tet3pI+HA==","shasum":"fe6a8ef398d91cfd863ab5b5898640d01235523c","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.1334.tgz","fileCount":12,"unpackedSize":98300,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhEwF+CRA9TVsSAnZWagAA3JAQAJnl8ANfVkcpMZh+aq2+\ngsdHvnUUIMS5fLQhhmrWHfs3MhxnOAj+ug3BNFfQstxXIMak2AwCRtb5bojy\nEDQrEWZeIPG8Fv8Cq7lo9oFhLtOeH2uuo+4qdavyxAzucMg8Nl+s/MjSwHfw\nBESAleLqt8QqxF8DIKgksyAfvXZ2qVn6qROg6f96zQp/9Y0CuZBwPQrm+/UX\ndB3PJVmJgX4RWpBW5Vmr0neRn0/66lX2gyfPdbZPVfm7iSaX7gBdDFe1CAmK\nUiH7tbWYc3ncHeJk1v6FLD4fyqXwBgCbzcXWolA65r8A7TL2Ycxs/4R30O9K\noWbWPWH1XNlYVqLQlBOM0QA0fM6XwCoH8NB9WMD3GppA3qkh7H6nm1cvqdLU\nVZJLc4n5+rOlppc7Z5hb1nxH/gpm2QDHPCi5XEg2PhqBqJ3o+mLN0OUPs1IK\n1l+qtzt4gvqelm3NquMaZEnuayKFyAhqrxejlsFhXDcPIojWMiM6eY+9iT9l\ne7U0VGn+ZX6PDTukrtG31jwsTuTMPa9RJlc7FlUVr1KheUlTNIZiSxHRunLD\n21iuT7P3/WLL8mZu5P6HFw29XY8xd5UjJPApBiRJzM0ydrG4KinbCMdxDhmk\nPZhY3bQSQ2M6p2JGBd1pLjppxzNRDB/Rq3kDF7fpgjs2MvCySHnxto/Esc9e\nANa/\r\n=BL9n\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDONCywn7l3o4wp5Af06Ou0fY+h8yQg09sm8vSwFPy18wIgFyCQ2OTWyL9MmEG2Sf0dngCTH4GZ7jBfVGPEFO5xP9U="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.1334_1628635518297_0.0077970626304808555"},"_hasShrinkwrap":false},"0.1.1-canary.1335":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.1335","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.1335","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.3","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.1.1","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"215bb16c732909eb9ff49cf0b4307e37f08147ff","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.1335","_nodeVersion":"14.17.4","_npmVersion":"lerna/4.0.0/node@v14.17.4+x64 (linux)","dist":{"integrity":"sha512-yjGtdnrYxXDOIX4zaW44WRNNCV/7R4KfEGCcYBCbfe+9mduprZTPUdtMB5MGjdpvjyQufU7NeKGgSQSNWS83Gw==","shasum":"eb2d4a4fdede16f77429f3bdc5b1e4eee2b05ba6","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.1335.tgz","fileCount":12,"unpackedSize":98300,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhE/k2CRA9TVsSAnZWagAAaGkQAJXLqNuPLK2qeOA0F4yP\nMC7L/+ZqgKtvutqcRIxaFE2TnVFb2wgAG82J/0o5vwIZnZlhM05tYCpDH+6L\nUrOyJjUZqKZprHqR4Ku3yT7FbJeOG/l1skCIFWTQlxVb6+8cx+bxFHX6qehq\nWx6Ra3hYv38c/C2Z+RYsTqtq0BeUpAgHboyACwpmUgAbd+o3vHSRrTTbD/h2\ncCN9tZL8Me5vhPjAt6ArJ4ovbOoiULofQtp3I8i6mymRGLjpbKjPagldUzjE\nytpRshih6jMU1LYIYvPdt/W3m3Q5grpyrzhHXCfUco6U5mx4U4oBPw0RLCFf\nRsGYY+4o9fTDzODS3uA8K+gxg+SDKneewJlNzHhnPRJcSINPNR/y8HFt+eFr\nK0nJWimv1BSrJ5B+HT1wNmBozxr8Dc4B/qMMhVbWVdByoPz9kgZy/BnA7cr7\nh20UbeLgPNcUYm+5tFV3EfEUiVx3191kWUjrmJJwyyRnhx559ocfkGVLNz9r\nRHSbMvhlxyjohUdPAx+qcEbZwPOXub3/QCRPo4h9AhFv69su5EYMjNqOiGIn\n9CYgUS+jY2YLjeTBntJbaEkWYH3EHyqPTeq1EVrGiJHIJREBOuvYgKUfR3B8\nhUf3eVuE06okgKqaX4EOMWzyE0CabnGAjONMHbtF41/YrKfWB8+pz01X86rB\n9wj0\r\n=VQgy\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDxZnhxaAfupx9fptZhgm9vX4SiltzE8408uNUF6Z3NuwIhANL4to3mGh7f4laZ8C4ReRdyJ3bjrqUwTzPy5L6T2vwk"}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.1335_1628698934165_0.06368534450031449"},"_hasShrinkwrap":false},"0.1.1-canary.1336":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.1336","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.1336","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.3","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.1.1","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"24ef535dea5941999b2cf2ef89aa1cfdc6018a55","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.1336","_nodeVersion":"14.17.4","_npmVersion":"lerna/4.0.0/node@v14.17.4+x64 (linux)","dist":{"integrity":"sha512-5nOBw5Zgb7EulshoCvtRLMV3aeDupO7VgkJUdEnl8MkPcAR4yHlOCjfHyopG0NyoouSJXZP4MKTfK9IhsevbRg==","shasum":"7173c90abe808d1ce4027bbbf3b85a3fbee32505","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.1336.tgz","fileCount":12,"unpackedSize":98324,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhFeBcCRA9TVsSAnZWagAAwPwP/iV86P4lWnw0XyXAWxqr\n+nXn1tHwAFs8BT6AxXiLNYDzTzoHD3j3+yC/VRHgGfespUlEHl2c1Q8z+Pga\nDX3nQ9k5v+UlnySc0LWR5V6un/5OZI+NnK8ySLWkHgHiXLr/RY/pcovT5pwS\n8sXd8FEcFrhL9AFjB00J3ddw835ULlogiH1oyI0VGG3r2YiI5KccxicLRl36\nKt90r3Z5rGLvAiolPXq7qIP4KMbc8QTLMnk0aEn/CtP5PXcV2NqYowpoRsgc\nYfX8PTU5TOb/GO3n1eCKrPQo6li7+pJ4c+sveMj66bS/W7jjiIK9IjeFVv0h\nMfALo/ot2uC+6/xthdb9XgMXteCaCDAhL28LP7wVZdfuIdrnJ8wgdWizL2A7\nwmxrI1h3KyLds3AUBunT/8f88X8vNfT0VpApf9pXHSMGjmru6arcfZf5Nl34\nP0EgpOBhmuCAuA88utZegbUZ4FE7pOsAcDqfVYtvArUeeNRFP+lF+3dkMaEi\nAcsGBKOUd8YiQFUF+yWp9lX8cv43Xr+pPElzWRwX/AXn8yvTKNwOT5pBvWyv\npGflY8HkanWDhbs/Do4zVfqrD3vY5P0Xm2w53Kzp3omVl+ZRjJiirQ2FRGYm\nOdUXBKHGg3CUZrRrd+f0JUfhIYcLEgfTllR1NbXuuBzKnZHR5OPcp8dVrr0G\nczZ5\r\n=iXeg\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD7Gx5g1B5QILwejfBHMuLPq43KExH55RyC8im9ew9MsQIhANeetv4KGPY5V2jrCVBQ/aH4ag0L94qwOuLPjJNFqc4I"}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.1336_1628823644173_0.38395467294798724"},"_hasShrinkwrap":false},"0.1.1-canary.1337":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.1337","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache-core/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache-core.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache-core/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.1337","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.3","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.1.1","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"2251936e4bbc597478298a6015a8731dcf5d2c40","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.1337","_nodeVersion":"14.17.5","_npmVersion":"lerna/4.0.0/node@v14.17.5+x64 (linux)","dist":{"integrity":"sha512-oEunP50zW9wTrWsabkv8sjZSeOO5K7TREKv/zeCW82NzfrI6go1oTuXVI+LNMD5ta5Ms19CL7lU5KdbZHMseyQ==","shasum":"c5a4ffb2e484c8867180a0d150a25c2bfb169848","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.1337.tgz","fileCount":12,"unpackedSize":98324,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhHrsdCRA9TVsSAnZWagAAClIQAJSGfNItzHycIgC0tAYp\nCvOqc/g02nuhL6ycVVYo6BFlsF/wYQxPJ6R4YiEj7A9NkFbjeyDbt8MQ9ezB\neXuHzGpq1tqoTOGgDrBLTAqwLIQhAzxz612kZJeBeWoOxIBMSXnvuP8/sEIJ\nQO2bJ+Tz4b5Z7KynQ+zPWwb0ZvlkGmhq/lR803rQrB28YvRCXhkEiKWm6U26\neyY2KSBDsIJAvEzcrJaGg996M18vAIra9nSs1Q09OMlfLp29hhlox+PZYpeF\nf+P/YO+BHzprNfD5IRs+nMQZZnyXje51j7GWb8d/ECAoOe2pvaeWoFMMiPKI\nRIe0tYQ25b9+iL8PXeyczPqBTp1q5wJeUciu+gaJua0jUtvp9HlncsA0AWCO\nDYK4ivg0BJmWO9o99vekba2bxsRh1wonKb81DP4CMenXW3HNCri34NLTWpFt\nfbEDm26a1HI3qIXN1w9wgj54ohSqn4jhm7Pon6Bxjf/ea2WyoW+sklX8Vam6\nM2IdNEm1e6yYIFhbAA7q5a/jEBowoUyC7mUotCwzrUJ23DgAaNCXSIX5+HmT\n1m59FMLs+aPtMeLyu7WE5Tn28CLm+3s2K2HOf1Q3vuxT/4+MHNV0Ju5BytzA\nNZHU+PFu3ODX7f13m+s/K5XJiKf0FTwyj5iwkrwfKUmZy7a2jGlFT5cPIaei\ndUdX\r\n=gB5I\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFAL3NyUZSjvNNeQltywMINchTvWIZVA1EEo06c0vRHaAiEA0B3zkhVa7lXue5L8OIwh2GMeqhDWF/UZiHz8PdsajLw="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.1337_1629403933596_0.05255487803366643"},"_hasShrinkwrap":false},"0.1.1-canary.1338":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.1338","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.1338","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.3","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.1.1","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"7e12d3eb772f841c822f6ba112f0a7b473ba2ed4","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.1338","_nodeVersion":"14.17.5","_npmVersion":"lerna/4.0.0/node@v14.17.5+x64 (linux)","dist":{"integrity":"sha512-dtnPjKjwDxbomccSFGN916vUG8lQGuW5qvIxeGaMXP6vN8+LsBnd7f22DQNX1Df9QR/Mh27RHj0XPooZ4TgKFQ==","shasum":"c24da05f8629451e33e62f4d103044e464ce51d2","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.1338.tgz","fileCount":12,"unpackedSize":98309,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhHuNDCRA9TVsSAnZWagAA+u8QAIHyouesKUcGzVBY70nP\njslFSsQgLxI9MMev9eqkgUaFrPDaC1gRB3GR1yqXTfMcSPhDBhCSQ2CaY5/t\nKoegf6faQlZVXY9R4iVq2Jz87gXtthtV9YQlPPQq8nRPHVA4xQXAV1Z6nSWx\nelvtCaOxQQrCg4fbz6ODO2SpGS+Eb0W6ZOJha1Z2KLGeR9HW22MFYVP2Q/jf\nOjvQk/imJwMKIdLfbDU1BCayY83wuK/vYwPUs58bo3h47j5sEvj7pN1MOtyz\nmz8BrpOLWh5XaR6SVo0sMPWP3oyf+Qk6TDn+P99j9ndPxvGnnXQXriJc7zdB\nflWRrw15meHWpoakMUNDj4CK0xNx8yJYPLPWH/vX84CTDEy2xjapntAIMWsB\nW7l1ACZAm+jQisjc9dd9bfDBmWfJ018SF5kJl1P9qCG77iPW/FJT6mb5pKqd\nEV97L5k52+9l3GNsh7u9DobLQRCQBrncSl/CR5qrwVnNK9Wjz1dkiyrlvq3y\nGsWvUlRHxx1uliZBWUUpouAgAEFDN8OTmxTwujs5PxTR3KFIWV0XWQIl32rF\nb7EJ0FBFRaZTyPVxAGCCoQwb8SZqZj32Cdlqzaj9PAsWq23W+nf8/hOSMcV3\nprd8QXfigdSI62BV72O1hn3f8nZkCY3h3XaLqTiA8HHk99MOa8IrTl4T8CNW\nUfKi\r\n=tccd\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDQkkXCdcdN3Xwn/kmpw7YYuZ3O4mHqBzzI8NRj3vejlQIhAKzJNaaxAgkZGDKujf67R7xpotVolc/zrg6YzTVvtYy7"}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.1338_1629414211670_0.640656781752704"},"_hasShrinkwrap":false},"0.1.1-canary.1339":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.1339","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.1339","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.3","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.1.1","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"17a7161f77812240b68b948f7f46e641a554c2e4","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.1339","_nodeVersion":"14.17.5","_npmVersion":"lerna/4.0.0/node@v14.17.5+x64 (linux)","dist":{"integrity":"sha512-u1Wg2AGPcmMLFqRR4RMw8DUUpUBs2baokCZ1Jmij56dcF2G6uQvXXI/J6swF/3wSaXAt5DI79yUFTNLxm/WRaw==","shasum":"e3698dccb38390f83094b7ef7ccf40f9530843df","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.1339.tgz","fileCount":12,"unpackedSize":98309,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhIAEQCRA9TVsSAnZWagAACmEP/A9KwrzL7YLnFY1nsX/Y\n97jmbP/cwX8JKpB34RjMc/pU9q2fx7nCqB66VtF240+nkpIUGql5H49mUHs1\n//LJGpJTyrck1CVnDdcV8xhPf6sRqQHK9o5M9UymuPIqNSYbBZRkSO1kLweH\nFDNjxAWxxDDaFyA5FEcg7NWXGoKJ1Xj7MZTA+HqZJiUOVKqAXb4N0mqa3I9g\nCg0+mctcIpCthLAUyHfVK0FR7dhqLmyDfUTJOvqtR+cdp0nABh3CGr1ifXSZ\noewZSFRd6Jmwuo4lqePhulRzdczV2rwtqWX9jhC+uAZ0zBMGNCMaK46jLEgW\nNPw9VgOMNYDJqqUjZCfMZ2WG+MUKL4sABdxOAWoX50S5Cm2jW6XZYr++Ixik\nacMcFd9s5/05X+hOEVxpx1IzdJXTPouNWLjjeCB/W3zi7uHpzIM46D7CpdsE\nFiEDTxhcYc3Gm7vZ90sEK5ZFBQnno+bVqRBLm8+zX/n3ZSash72nFElefgkG\nnWLwUTaprnz4SdUafKmiMreSNzkYa7LryBVDivS7SFVg63AYsKU2wRKT1nx0\n4/PT63/r36/Qavwab8BQaFTvfD0Z96LPjU5XcKuSLvR2qk5A0WhnklmjA1y4\npjqlsnfuYmWcLwSPV3ClyoCYE76RDlrulHH5nMCtw5v4oSkJ7Fi2Mz8Npn5k\n5DPx\r\n=sYv7\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCEA1RA54v6dhBfufveadSKHaoOgGrdtJfKFK2vUrTbkwIgfB/ohzW1BV+aUqsO0S4jhytWqacFfn98dekKBDLEqfU="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.1339_1629487376136_0.3028929486626917"},"_hasShrinkwrap":false},"0.1.1-canary.1340":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.1340","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.1340","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.3","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.1.1","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"bca951b6cf4e3a14c6b2bed4c3d7f1acf60a1c99","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.1340","_nodeVersion":"14.17.5","_npmVersion":"lerna/4.0.0/node@v14.17.5+x64 (linux)","dist":{"integrity":"sha512-1rejWQVZ3tDDxYI7LAuCGWbWFRzgpGGlU3Vplnsz43mYyn0hT5eW760ToZJdoexhG/ppApthMEWfYWM7vnXrJQ==","shasum":"b5346419ef5cd244d630182de026a399327e154a","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.1340.tgz","fileCount":12,"unpackedSize":98309,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhJCZCCRA9TVsSAnZWagAAxSwP/RXtcoBCD07g1CDKLrn4\n92xXmFDhfvsyOjjTQQvU9sNv17an7Ovfn6VAcotevvdM3Q1PUMb7Nl7bi28t\nHohmVCWlSBMocb9TE5TsHY9IQOJ0WME7VOeNLPEVbk8clComiNU/y1gSZcej\nm+35CSb1zSti84q/12IFFMrlPVx5Lg5GHYggVDLCf+vumByL+rO7lWG8kkbi\n+DVnQvZgjS2xn0SwPR//a41lPC1tGnPDIcfKNzws+hkNlLqgJ+HkqATgwK+W\nhm+WW2VBYrm/k7bMLgog2ke7sHsNZsrJnnVkdpIjQppTAOHYaGuC4ys/TrMJ\nWsZeHJeVV6E35RNBO7Y2el78vraipCIhu2PbCwYo9alyhIa0C5XG8fkU81/t\nR93cgPE5Y595i8jKACw/I5DcswgbVGjbPvJvC2dA0DFEnqseiLWDYwxIM0kj\n0oHvHIw1U/ydN9SARY7kK/tsMhnp1cZqKdmhvZ5Sjhe4MIVO+80GZLNgUHvc\nBXpsospNT8a33NjUPseNJsjBYtWuh+Dwe4khtXfdTnPIPXPVlq4BIM2CMQYI\nxYBlchqk/qMc5vUdxzOasWvXQklawUlc6FaJi8syfLjl73I6lUnnjuiyZK7J\nQoqG5YfqpW2dQ4q/RLevDMSf7A33BLt69M/nW7YcwriloxS7rM6noI8N/2Ud\nRJXr\r\n=+XY6\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCBY8aOScdzowlE0OPGfeMlFE2L2QtzJH0u8FI7VBUb5AIhAInCyh59I1UnEOkES8kBwac/xIzoX8XloSm1at5kJT6g"}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.1340_1629759042701_0.06979420513710455"},"_hasShrinkwrap":false},"0.1.1-canary.1341":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.1341","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.1341","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.3","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.1.1","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"ae9bab8f653cb0c84628831d62b90fcc6dd63f84","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.1341","_nodeVersion":"14.17.5","_npmVersion":"lerna/4.0.0/node@v14.17.5+x64 (linux)","dist":{"integrity":"sha512-saHtr9OLO89gzCU3OGF05fPWTV/JRrg7YSoHUSSUxhk5I00E9kexvvKA2LvgoIprzClLbYhFJAhMCNDO6NV1Rw==","shasum":"8ddf06d856ddf4ffd85bebdace049119df3a3225","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.1341.tgz","fileCount":12,"unpackedSize":98309,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhJQ6oCRA9TVsSAnZWagAALg0QAIxY69CtkWA3ui0pOTs5\n31pro9dpL7vzU9i89xvs+Ja3w39WeOzx2jA7UW5+d0HTi78i4rT4MWuq6IVr\nSq/cohfAq0AmEEmLkkT6BpKfUIdj4aVy9c4+wYG5mxVSriQszFsVJUQw7ZDV\n9DdjssD7igP4JDOJIhyHJm1x6t3rjKy/sfA1GmEMcha0urAbhQQlV4uqbyBM\nQg5P59XndlbwjG7qjeuEovjqvw6jGnSCIEeznz/Zf2VK6kfmLi5t2Ei6TyG1\naOnHyfwJYsPx1tNbie+3aqU+9e7PqCOMqw2oa25Q1W3YS+W0tEXEianVXS6A\nZzmCTozRAE08KwbCP4FCI4GwbcVSadtAcK5erJG1LAmyxPvJwbtFSJnoJzu8\nZjpkPnhJojU4dZDf2emC2d1pUrcW+2MHa8Vq38kiWJSVByd2VslqNk91MOVS\nPd10MnE1kdYvQCsSArIaO+m4lgPiVPH8n+W+YEFN1MoJPTyAQFnCTPFjQI0j\n947Vr8PT8DctBnbiIiMtEvL5Pg893asECzwnZ39eR/qwbr6sm4+2o0PzBQYW\nTfHaCrpbhMkLASdah/8jVtkHyubeWUZ1nXIXHJE+MFkMq5VeKwCH5hTycGLV\nH5mK+i4gbdhbB0ur3vxnKbVJAFlDmw37CufjUYme6fI1M8OpLW4VcFSD/o/T\nWZb2\r\n=+vEs\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCyiBRR8TYCk/bPMn1NvDWS1kWrPprJzi2fE7QjEECM3QIhALtj8Qz18TYWqMyYqTSsrFOYqXSSn+qAnhkqUyHjmk2O"}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.1341_1629818536538_0.3441724700253488"},"_hasShrinkwrap":false},"0.1.1-canary.1342":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-canary.1342","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-canary.1342","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.3","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.1.1","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"acc0f4d63557cce3a7dd243acbc8a8a469687027","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-canary.1342","_nodeVersion":"14.17.5","_npmVersion":"lerna/4.0.0/node@v14.17.5+x64 (linux)","dist":{"integrity":"sha512-Ybs5jJk5KUgViXMYfo4wyH14evAY4FU33ItpJIgNtIsa8Jvgmd8Arhu1taaJ7z/Q7JcaF3walTxbo2GRY1lDGA==","shasum":"d9525c355fb9bfb3eeb8f1048b07d1b56f0a3b3b","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-canary.1342.tgz","fileCount":12,"unpackedSize":98309,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhJRqJCRA9TVsSAnZWagAAc+8P+wdsRtKyP9Zf0Ukz03qU\nyIswzVILg+/BSX2DAXZ3/h3D+zh5BWareZaQhmzhwWa8GbHadBiGOhoZRmdT\nyRyffPyUz+DZpb+Cr984Ilx0hHojt4FJOlAD5WYGrMBFEntqK3GB0MgEpDM9\n2rnSQhRZAfm3ZXMrloV5zGJTGTHtiOuZw2tzcFQ8EF1DcomfymrOwdyWWXih\nwL6dv2q1b5vrwT2bsnPZUBZc/js8ehSkkwPhJ208hv0WB/c1VR3S59tuG0EZ\nCDJQ61+W/QS5KFXfLnnmqbG1xeRCON97WKSv8ftrpdl3wpSDMy2wo7oBySD6\nZ13c2M0mSU9bxT5IshvmtHoTT3+djOzNWy++Lc7AYuzsgJWSmorp71+dZ2Qt\nvpx4HKeKMbpE8uSfObNb29zaMWCBh/9KausETn9Hi7HDXpX51mVSxthusQju\nhfp2o5YN3+4ljmTnA0WQyoWZhDTT7kxYQPW//d+h8/c6OxqrcstQa0UGG/7h\nvwhSk+hdfl8/aFQknvG97niqdzW8fYxZg0VebnvcyctJM8AfG4XTWiZNGqud\n6g7JUGQkUf3KqxQSd9HNO6sjs+K+Fx7DXp9jIfrNPM+jHWFcR9xwVuQXnoY/\nA/QFSJD0/7SrBiGt+LJkKbQc28oz1+S9BEW8dN8mvKaxwXOis1qD9splvpQ4\nCjiT\r\n=t4+V\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIA657MmAGLM6a9LZNYS/QQ8Cwt2c4eQcjS/0fBnQ6pBrAiAPffwELfou1ArO+cqHjh343teKBd4qGK83wnIAu5pd0w=="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-canary.1342_1629821577666_0.04242495729634266"},"_hasShrinkwrap":false},"0.1.1-alpha.0":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-alpha.0","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-alpha.0","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"8.2.2","cross-env":"7.0.3","mocha":"8.4.0","nyc":"15.1.0","ts-node":"9.1.1","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"2110fd2b7fc9b2b41ba5e2a85dfecd13650dadb7","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-alpha.0","_nodeVersion":"14.17.5","_npmVersion":"lerna/4.0.0/node@v14.17.5+x64 (linux)","dist":{"integrity":"sha512-DnVDePANtm8GiZoMgnKVYsq1zhPVVVF4lou0xJnyrVqf8AOICGniqXlIW6DuTwT7rsFEYt7mjuGPN6UvjQUeyQ==","shasum":"98ffcaeb82edd9369807d6121988a2c7c85f697d","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-alpha.0.tgz","fileCount":12,"unpackedSize":98301,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhJS7zCRA9TVsSAnZWagAAuNIP/3Qwo3cx9MKSSmiKSld8\nQPDNWqH55j/iDKsTy5iuAq9I9lLUrKeTv0yuDZ4txM0B5WO+kzAvetShjdza\nd+jziMzkS+9stNiB5pArUOrmcKQhDcAyjmkcbLlguvV4yv9/JDDPuRSuLzAB\nv8pvT2Go+CQhKSu4UnJy972UI8nKjE3cNT6ET3ok0O0Ey1LpUXsVleYkLes7\noYISjMc73oZHxUaGdlFPpALrvPlHndh+IBjyYhwZruNZ7sGCDNRH8F4sc66r\nzUhRCyxIbk/Ae67kmtG+wBNFvC1QvPKTp1ShHfIQebfRusG9oaePNWNFthQ1\nOvHXQKDVyOobdhLbRJFFBVbx6Lz62Ar2yABl8BP5iFIsNb5Fz5/XirMXSdto\nySxTdEJD7JC5WEVaNwM/ocqjbdtCVhKwRw2tZpl/T7tT5pTFanEX0nDKwIbe\nD4B+Hqn6JrF/j2o/Oxor+w9NabeT7g5ZmtX+N5Cz8DDv9ZM8+eLMXsBUirLU\nm4KTWV/AqHN6I8BW8c6aqt+1xAfjHly+v2XfBM9uu9OD74fMJeDJ+OFZzL5q\npQuBCW11OgKmAASM/DeE2lApZPMVOVwZSugdBDjg0MkOxeFJrQS109WfJl+6\nELrLbyFPJBcKD0a3DUS/eT4ajcTJy5Y5DDAVD41ywtcOGwKyiaAUPyPyE6q3\nzhws\r\n=Oz2z\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD/6LMTpIy1MwzUHwE3iIdxuRMZN7SM+ualRJWPZDBwtgIgSn5Bo1UeXRvZ9W7qHQLBsxtCV9VbswicxPwlKQeeRDU="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-alpha.0_1629826803460_0.7947615219423849"},"_hasShrinkwrap":false},"0.1.1-beta.0":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-beta.0","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-beta.0","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"9.1.1","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"3a2646f7aeed85e8ad0af20cb12c239109ba9005","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-beta.0","_nodeVersion":"14.18.1","_npmVersion":"lerna/4.0.0/node@v14.18.1+x64 (linux)","dist":{"integrity":"sha512-QBs0PqoXkQuY6EKtoou+lLqzZoOTyXC7Mh5orhY2/3JbzYtPRDip/gJ8TAJhBcRJNKKfiHo4+AD7hevSB1Olhw==","shasum":"1e8bb3eaab26de20f8a56932678db789e7f1ee4a","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-beta.0.tgz","fileCount":12,"unpackedSize":128307,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhl+pNCRA9TVsSAnZWagAAMuUP/R9G8NDA2sCldyciHWTO\nPxNjEZABXxR/la+sISegEANCPnAPpyAFbe95RRgSIZNMgicCl40mlUVVZ6op\nqd2NHqk8D58tCdqwLSJuD+i86NjlxaX2D06D00GV9WyfOyeiR1RUyu4dyk7R\n9j23YrI3tPwoGYl7/77wMfbTsR1z5J+/LZ+WV/fVmgDntjjzpLR0L+rlJCY3\n6l8koiYb/SsB841W3VxkCocjyW52u7vNeyVu3mcaMIbcYXq0vi5mrOF3Gkip\nDzTwBUFVAQ5XWqh2dX2KPosoONkkrFrVWIRX1ohthYUsBVYCIEDC4KSau32j\ncvLgpS3hShPHepcgr4sLlY+vgx+1opEzy1hWUw7E1alXeelxAy94FVPyljDy\n5ZoWQ3UDwWZvSIiH6Qf4f96OkVN2K3M5ws/dhPwPy3J0u0p6CnaRVDi8MLKN\nNg0qa57z+XAaEpwCREvltN9RU/aAifmE5Dad0wsMtuLdp2BhDNRYMWebmhTI\n7cKnlMZo4vH2xby3dVV251KU2WcJQ58jrxaBFhJjOvomfIRRmQfbdKB2cG9I\n8s5CosnahTjMtTA/849DWPnL7E/DgkaKMFiEptkRM93O3xt6KgP2Y+DhFwi5\noLri5H6v9I+ZVSas1A6J3J/Mfhrq+2DzhVYhW9zTc5XFpVkB4D8tbQP6Rvb8\nYKZq\r\n=chtb\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFLGp8B6YbMPrdA3bf4WDKnB+Oe1DZw3JWATBXWcrYcmAiEApcDgJgrdk6qrLFP2WQ0gT07DhnKRnsAJcd2LLbUyDak="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-beta.0_1637345869272_0.7666563907163855"},"_hasShrinkwrap":false},"0.1.1-beta.1":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-beta.1","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"ttsc --build","test":"nyc npm run mocha","mocha":"cross-env TS_NODE_COMPILER=ttypescript DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-beta.1","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"9.1.1","ttypescript":"1.5.12","typescript":"4.1.3"},"gitHead":"fd31f6b70e9e5c9acfa2d232d4b34ccbbab2342d","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-beta.1","_nodeVersion":"14.18.1","_npmVersion":"lerna/4.0.0/node@v14.18.1+x64 (linux)","dist":{"integrity":"sha512-zqLWntVVJKgX/CudB/z5psSdwTnQiCy+ox4PfBknd4Vonk+G4nCZS8bYhyqtAcrYt2K0np5qoiMOhpWk8A0PJw==","shasum":"5d0baf68b9208b8a0027e0f78c357fa30ae3f51a","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-beta.1.tgz","fileCount":12,"unpackedSize":128307,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhnu5KCRA9TVsSAnZWagAAxDkQAJQUJIhZWnwdy2L788BK\nWiEckrEefAUsHRCSL6crXruTRZtxAExKu8n3E7rumchxjw+nj5B3uqHE78Tm\ns/Hzk8NiXOMnJuTsfLb+ritB5tmiGTnGumTalSyAHVMj8OoKq1x4nnGE4mLh\nynfg1uNPIjSmiAoK7xHO6tRp61vDmBwBZwKK2StNCBi1RuvSOS+IEho12bu1\nzhPtTKSZJzrckNk96+YVD17JaO+0T0vGvSAOoRrZIP7hmdSCOCKsepzZh98W\nFBvRCaDd/m+aXuehUY9/yVnPhIiACZ78XDeFRbjE8EJyUT20oS46KtA2brGi\nT9vmtdufTjS7Ct1V88C5osHn9PVq/Zev2V8i834i8RMWL5Nsa0LJzXsP3oCY\nTeNHwLgkcnCW7jkW43Zm6D9MSMM5Z9rDH9wWDxI3HSr/2ggjjS09ztnfNTJ+\n+PzUoczPM1S0cd9vW+8fPgaHu+yzXl2YQ8m7b3pChKJ/F37Reln7ql0wmUqh\nCIA+lPzJrRSwV2jE4UZcqvH2NF41/t+NrP6KvjMPXVcB04RnRMnKPs/k6YSV\nArlKE/qMgEl+5YFkFqhhlHh77b3EYQgXRzsJ/RWmXFm7lGzBWho3Qpf46cfN\nIzTWZjGqbdxo44Zbvy9169lb2yEmLpnaRlGwj+O/ANHnije8cdYnG6Z9C3c9\nd/4X\r\n=Bskm\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCvkVUufXpKA3kMJe8+iR27jdiW97vm7woLywC7kJtjXgIgWpGsSg+hi+HtfeGopFzCbAC3zCD2dXGhbpHhBuIoR7A="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-beta.1_1637805641949_0.05664333935918653"},"_hasShrinkwrap":false},"0.1.1-beta.2":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-beta.2","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-beta.2","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.4.0","typescript":"4.5.2"},"gitHead":"ba61f67d4a3f7772e00e66c00b853206dc9e1c9e","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-beta.2","_nodeVersion":"14.18.2","_npmVersion":"lerna/4.0.0/node@v14.18.2+x64 (linux)","dist":{"integrity":"sha512-pLDl1A228fHjXIH1r8ZvVluK2LKwjzEeo3CQ4MMPTP7xGlhRrcKfC9TXswD2iwZjxulzKTQakXFnn4VStjPJwg==","shasum":"16fe70a18bd270f85d3e13255a79b1e62bc2eb62","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-beta.2.tgz","fileCount":12,"unpackedSize":40996,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhwQhQCRA9TVsSAnZWagAAtwMP+QFZPgZEQcblSmAeE/db\nfq6Gab5NcZ1Y7aJAkMqaOgXhNAUQe6PKHfkybUkZO+ereLEkmYIVaEAxXtlT\nzgnny8khOVRL8zE63K/CWztys6MZmViWocBdD+GGLtX7VVT1GrpVbrODwI7X\nb4DSjwyxA8Mdes7cUvUshpCDepFmqEcZXpWvnVcYJGGgGSjIVlPFC4Q6ZEr0\n1rZVF6xPyDco+hwa/ZxEq5lrnApXFg3xFBuydvK0kLqFJmClv8Gl3MML7/5D\nGvZPVoGjyvoju+j4q86tqgcpbhn8yd2/WxATqxDJDIW+7J165a/80M3zujZ0\n+fmF7kRb/77sxYu4cf8/EE1l33xfJAJqBFFLB/0TQlTz/vi3prefECP/Why0\n9n+OSFPt04FcevBvxZ4Bli5ZK0WxXqTRDuxzItPTcEoLzdZAEo4UxPmMwLY/\nNvnIW4QqSpr+rlo2y5ryrvZl0fZT9JKYnlUFDWHQ2qNwtvaf4diS0nL8KtsM\nca0oSGkdvvxnoBTuPYA0VW07Q3dfFcs1xnqy4NNc2+zRAy6meWPQwH3CwBYM\nwdN/DaB4bJgGAUv/Oe2XKOSsi1FrPU3GZIm52AoBc1WGHoAvYeJFz8XJyzqx\nA9OvEFV1CkuU6l1wHPNoINCn0VE6RU0qwWE0byaiRJ+Y77MxoM5XInLA+Iot\nzSy2\r\n=VKDO\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDjHKn7VwIozdxKr2RmZiVVVayj6WsWKozkOOIpRNP4qAiBoWPg7Iy+81lbv3RELOgh3ksDZb+6I2EvSqW+ihPbwMw=="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-beta.2_1640040527873_0.03907524771186077"},"_hasShrinkwrap":false},"0.1.1-rc.0":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1-rc.0","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1-rc.0","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.4.0","typescript":"4.5.2"},"gitHead":"b02135d151819b81667de25c4c3983784886438d","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.1.1-rc.0","_nodeVersion":"14.18.2","_npmVersion":"lerna/4.0.0/node@v14.18.2+x64 (linux)","dist":{"integrity":"sha512-oUYpO1ZAbwDiaqozJ49XcK3iXPVoprm8lICZl6X5TVK3pnJLpusn47Hvbiadq3Aban+STXGnJ2rU0rKk6r1V0Q==","shasum":"8b7a31c10a30864b5ce8639a786817b0506727a2","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1-rc.0.tgz","fileCount":12,"unpackedSize":40992,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh313hCRA9TVsSAnZWagAAbO4P/19oIhzbPifF6s0g8H4O\ngWPWf7O0vSe0GW+dn0CPsTptXUDULR4QC7pn4ypCnhObqdpuIlIo0SnCVyOE\nn6/JGZ/Tmq1L03FuthrFyKt69j2/44X1sgsdPzMm1JpPPw8GL1czM2oQqzYL\nFXuOqNQ/RFX5EauHSXsqEra/PdlO/VosVXhrHKhmpfh/lis/eZX6OQcVdLyu\nCNABPfZyTkQZhPK1F202LbMa1jIVgpQmoS6Ocy092WMT8UEgJPM9hm4+i065\nob/BwaCA2OP3Cx3B+m0rNGAWOqzymXlfCGNonqqqDONnkt31lGrG6APeb8IG\nLglL8o5c+EdS2Q8hKH2Vxgc2gp6u4Z148rn32WyNi2SafWUQRHZC30MRlCuo\nTm3if0blenOZs1YprngvLkoTGINgkZQ1hwKK7Bwifmdsq9HIk/6hHWWIgvKt\n1RJ1KcIcuiSfli2O/kqEK2q4GIBIcj51X2lx80NZekDDe3YixV6iQiSW/jc+\nGzBgSBEf0eOfJ+QLwDGAZsnSOv0mWOJ6vv0EmoEA6kFm3XiBKdRgbU/tT02P\nygCOezHjIk44Caj2yIqeSnb86jsuGyIOMxdCpXE3YNlBLU36KUVQpSnlrFI0\n9y6vEhxT0xCKG3Ix8WN9ZWY4RHEXjTEJWvVvF+i/HxUybaSrCLVliIW6z7Xe\npC3Y\r\n=IUGh\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDzBKMkcDA8McNFTcLMlRCWcmaqWo/rkbdf3go1yx0iiAiEA/bcMv7wfY0ULVWQc1/QHBfXCBQwt8Hmibj6z3Ydabr8="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1-rc.0_1642028512741_0.2114763614695334"},"_hasShrinkwrap":false},"0.1.1":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.1","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.1","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.4.0","typescript":"4.5.2"},"gitHead":"18714144993a5f30e295b6e787ee222716e9f214","_id":"@ganache/rlp@0.1.1","_nodeVersion":"14.18.3","_npmVersion":"lerna/4.0.0/node@v14.18.3+x64 (linux)","dist":{"integrity":"sha512-4kDCH1T0SXZdGhxqCtJc4dzw3K2IhfvvUcwXqp/dLxegf1TapELtwvjMllT8iQajf9GtDBAX+UOw6Dv3zuNKXg==","shasum":"bfec183b885c6752d5ab9e483b4f88448f07bb34","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.1.tgz","fileCount":12,"unpackedSize":40982,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh6HvwCRA9TVsSAnZWagAAjBYP/RrPAIgnm024yGMms04/\n1BUBOpVfbMqY7o63q9f5hY3k2bYD7NIPwJsN5UV3BCe1gGU+KhUVQDjZVHko\nQEz1IQkA6c7kJbYayH1KRFK3y3gukpRlPFAxV799dOCD9zjqLbpttpADA12I\nQQWA8DflMJIuyPp02o2OdlnGdYIVs0brZ75sDZiz+0q0JRKrtMFwxNWaHy5b\nScPpdI9vOB3ydYrmT63C/oCYt4dipC+hPu5mga0LyW0uJKL/zRIankDXrA3p\nPIdi2PksaxeJFVaEzxpwL+b6nHD56xMUZg3XG8uJo0NvpO1EsaZtKwesbw/e\nDwoLJNUubPcFflD5RxJVvipijSCbUDKeNbzbcwmlroGo1DU5MDCJh+14ztgH\nB1uwNQ9TfC9nA4hey0zmi3Jbqaex3OUwAvSZwrr04FbvGNVSqIZTFfRE8FzT\nyQy+iMaviNXWJMEbFmhANQONYW4gj04DqIa+Tu+03qBDZ1w5EfqmkZ/1zZQS\nU5LvFfNV1sw6DQX55eOA+CADg4sqhHMHFlKgHuplgG44VzI3SGjSS2dUPSRB\nAQ7r4S+V3HKg2g3bMXM8D9pSeSjOkhfzxjmmA5EPskfinUYNLNLurkh6LlO3\nfoxUZPfW808WwbcRlR3lZgCcP5hreJM+tFxnfptlvYGjS2yjFZ8+4F0ksM38\nxbGe\r\n=ISIa\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFVfBuO2jCCn+sRBzEH6c8mezlq7pktZs4pjyUTGRd2CAiEAn2n4OnHu9FzIw2FT8+xThOCS6LuGYM25azrWdehEDas="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.1_1642626032199_0.6408154365758769"},"_hasShrinkwrap":false},"0.1.2":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.2","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.2","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.4.0","typescript":"4.5.2"},"gitHead":"84e016a7c95a83d20c9ab0eb3e0369accad5715d","_id":"@ganache/rlp@0.1.2","_nodeVersion":"14.18.3","_npmVersion":"lerna/4.0.0/node@v14.18.3+x64 (linux)","dist":{"integrity":"sha512-8776M7lwQeF2jw5gTgisXPj7TtIcD0Ym3/LRTsMGuo31IV+UZ2JL+W9FwnnqOu+8GrKu5cceSep2f7mESTwmzg==","shasum":"fe512f3c20487aaa32d7843ac7078085d796b78d","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.2.tgz","fileCount":12,"unpackedSize":40982,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh8dAdCRA9TVsSAnZWagAAZ9cP/2yMr589klkp3WENJ8ca\nfxleH4jps7YDABoBxctS2fuEEebkrbf3q8hi2het/dLM7mN63D+sUWcdoxDq\nRsyE2KthdLZw5zbBRQ0KVsmAOHtLm5ZtiicOJm3femSWCCKxQlvfnqrIJsdE\noBQptb4aiYEvhdi6zXUcqIVqJD+DnmNKBscE9MrcEP0ZSPpcKHrrUol3CI/L\nCd7ldrUbZ9wKhi9n6m1cYrwzVyK9hK6usV/DxU1tCMSE0u8h6KOB8BvCC8/V\n/PwRYaiWvDjw7VfAhS15WzZGlUP4iYKtr43gR6tzI+ukYecIxpWFT7M7iqCc\nVSWicqB8WzO1pt5TQ7oQOk1WuXgWS/73adgwh9bHokaQ5b3IvdjaRw1NXKbB\nMN0P+cdqFVSYOcmGwv8heVvuglHAHr6LK2txT0k1yGc8TPmLWgNxhKt5ZRBO\nxPcvgDDgHeEn+EWUUxTHYoUqwqE42v7O60E8+VOVLVBaOoiWqUPG3d+igWCB\nFJjoeyVu/YQ14H0aBoRcpBZZcA3rpbo/eW5jFW/A7qVMhGML4yM4VfbxkbzB\nn/5OunIR5dzICedYMpCn4uiITUkHuYCKgCFUHgkjZ2TkAOeyO6ZNumMOE6uN\nRs/KGTWWsR5DWKj07u0NX9EIwsBtDNe6+r+exH/AyhYl90eM7pqVeUGgMpA+\nFMVs\r\n=OtzN\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCXLlDGH6AXjc2dMBBP04DOZap/RZrEgBpeUz1YOlw5yQIgDDVNw/FjY5ABHSWsQebOuXF9DbPS+22TLZ2kFYCVhnQ="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.2_1643237405196_0.354346626545442"},"_hasShrinkwrap":false},"0.1.3":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.3","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.3","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.4.0","typescript":"4.5.2"},"gitHead":"14b3986761c0522d6c1e0ad542c9ad52a7e37bec","_id":"@ganache/rlp@0.1.3","_nodeVersion":"14.18.3","_npmVersion":"lerna/4.0.0/node@v14.18.3+x64 (linux)","dist":{"integrity":"sha512-hTJL2zjYWoEuxKIv59O2cADtiQ79lDTs8ckywHJG6TS++VTJMgnu1dnZV5PtXMMErnBOkqiiBOEtb/eSGWepVg==","shasum":"7ceca0ab085f12cbdc91bd9b11166890c8ccd078","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.3.tgz","fileCount":12,"unpackedSize":40982,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh/D5SCRA9TVsSAnZWagAA6nUP/jfpgIZHgJtY/YJtnBe1\nOXptUDaIKlv+UtIG7dSN3ryTsTn1fY3+zJK8Z7+i9eIyR4DOzQ8lA+fvyeG8\nZ8JxIUFpsLmRqvv9ZhVlHk8mZt9LVgTtglMoVMQK5xVGx+X77noF/J3ei21A\nuziLhI8MNhEpMqp/kGeBxI0jBepKd53ObIiVb3P06z24wp2rmBOctiid4aub\nsITkITS1gpdHn7K6gQgULVXQjrRKfmi5184s4l4Z62Sgs7kTXnSGN5sFBcDF\nuMzGVddENArUU14wfbPg6GvGyhNdbB40G+rnACIy7UxTOlXDi1sC3LbFNBfJ\neen/YH8ay8WBmKQwT5Dn+amv93UT75RnIoAOaop9Faxpk/e8sR2cfA2H/1N+\no56ZRs7uzI3K16Reo/G5tk+AmvIaxKig86jaDyfIh33knPGOCLTOfj/ppiRe\nLSOOnIJk+COLFOByV8Gz2BBasgi3bIXZEHvuJF//yeG1RrKyZvwNrUlmpoR4\n+ibfgER6MFMdxBhYuVqxfBNdczcxV7g+y5u2f/7jDlYYjLZ7J+xmXSikqTYy\nTyAdAM5NiUiSL9C/hMYzoSQOxLfN9Mk4B7ji1AT3RecBgXsDwnB/0YX63f0C\nUvSjK5oDmcasXzxOCQW6tqTihv0NpcCvQ39oEV9qy5eUPUL9EXpuNYZ185/V\nTagf\r\n=lvgL\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIE58BZZdRS6HTHTBVQuQxF1KD4G8OBvb1o3BHYV8EX5hAiBlhz4PkaaMZThkYxySH1qdRfKEMUGXywArtvSwrHw+dA=="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.3_1643920978107_0.0017228506583399916"},"_hasShrinkwrap":false},"0.1.4":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.4","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.4","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.4.0","typescript":"4.5.2"},"gitHead":"5ac3086bfcda176acb9feeace5b8a9b501f400a6","_id":"@ganache/rlp@0.1.4","_nodeVersion":"14.19.0","_npmVersion":"lerna/4.0.0/node@v14.19.0+x64 (linux)","dist":{"integrity":"sha512-Do3D1H6JmhikB+6rHviGqkrNywou/liVeFiKIpOBLynIpvZhRCgn3SEDxyy/JovcaozTo/BynHumfs5R085MFQ==","shasum":"f4043afda83e1a14a4f80607b103daf166a9b374","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.4.tgz","fileCount":12,"unpackedSize":40982,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiH4eJACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpkKw//T1ZniQs+y79ZfvvA9egd1afvX6nMFaVaKFG9P5rnx0qVH5gm\r\nXTeYM3ZitRGDOf4EYZrOO3uT4+8lJJuNtHAN792RZw4jxt8Q2XDie8/5doTW\r\nR4JOi3ZdJAWHq8lPH5jE806Dga7b/DIMWMZLIay03608g0iGUBAMC7Y01VC4\r\nSS7+p1z4N2evuuK3g0y45BENTS3pv5GPwt+b7bxWlg9t7mgVuW7Fx88fVh9b\r\nvGGZnEtNzuSYXruWZggzwEEmO7tX3/yRVuXEo4Eexm66ErTcUYhU1qLt6xc2\r\nrkbugewzKngrZSgO5CsKhoIvJi7odSCiwvaWwy4BqJxNK/Rl9RRTkj3MnUBz\r\nH6gk1TUSxStCxMEkjGGzhPkS/1AKtzTcjvscWCWrehRoN3mV9rRvOSrYa4hT\r\n4hr5SPR5A5VYgDUC+s8N9hdNeCfkcJIg7hfIMtlqvQ+fAZ3T5I5Cbi2TsUnc\r\n7nk67E70aIcVDCEPVpdHK8YiI/zh0Omd3x/IQP7oN2azQweDETcqBPb8L5Im\r\nqsqgfUM3rfBEv63VleGJHJL/Gy/ZH4JTGMmjFmCpw4khpaNA44mfjUqj3Lx2\r\nF7JlPRL7VL+M/x1nF24b1u9cAJpD6tY9liHdiZa26no9i9VgoTg2W5225R7k\r\n64v++7ZNQjcSLmf6JLE3nmbXPpJLC0BXdK0=\r\n=YQy1\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHPDXM7umzVtDHRaDhNtJyJutJFeu6YE9UbxGHpiJSNcAiEAitSc0r2RDdDGcoVKZIoXA+wvjMu4G4Y/uj/7Je7rEyM="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.4_1646233481260_0.8340290544117615"},"_hasShrinkwrap":false},"0.1.5":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.5","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.5","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.4.0","typescript":"4.5.2"},"gitHead":"8f8feb4473a5cc770c4ea92daeb5469dc932a433","_id":"@ganache/rlp@0.1.5","_nodeVersion":"14.19.1","_npmVersion":"lerna/4.0.0/node@v14.19.1+x64 (linux)","dist":{"integrity":"sha512-HoVyEX3fm8x0XfxrL105igCYqyvbqOxeGxtk3y81uYCr5DydWvIP+I1bphF99ZvIRF2TCZSygujEQfij7Y5l/A==","shasum":"c4b4a5f9ec8555b977d245acfd7f9cf9239635d7","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.5.tgz","fileCount":12,"unpackedSize":40982,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDxF8ehbNIN2Sa3i5i8vLzhfhkMZ6NbmE5YCLwp7UU2DwIhAOZyZ1fnTxgz0yBRRGzeOOMdufUa9BbyzZCCFGVxrdYC"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiTMGmACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrJzQ//Y7+1o7eQP1mc+xsF6eaXEfyfM/3CeVt/HVJ00e38rhDpN0rr\r\n8RJ7SqQu59mPNi+/eXEIRgTvuxMC4rjwitj3A3ECFZ0L8UkomVCTQoGc5/g/\r\nI7+FgcinwmPK6m4BhOuziAJ6kCigqksSsL/IrZIbGifPPdctWJ2oEz/o88jB\r\nFMcDi2xdyVlf93XLYckS0BE0bDk2R6PNTiF4NRiav5gfzHEmQvaxnYFAOPc9\r\n/RSsIV0jbf6aD/otBy6hPbxJvyXhHWeenxQ42Xocrp4KLo2Sxd31AGqLj9ew\r\nsxtiJBGgHmaRy5f4+16dyt9yNx48KWC0heCHVvTjq5ZDhZrSdEtmuQVs9T+c\r\nA+gQOUWp/Y3coxOjq53OVG/vCf19oQavCIYInIjOiejLSQjDZmRsKNoO0zLC\r\nyaub33+vatPP8eMJJ6I3enCmrF74jvZluNlXhXZ+ccf/wT26fYeYLASduqcK\r\nYmYjjfjVbKcnGlKl7DXnlFeIdFzlnwo83/pNDC4geTo5zAy5i0vWPq3TsCjo\r\nHpda4+ksczKDG063C0uGxY1aQwjtXoovxTuPmJ+/vdbbsW3NX0DPkBJr/Cil\r\nUDP5oEwr9gyqvI+AtRTaMULi3avLTwF0jmEvsLZJszczTkN0I9aK8M+R77dN\r\nsT83B11FJrN561xlVakwJ1dMWRkzrsSUPfw=\r\n=4Ae2\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.5_1649197478329_0.4198925049150748"},"_hasShrinkwrap":false},"0.1.6":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.1.6","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.1.6","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.4.0","typescript":"4.5.2"},"gitHead":"3acc35e2e121e8ef2bcebbb3aa5eeec360fc58cf","_id":"@ganache/rlp@0.1.6","_nodeVersion":"14.19.1","_npmVersion":"lerna/4.0.0/node@v14.19.1+x64 (linux)","dist":{"integrity":"sha512-Ov+wZHg4RgncVYX++XHYYojAKr4ercd6dWZPjC6ThDYjZmWjKmv3kDzpUUx/8EU3JQV7zzWQ/YYH0aU24FnWZg==","shasum":"5d381cdb8381251012c5925bcecedc7415fffdba","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.1.6.tgz","fileCount":12,"unpackedSize":40982,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDdjwXPQ9TvC2zTBkOvfC9eD85JQUotaO0He6DsCFAG1wIgEyVpXMCFEDlsAiEUe+TYQFaflBCq0I1HTh/CwJ3U4FU="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiY0aLACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpysA/+PTvYzI4Hzh3qSXUAwai2DazBbmM/FlGJfqW47AtTxrov4hz9\r\nJ8EqQ1ZyCDrvOv6YkLYp0EaQKclla0cEHQhnTZKlmg2nrWd4Pox00GQCSEHR\r\nexON8LMFSrJXz9Z/4UgyQ66xLwVIEjAYkk2l/6/VxWNxa2Lb+K9j+EemaLgT\r\niLWm/R/p+8W8IGpRs6Isl32CUgye8ln3KaWY8/DhS3Z+/Cmfbxb0upShI/E6\r\njmySw7S2SzMVfXmSENVIA8i/pxWC5e//ycDVVJGxPGISeo14AoUNquYS8KSO\r\nBk09K+WyvNIJQpshkVeihk2akNFMr7LmgvacctIvqEeQ1SB3NgXeNQGvnurv\r\nZ8XODra6ZVY84qkLnRoSAOf/dIqpZShqt5NFycKllYVWn8sRrAlErEZjVbcW\r\nFJhBtdeqs1WzfKI1QrAG9kA0E0jyQ0muAmcu0cCnwSQRQi4e3neLJb2nSBtq\r\nSyNYgxHxUtOtkODdvB7xkFbHklTXWdd935Hh+WKvOOCG9ywORU9e0kiWhr3U\r\nWg2lrwATHAs8trmU2gKGAFJ3heDt22iEdJcZNUh1Htt/Q6w1pr6yEhrrPJaM\r\nNm7qzoENOHQmssjubevVtdSZv/I27cNyjDDjf+4qhvLfytBDdUCgMeLy6fo8\r\nlWBkmCA+bSv4/5b8OXT4rZ0txhkJ4Wzc00E=\r\n=BMPe\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.1.6_1650673291503_0.20018639249597614"},"_hasShrinkwrap":false},"0.2.0":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.2.0","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.2.0","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.4.0","typescript":"4.5.2"},"gitHead":"b7db4f35eb7cdb683ffb20f285a3ffa423b90d6b","_id":"@ganache/rlp@0.2.0","_nodeVersion":"14.19.1","_npmVersion":"lerna/4.0.0/node@v14.19.1+x64 (linux)","dist":{"integrity":"sha512-+ksLlHQM/v1LNXmsX70kBC+HW4iMSMjYEX2y7QzGdXVz+vd7Z0kPyplC5SKZmw94hMtU+sW7e//C8NFsfxj7/g==","shasum":"a9083db50b5b2df86b0643579062b2754ab21a89","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.2.0.tgz","fileCount":12,"unpackedSize":40982,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDcdVzGQNMmNJdr1FccYu/X8mBQE8KkKmdLZAUaq5PcsAiEAputEyy2dS/NfybtxxGLO5sjsFdJlx5hdXMs+3tth3gs="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiaq+/ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq1xQ/9FReuG6LsQI3uoEW+P7vOlwOHiMTArs0Qi36mEzUBexdRqKE/\r\ntD41Pf87+L4JWB70RZPZtSPf1nn6L/0p3pCzOC7upMyboCuUjd75EoC+hFQr\r\nafn22u7w96bre5Jch9KJWeGQ8JpfsAhG6i1Qs4dRdldzpjKdwfgnf/Ba0DlW\r\nbPsfZoVOmBLpD73DrFTqz9QFA096JhKhz/sEZXUrLKUzFuT6Ohs5QXT/8Ye6\r\nOU9sJwdOXSq0wIF2azBiVgRGGq7m1LUeHHV8BkRZNWDELbfAOlEuEaj897AV\r\nMvUPSP0k813Zuo9q97D5FsVnIQikAmyF/s5p3fbvqSiptIF+9q18idBH303y\r\nzZm1+jXbUx0hvNteVF635nPTpPsNU6BbV6wXoLAaWhQjfQnwISfmMC/zrRXp\r\n+KlKpg2cYdIXY0QnrKvGAhoyWDJwRgPBsqFi4s/8+8Zr23hwMDjf11qmgbLO\r\n9EYjG9735xai38QziIIv8Co7LdGu1MRSa1/vHFvjU4WCOHR286ueUG3RrcLA\r\nxuMPBPzZ+bu6Rcr5JwnIzLa6utGpz3sX5BhS7gzUQyZULGkiq77euyCPfq4Z\r\n2Qsi8kdE7APyoUD2D7zgJzHdb+HK2Lf26QHpZ9MKvAtCwnwgkK1arXtGio32\r\nGGdWkzDDUyP8E1yqRLEgEPdWCRUU9biIEDo=\r\n=GKio\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.2.0_1651158975585_0.277544841370857"},"_hasShrinkwrap":false},"0.3.0":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.3.0","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.3.0","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.4.0","typescript":"4.5.2"},"gitHead":"8b6ca475dbace5eac62bdbeb0e528cdf72f68d2d","_id":"@ganache/rlp@0.3.0","_nodeVersion":"14.19.2","_npmVersion":"lerna/4.0.0/node@v14.19.2+x64 (linux)","dist":{"integrity":"sha512-AoR/Cyxio5yVo7PS3eQ23Q2/MjRzj1vvZEHPd7I8TUFcj1AqlpJMHqwj71uuvqAwK/luFla2J2yI3+rZ8u6MQA==","shasum":"6bc39104cb05e278c9ee0de3b2bafaf807087306","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.3.0.tgz","fileCount":12,"unpackedSize":40982,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDbK7TYM/rmcCfDxInY1x9+aNqthpRW3Conw8FVnhTI0AIhAJv9l3RAy8A5oqq+VBerqn8shJ2zBnzBMR9eiXwGcMyI"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJih//gACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqdvw/+P2A5pw+3btNQCMJk8yKkUMA7QvUVe14EtzK7UvkKM1WBOgGZ\r\nrak4zxFU5yCMHwkh3HE2rewGo42DR3cz3fkO0BGGFnqQnUjcvWfesD2fCvmD\r\nTjUAe+EDZEqgR1yzoDaPV8o7PTuXEMgaWFmrrPY0xGIc3Cajb+Z4fXBsuyUd\r\nziKQZ+7ktQLXLk17rW/J9lUhJsJmvwSWyKgG4fX7iyLEdjeJ2fFRhnBmTClj\r\nmPTzFiLWk3x/e82bSpMaI1aArhMZsIHZm5kqJyKD/+11FwJIYWVlP/Ksz+/W\r\n5HFsDbSRxDHew38jsTGLL3GnjFqYmML/vCFCc7YOXRWzIoRmy+TH/HoRhy8T\r\n6biYGFfyJjVUf+E29kXCANytNKNCdqo6wT4DYDnd5I39H6G3j5QB0esBj+xn\r\nKK4r2AOcF3rw7XeEVbQOdyQl43DBQkT4s55jGJaAYxJ2pon9AfV0PUZEb3yI\r\nODfYVuaQFbSe6MLzAQ8mLLjqlXoXb24CJmqIilJVbAaFTEgOhzoQ18DUx2TB\r\nv+/y230O9ehH5cmWlt02JaSOKmP8t51v86sqX3SHLXn/0B/TQd90QtOXr1Cp\r\nwVMBr/uLXb6DW4rT89KMfttOgQdurdVSk+HRVOkv+OgY2aV67DLFiTBuB0Bc\r\nZ8YHLJWYuooS2sfIDMAqqRfUHJr2oav61is=\r\n=BC8r\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.3.0_1653080032027_0.7616313178467295"},"_hasShrinkwrap":false},"0.4.0":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.4.0","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.4.0","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.4.0","typescript":"4.6.4"},"gitHead":"9416c03726a44b5ee81f16293a6f7dcc38e6854e","_id":"@ganache/rlp@0.4.0","_nodeVersion":"14.19.3","_npmVersion":"lerna/4.0.0/node@v14.19.3+x64 (linux)","dist":{"integrity":"sha512-VbXmsFPuZQxAPMP0n4VmYp9DlXoauiiGJjSq7UpVfSvSFMUcvE+VXs89KMVV9Cus3njOsScJMBYb8czJ77iOiQ==","shasum":"73376c613f07bdb1da7b644b89002c1ff2840801","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.4.0.tgz","fileCount":12,"unpackedSize":40982,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFppA8WkzZDLspgmeYMzo2YHLUa5w9afqTdKSoZf57doAiBSRy3V7e2cWrZIWzKzAibnEpOwnZsM1Gz2If9LoEo3qA=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiomEDACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqMYw//cZqLd6mDJWJ4RQn8gyg0rVuCU8MfohkYNPrNvG3oZ7l1sQDr\r\nHXkSKAdMdqiiFSSEPAlBrIwicP6XgXeiGb3rP8Z1nVc7wI+8VTgAcZ2YpC7V\r\nF5k0H+Pl2cp6NYYOLRlzRsQyVTPbTD4nsRNMc/8XnbYknBk0Mx7dX1W+W1Zx\r\nvIA8iGw2xoG0Z82B1MJoaQaSAHdWpE3d+NMr4UeDaawTpZWF+1LuvfTpyvlV\r\nzX1kww+OVkpMc7hHRwNNIc9h50Hlu8/TXC8xcXcDV9V8LKyARsn9gnFxXyLx\r\nk1cNbpJjXriBa+gujO5fXnRHWMpQ4tG/4D4gkKd07pOjDoqwLLJIiTiPjVLw\r\nS00kSiUBOVucx8s4DM8nff2vm1h63v4SZiJHFqw9y7qQBdig2QwYbvsgmNgR\r\nhyf4tobJYWVjcWGU2HrakpkCUZOl1U6Pdl9II/CaMGBtwx3CngrQmcrfCK0X\r\nIAOjY33w4dGsWVCPaSNSb9IQCeLw4AI2u7XxP4eK453Eq4r66eRjUodBcjK3\r\n+qREgTENvvGBuFD/xASQsYp1xcRvrH5eDdw9izXfx02ybVqROPE0qpUYm+JB\r\nIeIDu2Hg06zH28RSUfGQu50DZOsHvsETygj26hALXRo6Hlq3nezkqNC07UC7\r\nGYfI9GG/D/uytvL/2bSc6szi6QGFNy7AxqQ=\r\n=1JUt\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.4.0_1654808835286_0.019992918040718344"},"_hasShrinkwrap":false},"0.4.1":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.4.1","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.4.1","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.4.0","typescript":"4.6.4"},"gitHead":"6eeaf3addc8a9f9b8c1a7c7625f4bb3f7d488b29","_id":"@ganache/rlp@0.4.1","_nodeVersion":"14.19.3","_npmVersion":"lerna/4.0.0/node@v14.19.3+x64 (linux)","dist":{"integrity":"sha512-3TItguT70yI5sS1sDxePMDi/j/dlG3xUiJ9CBIhK9EDuU876rM3yeOtftoMYhuOetg8yIQvkNUbp3IPbYxAgvw==","shasum":"e52a0f573f66af9bcf7a9a0c43daaaa9bf8aa350","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.4.1.tgz","fileCount":12,"unpackedSize":41144,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDWgZ6dV1lVMbfB35hMMgs71RQ3nKTB62+KdE3IFVaKmgIhALFzJHtVrLFZqpb/8Ezwyz/v2dVwj1yurFIVhFIVM7I/"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJirJhJACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoN/xAAik+2VbsgV1/3nsoQX5BS69RjKzlPW4A6GQZD8QcQVkIVRBj9\r\nGf3SfWZ+WyShz1eW/256qG8bYuFnkW5xXyJMQe4qCevVdWeKyv+upebIIZL1\r\n5tWA/1+YUgCUq4GJriOIsgYjQ2/HrdKpQxunn1XMEgVxD1oVI1khxiq5EzVl\r\n5Lhtd0Xh9Ln2CuQJVkJ/JI4610HWC2l9YemCc96P0LFvUzpsNKgtXGQrOGY7\r\nxUIW+U+9Oxv70aRH8J7p2oNvMJOCGsGNVUG4tnKyp17dzs76KliHIHrgzHwU\r\n/UMw+D+jjJrnebfx0YepDkDJ675GE1Zfw7rOtKKIvOiIJavibzR4Q5r4SbjF\r\nFXED1KyN0KTXYTsIEB7mr0OXahsBc3R3jl1OgNAUd4EGCGjJc7HHNIwnDnzR\r\nVAsIZRlO6q0MAmXOGLWle5v8tmRjXcm+QXMkQFYiMbGkAb9HYso6VvJsFBws\r\n54bM8m/R+cCNl7d+sF8oy4yYzNlnI0JVSXSMq+svmWWtrpgi+kiWYPCXs/Nq\r\np0rZDycKoUFW8yNAiJsCXquIlr30lpiJfZmqgr8QFtyaswUd1Y50/Zf0ushJ\r\nDo4m4bDz08w++xI07TwKprzCXBzN+FlfXwnJ5639lLxuyi8yqMp8Xh3Seo0o\r\nEUQJtxBva7fO1Y7urXUaZit8kijBPo78Rxc=\r\n=qSHc\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.4.1_1655478345455_0.7862789326606423"},"_hasShrinkwrap":false},"0.4.2":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.4.2","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.4.2","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.4.0","typescript":"4.6.4"},"gitHead":"f2af451c420826610379b72d1bdacb8d5ca60cd4","_id":"@ganache/rlp@0.4.2","_nodeVersion":"14.19.3","_npmVersion":"lerna/4.0.0/node@v14.19.3+x64 (linux)","dist":{"integrity":"sha512-LP+SZHJRqNoiHVNFZ2hjevmXSabbE4Gsk8wunPOanYtLfADHnsqwQcTMQTWDPSxHEGIkEVHtg7PQXvcL5qA6lA==","shasum":"1db4c00983a825bfd194e9faa4108f89ccba8007","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.4.2.tgz","fileCount":12,"unpackedSize":41144,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDNa62Kuu+BXn9UANXgyPFlmXSLRrIpznT14Dl/uwYqAwIhAJXhKuuh9C/UzJVm5oxSjMdFjcT3B5Yh6TQzfcqF33Fc"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJitiPMACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpRIA/9E9sJSBbFvqX5dsm4TPfX7ejdBqKHLwQyOHkpCs+jhnBXBQ/e\r\nQF8WRixU8HXaPlE6/fhg2OeWRxdLTCLO4nrGz0BWr6omfN66eaca4bW8RIpX\r\nOu84F7v/D3M/Lnf1nF7RdmuPQNGcmL5Ht3qujPANxHecWX7Wc7psrkQIX9WN\r\nWdF1F7B9mhT1we2PNMPW2ycaJUGt699XOq1W/uez0tagzoekw+Q6MpQTWM2a\r\ncXev6XAEL8GKd6eSYYf2Qp1205Xun54nw7eCRuDvPO4+Mccw6F63Z5dQXyxa\r\nAtXBaYUp3QSHMz9mX1mQTR/rEEJopRj9cFFat6yHrPZ5mCftws0zdnm9QH1a\r\nzEoaaWNNiEN5qSxFwxSZ6PAWWhVPX0naXbl6ZPtFI5JLiT/lyTtn99Iu4FsE\r\ni5cC4Te7uE9qkXRU9By+pz16utxxyhT1NPjYkqYX/ksHtxcaO4VIJK4wCcq8\r\nWBsofi2TU7DSs30nTs5W0ZmeaahZIosFGhqYiBDS0W8TsDU8otssOUko+v8Q\r\nkIgjDqsT/Mer4clTTeYlwUTkkAnb7Z2/sr0R9ki7X53N9ub2OTxsuRWwWJod\r\neQhTTLT0p8/826/LOQa47v38WEsY8LwlNjxFQG4ReqqAR/W6AMdbFEnoUXGC\r\nGQQh6GNNw8p18VgKSBpGIJjsQvA8Ms6ftN4=\r\n=9E6W\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.4.2_1656103883834_0.9927107812814036"},"_hasShrinkwrap":false},"0.5.0":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.5.0","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.5.0","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.4.0","typescript":"4.6.4"},"gitHead":"4bac7d8c5023e7520759ffb4083a4425b30a3dff","_id":"@ganache/rlp@0.5.0","_nodeVersion":"14.20.0","_npmVersion":"lerna/4.0.0/node@v14.20.0+x64 (linux)","dist":{"integrity":"sha512-2hGLEUlWiFye6SqaicDAZJtugRvhuXRkNCqLd65Oi7CyvFy7Nt1GlqXk7Ig0LElMWf2GJrR/+TISFzXSajMkRA==","shasum":"c9d8f7166094e7d56499b7a8b888e66fffcd87bd","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.5.0.tgz","fileCount":12,"unpackedSize":41144,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIA4930vYZ0lOM7eyPGTQDX9UIQ/18P+PLxrdgpzL7VcNAiAepdGXm3Wwc+eCDYeg8KVFL6fSt/V0OQwfVUGBBdMwhw=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi4ZVBACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqVKg//TRUaBDYZZU0zcNsFvSvlQx0VcXaQs/cd8kgLNGuGc23jnw6z\r\nYI7mf5Frk4byzTqwjpUUGYoxXVsQHU2MWW8yymY3rGxY8XT+DaGOghKpqw6t\r\nQglWWa/dhPq+kyQgH0eRdND7BYDnT/pQ8khDdKGSS+hO1HgF7JTuzfz+RH96\r\nBQgpR/j8akRCqbupq+d/EieKHwegQ2IRPn1dz8xr0jfZVAFYw38pFsnO4eDv\r\nF6D/B36NjcMsf3IPEP1GyEenLzTzFqgsT9HXN8wyLrJxxjEUgOR5aNZmSnVe\r\nUI3sEoHXRx+x9SHGLRI+4KHhF3nZpenj01zdoppBMmlgoDVG9I70W3YqS4jg\r\n1DnFX+so3Gsw4zFVqwMJkk6svw5+Dwih1Q9nY7LyFSOazMSbSEe4tCmg/iY8\r\n23WuGrGNjono5xBoDV4zeebtXuweuIDSyiGH4hbPzoL9d7GzGCKSQI/34arh\r\nLp2yW2F+pqpGWq4qP1J6WziabwU1GYGPsYmYl5OTXb64qLieyiQ56QS9i27s\r\nwX7tSJX7fFavX0quBTYSv20MF7Dl4GjUkRXlQ6zV9YhKohK/WBWYi0mozakD\r\n1ocH1Uv/whqo2dmOLO5YgCg4a5OLYC7c6aUgAqVAw+mPdM5mizGPtv991aAJ\r\nHUy9fs5FERPfiNCs0d3zRQ1BdG9Xp9tJmeI=\r\n=J/mA\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.5.0_1658950977512_0.9121811075508557"},"_hasShrinkwrap":false},"0.5.1":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.5.1","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.5.1","rlp":"2.2.6"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.4.0","typescript":"4.6.4"},"gitHead":"3a74e07ea9a90ec7d6749cfad5703d679ba0dac1","_id":"@ganache/rlp@0.5.1","_nodeVersion":"14.20.0","_npmVersion":"lerna/4.0.0/node@v14.20.0+x64 (linux)","dist":{"integrity":"sha512-+czGrad5AqbX0ClBQu43t+Re8JXNGuhKdcKslKMLyqthYMOz7Mm0hGjn2Vju3QLxoEIMRDIn3OzkJz7jSbAKGg==","shasum":"be4c35c5fb65e7879de6b5dd4f8526e1bda3ae56","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.5.1.tgz","fileCount":12,"unpackedSize":41144,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAEx+4yYR7hhU6cpNdeJbglmI5Ck9pRltqFcVWYmbruiAiA3SOQO7wLqBD6iyK5fHm3cQJR3pXdnm9b9Jr4Ygn7BLg=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi+qo+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoAiw/7BxYAaQH47DrCA+RIufZS/lTu/8ZnbxQWIcUbxyxQLu3Qmpe5\r\nTAwwDvZlcf2ZFwnCDUi6RCba8Eo6dZboNjUXOKx31XnrKgvdbDqnU0SSkav2\r\nc6fcAu1eVdt0e01BuBCYUFHMPfe9aaVhvfb7Vh+zAmcJjS/krU46b3aOw/9v\r\nouN15MJxDGyNFRxGf3sSPcksTHVPb0KKnWzOSxxREkrAMWumdrASPNpNgIJa\r\n26K4HJunkBmGxo5EsFyg3U1tVzMGIauQUoffaKtSw3aCi867uJfgogU/XeFb\r\nxJNR13GABt6B4hnAiI8rD77b50QHnur0l8De8MAFX5oL/Y38PLS6iyyVKSVI\r\ne2MytwBQ7OmgJsUojHVJgAnSxMq9m0m0SS9sho2fd6G0Zqo0MmzQ5n7k4d5t\r\nifC4C1JufHrdrt0+F3c24raYO/F/GPtJ5P381yxvSKNMRP7OFUfIYOjLH252\r\nq3NwTS6uG7Na5MNVfOQv1ElU+79sKf1lRSkRGCA1P8t8VsvkViT1BHBpHPQQ\r\nzrwgRrIZ/hDjZAsm7N+qFJb7Ecf+CWdziJC7xXxEGadDFtJAcLAqxrTv4hqM\r\nF3quqpATqdHkFxnElyxJXPjkTDVPwAb4p+/9PZTSCfnpRc5rrF/4yCh2yY4T\r\nDt7PY/DME2CDKTx3AcviEtPqmOy0kWCFP8Q=\r\n=PDeU\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.5.1_1660594750655_0.16187057949643435"},"_hasShrinkwrap":false},"0.5.2-alpha.0":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.5.2-alpha.0","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.5.2-alpha.0","rlp":"2.2.7"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.4.0","typescript":"4.6.4"},"gitHead":"6529960b2426df095394b426bc998f4236140053","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.5.2-alpha.0","_nodeVersion":"14.20.0","_npmVersion":"lerna/4.0.0/node@v14.20.0+x64 (linux)","dist":{"integrity":"sha512-NgUcAnJtdwth5dX1Bic64jI4mZUHDz8LjGin2+HL5cw57QKO3P0xTWbmwmzUTSCdto3l76leunWJTeF6XKkpWg==","shasum":"ffd51d3002c173834b163235b04857a513e24a14","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.5.2-alpha.0.tgz","fileCount":12,"unpackedSize":41160,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGZANXwxt3ARhOTpxDKh8Z2+DQh23ktlWLALlnLnhd4pAiEA1njRdFh3YiCdBRqyXRhDkCf/JsHrcLt2ja+nkNcK/HE="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjCOovACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpMFA//ayie7gOyfpz0IaxszarbGCp7sNsoJ+w8BuBSx94xxapLbm1C\r\nPwipY/n9LCZfyraoHBheIss9nPwrmzAGcixo8xh5wTpMP/RdQzEaxwdloXgZ\r\n5IDBl045OXUh5LAvbJocuoM9kVJJv9SSgSRmU/tXOzSQ4bIg6RGxIXojArta\r\nYOjPi+e/U0CyWZJOwMOxV9O2sEAhJCpLICV8O/M7UXYc2cIwT5BSi9ZZAhZN\r\njXU8uhqgskE7DlIXNzUBbYXufXxTcKvdQOmCu2AsDiIKpsrRmTZijvRFAcx8\r\nvzm8csHVzoUYfW8RhaPYtY8hN4F55IrNZyJ5jfmDqeRgG/WsXtcO6z2X3dZe\r\nOQEUWVUIfuah66NiKqH0E3LwMIoDeVU+PqkNJpuuDyW/PDOBUvGdU0NoWkEN\r\nT8HbQ8c/C8ZJrdn+gbyQqYkY72EJ4NbF4tH1UA+c38x2V94qtLEI+nqORb34\r\nvq6rGyhZuyktrc/UtzeIjES+J6U3tYCuEqt0/yUXQMQz8WPY+a7DlLXpdaWE\r\nFIaJDGEMdZa8elrZGXoXAGBLxh0DgUiDS4s15Nn4bB+nOrwO2tN/xrofII8n\r\n4LQZF8YT0HJ0JkodCz8h+mTw4Nqhk+st8kopvKcjuiF20Nvw5Wd1nW4nuhAG\r\nuWv8INpSmMdatKX58MwvaJ9PpWke0rKjhlw=\r\n=Ljwi\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.5.2-alpha.0_1661528623101_0.2583184144023587"},"_hasShrinkwrap":false},"0.5.2-alpha.1":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.5.2-alpha.1","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.5.2-alpha.1","rlp":"2.2.7"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.4.0","typescript":"4.6.4"},"gitHead":"86fc1ffd5cb8889a36a3f78fb3d60c9ff89aeeb4","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.5.2-alpha.1","_nodeVersion":"14.20.0","_npmVersion":"lerna/4.0.0/node@v14.20.0+x64 (linux)","dist":{"integrity":"sha512-1tzoJH0vn2EuXmLZbk4z3KRVC16I28RrZZM0pM4Iq5jd1FMgQ5piWqiIW719+ANLIYba+dCKM4OgoSrA86PlHw==","shasum":"67d42e417b12103a09a9cfb5a08116c8bb95c85c","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.5.2-alpha.1.tgz","fileCount":12,"unpackedSize":41160,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCsToehFmbbokAZEk8dtSZbBagwdSt5Y6ZCo2kRs8y+eAIgGnHHaLTor1ki5yqVHC6CpTIyQx+1cuaZ9RkpOKKVL90="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjF5Q4ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqkgA/8C2KxwYLhEuUNP6DVI1TUJSv7XALDhW6gUVwlKmpYf5uC2pRc\r\njL7gkDQpATb0j+qURGwK7NFdjxjppYux1Vpe/udWQGqETge3peifyZumVLTp\r\n5xXwajLEIo0jHZCOdatbPiQEg6q8FuuZBewQmTY7/44/pxudJbg/YqAOoysn\r\nJJUlRk51tFz0HaxwdC27sDmhpaddnpQh9a4NTI1f/BvazkzKoY+lXzJQtAYM\r\n9XfAl+j+dEaQEEeuq3pS4sHyjrHQwAr5WUSL10iQUJ//9t9C31VBTDmz6SuN\r\nhvlUjRI9eyHCLcRvpIzpVgdI2g4z/tpxr32ScHT5WZNUBiKjxq6vIqOt+bxd\r\nFSqmEkKNeMEtZ70T3Dnr/NpNVAREYHG1kwtrnKTSojYlQrVD+CnLv7j+joRH\r\njDN/z+6dxHeP/IJ3MCIrVHveYuPMFwWcBWy/bOZC8LbHYV6tiYKVhUBrXPUS\r\nqTJ3AFZ1B2jhsjLI7/cEgMOijHMVm56PGSh47bfLcSy0MWGODu0ofk5APrSy\r\n69XD4g+OckjeS5+P6PUMj6OiK/0UcJoRdUm6EdQGehYT4Bnftobb0xUv67Nm\r\nRKDKWnh/XuXwWbmj4mm5PTOYGuzrYIkUClVhcmRXmdSHjlqQBOY9UBMKnppS\r\nIRG1pwsycQj/ZWiNReGNeOVAQyIMd7b/WIE=\r\n=/zXN\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.5.2-alpha.1_1662489656700_0.26523400439809586"},"_hasShrinkwrap":false},"0.5.2-alpha.2":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.5.2-alpha.2","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.5.2-alpha.2","rlp":"2.2.7"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.4.0","typescript":"4.6.4"},"gitHead":"bec1d7f374b760b2873e16a09849769e4a4386a9","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.5.2-alpha.2","_nodeVersion":"14.20.0","_npmVersion":"lerna/4.0.0/node@v14.20.0+x64 (linux)","dist":{"integrity":"sha512-JLtBd4hk4faPusSgZl0nhaIFJN+YKfKXeXJErwRc0qOkshp+pXoM/acW8DrCGiYczrPME9kbLt1JXeVlgT9tMA==","shasum":"7bfcfe4176be3b7c0de020261f46f2310ad9bb30","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.5.2-alpha.2.tgz","fileCount":12,"unpackedSize":41160,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIH6Vq0GHDVhNAt9Z98fLIOc5XgUeIEa0uVyapPLk6m8sAiEAlsRGQshZ83lP29jiMjCp+TXY88GKVx2CwcK9QBhWe5Q="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjF6yOACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo3+g//Z6q7GylLHJVRVagpo+ijR4zsvRXIuLwhRXKYT3B3RJ7AU2Z6\r\nbwtbS4YU8P4S+uSw64G3Nxs8Ym9jh6dGQ5mQlxeNPGv3RqS6k4lEQWMjP1pH\r\n32XIqfuVS18672Qq2rWB74Z93gSzsKXVUkpztIijxZEXOrAskVh0gN6GVIyV\r\nFminHu2EdKh1G8se9EmVNmYe/tMZR7v1v3+hgcHh4+7O3UVMdufCnZ2hbAMd\r\n9LSGICn2d/kvVSo+M/0AkEckl5SqTTNgpsK2gXyjYiEI1O2q5NZYybmFnJpw\r\n8r1u9hB6e/E9pUUKxz0K3/P5VvV4wl0OApil0DyD1gJmDVkXlynW7IjBvh/O\r\nDHvCSXAD5D3S7IofNi4vYWYIMqSOFCBXfsw0D4EpH2438f3kOYFCXTYbAShC\r\nVAnQyikSF5EvQKJI0aqf2Xtmt3jtieDCrQ2/0JKgA2/hTcWvBrmTVpgzEFuA\r\nXn12PFjf34KAKj5U5LMQZEhbID4Q2k3ePtGZO6DOzh53TJUkZjOzYV8Amewk\r\n9HCntjhU+7FJ7nKmdMQ3F6+1Gpd43pnVcS8nCf1qFRWLyeUORXmwoYVbKPm1\r\nNavEbmy51sNDGSWqKKDyYhgNCj/lQ/bY992UNS4nhgBNzFmkDkHMsZNFogiJ\r\nDIr7f6oW9DkARE4TaVK03RyI/ZsKY9DxCPo=\r\n=cNrQ\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.5.2-alpha.2_1662495886226_0.8550788426183458"},"_hasShrinkwrap":false},"0.5.2":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.5.2","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.5.2","rlp":"2.2.7"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.4.0","typescript":"4.6.4"},"gitHead":"e4722fe1f1755d34be17eb13f998c5f874647933","_id":"@ganache/rlp@0.5.2","_nodeVersion":"14.20.0","_npmVersion":"lerna/4.0.0/node@v14.20.0+x64 (linux)","dist":{"integrity":"sha512-lXo1DHbMnKuxCu3gYVbxrz/Neb3EwxnoNeP/pV26Ysx2uGCjNYYf1bSv7aKPLt+U6WuISOZO5E4FTHO+E4xObA==","shasum":"6683465ec6c9ac04252d68ee763b223914969eed","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.5.2.tgz","fileCount":12,"unpackedSize":41144,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFzFGmzieCBMOSPhxwXk+d9d7IAegyW4P/XiRIPSlwdYAiEA++N01f58DgqBHKaJgolijoGuJ3RJJku7iKBunWif9Hc="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjGLvRACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoInRAAmaF9XDW4sMR/JBHhaqDdJGBWmVcgl2z2xSAv4qf+P3BLV7TO\r\n/rTu3h0D0itQsYHP+A8hu48kmHC0nN+z785sfKfd5ypY2eJETMv44puOYWkZ\r\n+0xJXOQ2VOCh5P6laUVWti39n+Ze1/eoI6L5tCeUqpyH1oTZkC0jbJJFs2y0\r\nyb4GpIQijR4ELkfwaNPHg/K4AZkIQBI+ixnt45zAnnqFQfW4LY0UDAtOcWZJ\r\nTqhcx7iV/mk+F7TevwyY1PsnvR/wZpoaOuYn3eiM1XI3Db6TBVKjLcTJmsHq\r\nMn14ogabdjw78GunIduzw6cOlzPxPzBrGaCDQjFh3NzqKetiOj7cE4O0Jl1m\r\nC0jMYo/vwg9Ehphu/YUdI9UQkVpDbp/jTxxVU0lAXXmvBI4bYIbyvTS3sEwm\r\n9QXYRPsonVgxiz1sRhYlwXpAOAbj5m39df2CyNm0BSeHBJIUpd0+mu/wzc8r\r\nLKyOMDSABoVL/SPS0b9jJVxdtTpUY7PQ8VrdgbtP3RWP7zOxI3iTNtSamlRc\r\nH1YkBwd+hbfwsHHH/WpsTglkIqcSZSND35xleLYSBTi++d+56HOYnOvV9J2I\r\npUsp+5s8wz7DLnS54ROTecr2ux1II+QoAzhhYzuuDwgMz+o1zjzFv8XI39ci\r\ncD5zQG0V+B4K1yu9sAY1XgsPplX4A0rY5h8=\r\n=h9fa\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.5.2_1662565329124_0.28252968781682064"},"_hasShrinkwrap":false},"0.5.3-alpha.0":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.5.3-alpha.0","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.5.3-alpha.0","rlp":"2.2.7"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.9.1","typescript":"4.7.4"},"gitHead":"c62e6fdd944db54143e3e0b57fb1643148d85682","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md","_id":"@ganache/rlp@0.5.3-alpha.0","_nodeVersion":"14.20.0","_npmVersion":"lerna/4.0.0/node@v14.20.0+x64 (linux)","dist":{"integrity":"sha512-FeszbFRx5dLxcmQb6pv4EvbDwaAmRWU8l9ft9gRMxRqAYyoktx/G5+anofS+PyBfigGvvcCsoi9pFXs6ca1yVQ==","shasum":"945f3714d06d84f2db5ee04d613987c7210461ca","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.5.3-alpha.0.tgz","fileCount":12,"unpackedSize":49551,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBu6VhYoxlHEuHP3An2D/DVW1f011wl8BkNhqJTz7mNYAiA3zzpcSl6M2um3wyzQmw2SuN8pESxsZ2qZ3OJP7DDbIA=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjLi16ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqQDg/9HGtkOyZ31mr63PEO2Zcih+h2ymD4PKAErzLEFf3biLr3WLf8\r\nz3YmSLCoXxEcId5RVC8Tv21j5/7g7KMP3opYyarviwxXHE8N1HDMGkgGhRX3\r\nSUXNkCGo6ZIRbk+6UGofJhvP935sjR5GDJdT4B9S0me8bzvTKSy4NVjoOrV8\r\n2/ldPe1NidgbzY14D1lIC04Qx43mlhNSIlCFPZBvI+MIoJscz/czgfIDmudx\r\nDipy8YuQ/eS2BYEBZAj9yB9GoU4FXIToJvKn2X/qVqOkYHL32jvkNaAloQj+\r\nx7R+rRBrHvSYSSAyS/PbeaN+Fzouogdlt4BkA4BO/TQu5+QebX1a12zyf/wz\r\nThYkPTiwSENNmx3/GIYAUG/W6NtFNGImJY4kuyRTbjLD7fWpcRIDwBf3C/mb\r\nXNp/Dks3R7hhBsylryJ4QtwXUVJzecOcmqaAgzPEY5zHoN4JLT/+G0/rB7zB\r\nmwO9GmZe9txHIITy2qj0JawsnyjWhTDOHV5TP6FmcZB49LPetoYCiVwygbuj\r\nlAu9DNPlGqoHT0geoHu8hdy0RRYNiQnsC77pq6wTdYpU8WTWZVkFTCsGhTxz\r\nWg6SUq6AJZdrNN1OdVsxl+xiRijv7//vewsV76bwmTiXU+d50TBXn/4SETu1\r\nygMjfOGaYKyf1OPOGiVNv8LXYqy1Hw3m9Yo=\r\n=X7Sl\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.5.3-alpha.0_1663970682546_0.40351370488887905"},"_hasShrinkwrap":false},"0.5.3":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.5.3","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.5.3","rlp":"2.2.7"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.4.0","typescript":"4.6.4"},"gitHead":"5d5dad3ba59d515799c7d48c6aa4e995e8747638","_id":"@ganache/rlp@0.5.3","_nodeVersion":"14.20.1","_npmVersion":"lerna/4.0.0/node@v14.20.1+x64 (linux)","dist":{"integrity":"sha512-xQ1FndhTyAKMCQ/yamw3v1a9PkD1YvsTcCijnFJZeygI4a+p5Cm0YOTh/paoOSxrlctPmb+3e6ivCFc8yPM1rw==","shasum":"fe2209572968b98e77b35eb6438974e052635530","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.5.3.tgz","fileCount":12,"unpackedSize":41144,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICc47X7o6w4esIaEK4qHzFVWQpr6jaI0R2qzzQmiIcslAiEAjpgM4fGGdbvZZ3a78N0LrSLp0nmyLMomUuth2e7f7c8="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjPeVhACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqgRA//Qig93v+LHcdSQ11pdier9nKCQ66S1yLm8fOSgKj9g/Ev1kpX\r\neDrlLOI0lnxET0zQRaHridgVSeds1PP5gOHkRiHP63UgMwRz7un2jfbIDRGf\r\nlTX/kvcWnYKCR6DudRtpAHYcgnYOl4mvj5kXRevYKeZH2Df1P7YQ6LsBdr+j\r\npelSA3YLcvh4uYpWo9DVYxEoLgmfRbU7v6lL35/Pq7Zaj7GrzyYgopWWQwwr\r\nzy1iYFrQ+rueYyZjP6S71I0EbMla2TgEs2LnEJ4DbJ8a48HWRX6duO3BjI7B\r\nd6tEcROv/EKffpxTi4KqDoh+ZE8A0YrxuwpUXKNB+X4gZucL8pAjalKY/Kyx\r\nRJE802foQGQc1PiC0JsFr7LqIusT3wxcHNcPLJXDZ0shfbHERidfEyAAA7Uj\r\nP/8M0RR1id5gUyqOo/PBlaGCRakTpuvLDzV9DarZskwLnbBw4Y+3+Dx+jsAj\r\nET283cMEQuF+HgCCkCA2EW53lD8vsg98POUARpZHZYxdPIsT4H/BDP6hjIhl\r\n0ah7k8bQtSSlQt0ATa5Frmn8lYlZWkTxsh5JRl4wQkEHoGhcS1bZs6Y5QzCw\r\nckXP8zUozD959QN+0sbw8CFJMkwkzJL/Yp2gg/IM3qGfH8J/RNH6bxIxjk7R\r\nx3au3wQQfAyDl6AoKTXsQnD9QYN/2rNhRYg=\r\n=IAN4\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.5.3_1665000801472_0.742375287622006"},"_hasShrinkwrap":false},"0.6.0":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.6.0","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.6.0","rlp":"2.2.7"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.4.0","typescript":"4.6.4"},"gitHead":"d8cfb81e279993ea6b2fc0f70854cac8a56aa706","_id":"@ganache/rlp@0.6.0","_nodeVersion":"14.20.1","_npmVersion":"lerna/4.0.0/node@v14.20.1+x64 (linux)","dist":{"integrity":"sha512-ymSF5h9W6unVyirV9mx+XJfQFq2nRJBmhc0zfINQJ5SeYWhJbkChkgz0P4bGQnCvXyY4CUjwSH8ZuQmAQh+0VQ==","shasum":"d5ffcbc94bf2c262e8ab6413da33c80f23a6b1e8","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.6.0.tgz","fileCount":12,"unpackedSize":41280,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDNZ0Gta+rmd4HpRMpmIA+r2u/4CGIp76pFPQQ2ysdeEAIgdZHisssAO1QGkbI91Gcc0hLGqrTBsvDrG1bxJiSPW6U="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjWD1IACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqtQQ//UhT7A+/xkKnfggn9kNTo9Y4hcZA4sGtV/M6lZk+Gpb1UwfgO\r\nQIVGgLrddkDS4SJH/Vyj0jDqVc2LPZ3impYA7WyxES07UzB8gMlS2Qr1rc32\r\nvByuGuNWYZeMZRPnSX3krgUvoPktxu5SXXs4WzNcaFDYy5ahUuJvicVgyQw5\r\nvoZf4LIBkXFh2XBjzoO9h0EoPp05g9dHBxntHK5erZLe9Y3gmm1sFFwy6a0I\r\nvq+Sbzaiv9ZzGIzUfOlPd+BnKJwHL6ns/siWu3vuQJIhT6Y33KXL0rGRu0AY\r\nXFZeKk2GibZvK1YFyiUtnQ1W+dWCMEjoT8Vma1t3s0Tc6oNwN9ehc4mgA+10\r\nOCjUPAdCbD+mweVZ7jMjpSuP3jV0wjDskIQjr/iA0a5PJKYlitWsSNidSZco\r\nYSwIXjFs97JPi6v6KxjIWM0GHT9pefzJeUr8stVnIW9szlRQzjgq00IOX/bI\r\nGirXXkMZVK2Yxc7wKVDkEt1HA1LJtwbiwOkXlKlkSglIX4BkzlemgMYKZvoj\r\nZAPPMd7iJnP5gEcKaUh2qdRY8wkSB3+ExsvtN+DTYQA2xBZotK6OIY1TenjS\r\nrsKUJa07Xyg+lJsXElheJEY4HqYx3/64FHRpbxzhq762QsznebsLB4oq/04y\r\n0hf2TQQ/dMkqujiEk3FstXB6Ms4q8pbO+x4=\r\n=lXgQ\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.6.0_1666727240509_0.482768516834571"},"_hasShrinkwrap":false},"0.7.0":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.7.0","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.7.0","rlp":"2.2.7"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.9.1","typescript":"4.7.4"},"gitHead":"5d4deb3e5fed45765e611b5ef4ada4e329e7365e","_id":"@ganache/rlp@0.7.0","_nodeVersion":"14.21.1","_npmVersion":"lerna/4.0.0/node@v14.21.1+x64 (linux)","dist":{"integrity":"sha512-ZIe7C42w5tXCJ8z3qdTTAGpSyAoPB3NhcXhahGR0tjdEwEhITCZRK5z4TVLPsxpEH6z4eOSIPiJFE0f6mV92hw==","shasum":"3f5347685e780dd940c14e0771cc36046d5976f9","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.7.0.tgz","fileCount":12,"unpackedSize":49811,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAm7P43+9nB6SX716Xbpb2NL+Ph/pUVyHFNKdSOwGactAiEAlDbN1Prm3Zzpu58dUAzU0DX9Ijw0Mr6cJmJR4HzGcIc="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjm2baACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmryCRAAoNziZAj55rw2KRmxMUiKv9/ZwTb3FV/dSwRreaSP7onFPYfJ\r\nuf8sZ4HMwyRKmGmdQyjfPahbosvJ8u4Rhdy1wTDOFtGGevywwm4IeHvBgwnk\r\nZdREAtF0deJyP8tV2HEgjT0BclDaAQZxjEh/wl0Rr/6JTwWL3DURgQWST8i9\r\n33OUr7ZJ0KrOqxmq1IYJ9sWYFuU65puXB4e2Zip9wUYNp8Nb9xi9a8GKeBvH\r\nBi6tQoAskTonDzci45aH5qQnRa5BIceOVFwJrPWC1HWm+09hWjfQ5hRYLJHn\r\n2njreFbes3iLn/Co0Lj8vq8KxHtFUbeob4kOfJk+2gamCj201et5CcdJSawX\r\neUlFQ5pDtRSa4gjUrLEC4KsgKbVfjBRoCZzXLMvfHj3imyTIe23hK58+GD/v\r\n1HWd8wzqEF6OUG3TJsxjM3J96Iu74szQV3cC+tFCnYnpy2tsgIcezkCSJduh\r\nIirH5qmQZWHMhRkrYYHQKqmdbyraJd7g/Xz1xeWUR8cPOOSI3V8OpcXlxkkW\r\ndSq0r6RSh3g/6jE22g9LO08e/HI2pkm0uxJgMnsR2KIBAJU1TMu6YHJ05Tjt\r\nHOtgYve8jqGOOgue1vN7f555hSdICXEWUZ0xpAStdB1VCe0Ja02chlG5nBKC\r\nnrlcc746lXxjvWMFljUv1OPN0+l9xzRfy6Y=\r\n=e5Fa\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.7.0_1671128794200_0.9052248087630408"},"_hasShrinkwrap":false},"0.7.1":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.7.1","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.7.1","rlp":"2.2.7"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.9.1","typescript":"4.7.4"},"gitHead":"533f002248ad58ae670a346883fc74031637bcf5","_id":"@ganache/rlp@0.7.1","_nodeVersion":"14.21.2","_npmVersion":"lerna/4.0.0/node@v14.21.2+x64 (linux)","dist":{"integrity":"sha512-aqJLQQOoAlK3vRNHQN/aQhwJyWmUB/ZURiaTPK8eOrrhKHHpjWrO8oaR+b3Ty83zpUNhJUu/sZyUkY5tfdVADQ==","shasum":"7f193dfe9188e30e5a5a766298b45d4a709cff18","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.7.1.tgz","fileCount":12,"unpackedSize":49811,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIBAxca7Ffo2IuKTwZr3BkHzTQm7I0cDfQhYjcxWtsY5tAiAJW7mybGiU/Ct3o2JoQWA2P2See9kDX5RkoiyBJxpeUA=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj2u4EACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq1vRAApSpsiR6iBkqbggZs0EkkMmLAUOegtW7IZjC7tFoM6FgDUZ/m\r\nrvZnKkf/pCZ0dDRQW4q2D8M/Xl741exwTmNew05RN7Al5mpTRp5/X4UW2sDx\r\nI0ef+aMyKW4Mo7EZ9oce7/ku8EqJk1MkzvAaNx/rZ7G2t6m2dQRanT70KHcr\r\nlwOfkPZjkZVLIIbgzApquwYYFWT4VK/ZZl0NLHDBCV1qYcVyatTeT42ubKzx\r\nGhfL14KyRT91Wgl7Z70vklov3ilBCyRETY0cTNI3nKb1YUGxeZZh+sXuip7G\r\nzxQlxrotmyu6iGcVFw6G27ePuAdnaH3gpqFC8U3VCG9Qu8BVtbhtata5At2b\r\n1d9N06KNODIh5+SvxnOulhD7UHIupSKB3VDbohV4Y4dYvccgf5eBlcyS3amS\r\nz83jv8XrO5dcHG3wJkoMgHFpFTTqFs+SDLIsshkFgKjgAPQmjdm35E1e4TQB\r\nsy8fOPuFUvN3jnRlw0+fx9RmFh/1qSUqkVUj9V2N34WmDNYAeh5N1ocGZCNr\r\nH5rf5NHTMOhoQqrUrs+1W6fiKE0G1qelz98YWoRa51yyOWdB2oUCgPAWwIBf\r\nQ0u5hYIbakhZatSlahyvY/zDe8GndyK3xQEGb+H7c/H3cG3gf7MlsVF7Z4Dl\r\ng/EraIFgETxY6q6YpqQJVeJfroHHLmQoTdc=\r\n=Fc4u\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.7.1_1675292164249_0.2875706388924508"},"_hasShrinkwrap":false},"0.8.0":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.8.0","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.8.0","rlp":"2.2.7"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.9.1","typescript":"4.7.4"},"gitHead":"7cba77c07030f113ddad4258fdf3dd0150f8bcbf","_id":"@ganache/rlp@0.8.0","_nodeVersion":"14.21.3","_npmVersion":"lerna/4.0.0/node@v14.21.3+x64 (linux)","dist":{"integrity":"sha512-WycjRiYOKf99FR31ywOYOKAHuuZ3pJSByc9bGIwumlRtNTKOJULtkUXg2wL/1i5OnDV792bjkoXF3+kgkd1YKg==","shasum":"838186c3c0ed551d8c4d8d88a9fef69661d2f6c0","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.8.0.tgz","fileCount":12,"unpackedSize":49981,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHhjUTlQU6aQz8oXHBEa+9DSShraDMNdw+9SiUVfMMXhAiB59s74dr0896Ir/F6ZIu98tNzAI+6SZTFLaYeWcH/PCw=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkN0mPACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqCRw//R0wF3vOXn5zcvUNuBF8EZzfDcINdiBlakDHBhKTzKejaErOh\r\nf+xOranHHJyuFNjabRh+I2xzeXMZVIastkRERv1xMCMzisjrOFi9CL+jxLRP\r\nD5vA570kRJ+AJQd8mfllEW1DfLCGKZwBUdA0Qx/Lb1KfH55rK46GsUDLR4ix\r\nu+WnjRCM68V0/9P6Bgw1MpR7sHguPQtWpteAnBExD6gzRnLfGp3g3+g9SPrI\r\nIqPhK6VCK8LACVX/sf4YHL6X1EFMi5nZTQpcqHyyzLW+Mdx5zdhDnL6lo3mN\r\nu1k9Z7R8Ne4YYlH7hHaJPedNrTEFWkhbNH32Xp5G8+7wQ8OKBoC03y3XORgJ\r\nbywuMxfkUDfunoc8R2IBezkWuBjTHAZkIpPS7oQzoRjfosTyFo5HBwPHFM0y\r\nxovWDZvbsw9BnhwaNAurR0joUWjZwMloX6lEl08TjlNnGzXxLdxeLUuhsvDj\r\nSsK3PHUSkjLr1E9B0xbExnt2rBiazxQ/lQTxtHrpY9CGvPcu8tZ4Q1LTSdRn\r\n5d1v8eGB7mviZk7XaBVfB+9eBaOL8N73RODMIIlp4lF2G1xQ0lyX7MxxaW23\r\nxlxHr5gAu+ec5Dk5nxSPNqrGbCucQj/CLDXufS2Z4cW10OilOivjr6/xir3J\r\nAYF94UGqWUiAvI73f2GkW7eP4QpAASjyKxc=\r\n=xMQG\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.8.0_1681344910948_0.5348018151483631"},"_hasShrinkwrap":false},"0.9.0":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.9.0","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/src/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"src/packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.9.0","rlp":"2.2.7"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.9.1","typescript":"4.7.4"},"gitHead":"cb66fef410b40d628acfd97f32e6b300e6f9f562","_id":"@ganache/rlp@0.9.0","_nodeVersion":"14.21.3","_npmVersion":"lerna/4.0.0/node@v14.21.3+x64 (linux)","dist":{"integrity":"sha512-6M4peNcT/OepXWmrBR1tZrgwFGXE7eH7Dm6/+NKIvHXxxPyWDBcsX4wpo61Z6VoryDvsCVPGnsbp7onFpyuzLQ==","shasum":"549a95596ddf076111762a14b36193077456ada1","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.9.0.tgz","fileCount":12,"unpackedSize":50117,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDkAuSQ2bcWjysLv6ToiGweSgywm7zmh0Epn8xl0WWvOgIgbq0EjuuHLahwESwgxcbb0iQtQvzDPYiAOlmqPsLyJsw="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.9.0_1688592917238_0.3777906243337419"},"_hasShrinkwrap":false},"0.9.1":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.9.1","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.9.1","rlp":"2.2.7"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.9.1","typescript":"5.1.6"},"gitHead":"d4618893aaa38a41e2c4d51a603f7048b8635be1","_id":"@ganache/rlp@0.9.1","_nodeVersion":"20.5.1","_npmVersion":"lerna/4.0.0/node@v20.5.1+x64 (linux)","dist":{"integrity":"sha512-Yi5xeGzpWigJzEqqZwB8zgdZ+oaEdY5O5IkULnB9tLGCQ8Uy6z6wnlsxbfiEYfGYesQCyS6yWopxY/nhQHUFNw==","shasum":"2ee4381920a81b5e0cdd68ffae409b31ba04e7b2","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.9.1.tgz","fileCount":12,"unpackedSize":50957,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIED0SAYvJcedlWhDBNgMM5gJEWQgTNbfKgCbaJ/ZzfyDAiEAmHILzKP7Hlm4Zbx19CJofnn3wQULD+UmBQscRPWMWN4="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.9.1_1692741548798_0.741706520810556"},"_hasShrinkwrap":false},"0.9.2":{"name":"@ganache/rlp","publishConfig":{"access":"public"},"version":"0.9.2","description":"Recursive Length Prefix Encoding Module","author":{"name":"David Murdoch"},"homepage":"https://github.com/trufflesuite/ganache/tree/develop/packages/rlp#readme","license":"MIT","main":"lib/index.js","typings":"typings","source":"index.ts","directories":{"lib":"lib","test":"test"},"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"packages/rlp"},"scripts":{"tsc":"tsc --build","test":"nyc npm run mocha","mocha":"cross-env DE_FILES=true mocha --exit --check-leaks --throw-deprecation --trace-warnings --require ts-node/register 'tests/**/*.test.ts'"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"dependencies":{"@ganache/utils":"0.9.2","rlp":"2.2.7"},"devDependencies":{"@types/mocha":"9.0.0","cross-env":"7.0.3","mocha":"9.1.3","nyc":"15.1.0","ts-node":"10.9.1","typescript":"5.1.6"},"gitHead":"547c900a50d19b094ef636a9aeccf4f7f2356430","_id":"@ganache/rlp@0.9.2","_nodeVersion":"20.10.0","_npmVersion":"lerna/4.0.0/node@v20.10.0+x64 (linux)","dist":{"integrity":"sha512-lFwRXGRoKfZHJPwSkCnC4md8qEC/EJ6NnVLXJLcJ9j/HcyT/IUqakl98j9li6CtIKLzVao6ZrT/Jja0AG/CjVQ==","shasum":"c5915a8b8f78ed81999ad2b258f4389f52f13f29","tarball":"https://registry.npmjs.org/@ganache/rlp/-/rlp-0.9.2.tgz","fileCount":12,"unpackedSize":50957,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCcZZQTL0g0vVVP+3yE0Ygsy0wj2vtz7I4GF8UGqJ1/jQIgLlm3XI3Ky9UpBcBdv7hjJNRtMMbkFewBRHAdxweI57o="}]},"_npmUser":{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/rlp_0.9.2_1703117997739_0.7834522058487734"},"_hasShrinkwrap":false}},"time":{"created":"2021-07-09T01:12:48.413Z","0.1.1-internal.1327":"2021-07-09T01:12:48.751Z","modified":"2023-12-21T00:19:58.159Z","0.1.1-internal.1328":"2021-07-09T01:23:11.614Z","0.1.1-internal.1330":"2021-08-03T14:07:57.702Z","0.1.1-internal.1332":"2021-08-03T14:28:01.214Z","0.1.1-internal.1333":"2021-08-03T14:43:45.353Z","0.1.1-internal.1334":"2021-08-03T15:08:05.665Z","0.1.1-internal.1338":"2021-08-03T16:27:31.445Z","0.1.1-internal.1339":"2021-08-03T17:11:06.901Z","0.1.1-internal.1341":"2021-08-03T17:27:23.419Z","0.1.1-internal.1":"2021-08-03T17:47:54.788Z","0.1.1-internal.0":"2021-08-03T18:26:41.517Z","0.1.1-canary.2":"2021-08-03T18:32:12.299Z","0.1.1-canary.1307":"2021-08-06T03:00:29.035Z","0.1.1-canary.1310":"2021-08-06T03:51:08.002Z","0.1.1-canary.1313":"2021-08-06T17:40:31.007Z","0.1.1-canary.1318":"2021-08-06T21:44:45.009Z","0.1.1-canary.1320":"2021-08-10T04:00:30.325Z","0.1.1-canary.1321":"2021-08-10T04:21:31.089Z","0.1.1-canary.1322":"2021-08-10T04:52:54.026Z","0.1.1-canary.1323":"2021-08-10T05:25:46.224Z","0.1.1-canary.1324":"2021-08-10T05:48:15.014Z","0.1.1-canary.1328":"2021-08-10T06:53:07.559Z","0.1.1-canary.1329":"2021-08-10T13:46:58.335Z","0.1.1-canary.1333":"2021-08-10T22:21:45.366Z","0.1.1-canary.1334":"2021-08-10T22:45:18.414Z","0.1.1-canary.1335":"2021-08-11T16:22:14.297Z","0.1.1-canary.1336":"2021-08-13T03:00:44.547Z","0.1.1-canary.1337":"2021-08-19T20:12:13.932Z","0.1.1-canary.1338":"2021-08-19T23:03:31.869Z","0.1.1-canary.1339":"2021-08-20T19:22:56.328Z","0.1.1-canary.1340":"2021-08-23T22:50:42.889Z","0.1.1-canary.1341":"2021-08-24T15:22:16.704Z","0.1.1-canary.1342":"2021-08-24T16:12:57.815Z","0.1.1-alpha.0":"2021-08-24T17:40:03.651Z","0.1.1-beta.0":"2021-11-19T18:17:49.521Z","0.1.1-beta.1":"2021-11-25T02:00:42.121Z","0.1.1-beta.2":"2021-12-20T22:48:48.056Z","0.1.1-rc.0":"2022-01-12T23:01:53.012Z","0.1.1":"2022-01-19T21:00:32.376Z","0.1.2":"2022-01-26T22:50:05.359Z","0.1.3":"2022-02-03T20:42:58.212Z","0.1.4":"2022-03-02T15:04:41.350Z","0.1.5":"2022-04-05T22:24:38.475Z","0.1.6":"2022-04-23T00:21:31.627Z","0.2.0":"2022-04-28T15:16:15.743Z","0.3.0":"2022-05-20T20:53:52.178Z","0.4.0":"2022-06-09T21:07:15.484Z","0.4.1":"2022-06-17T15:05:45.674Z","0.4.2":"2022-06-24T20:51:24.048Z","0.5.0":"2022-07-27T19:42:57.726Z","0.5.1":"2022-08-15T20:19:10.807Z","0.5.2-alpha.0":"2022-08-26T15:43:43.331Z","0.5.2-alpha.1":"2022-09-06T18:40:56.896Z","0.5.2-alpha.2":"2022-09-06T20:24:46.419Z","0.5.2":"2022-09-07T15:42:09.281Z","0.5.3-alpha.0":"2022-09-23T22:04:42.710Z","0.5.3":"2022-10-05T20:13:21.653Z","0.6.0":"2022-10-25T19:47:20.705Z","0.7.0":"2022-12-15T18:26:34.393Z","0.7.1":"2023-02-01T22:56:04.379Z","0.8.0":"2023-04-13T00:15:11.099Z","0.9.0":"2023-07-05T21:35:17.439Z","0.9.1":"2023-08-22T21:59:09.043Z","0.9.2":"2023-12-21T00:19:57.889Z"},"maintainers":[{"name":"jeff.smale","email":"jeff.smale@consensys.net"},{"name":"truffle-cicd","email":"david+truffle@trufflesuite.com"},{"name":"davidmurdoch","email":"david@davidmurdoch.com"},{"name":"micaiahreid","email":"micaiahreid@gmail.com"}],"description":"Recursive Length Prefix Encoding Module","homepage":"https://github.com/trufflesuite/ganache/tree/develop/packages/rlp#readme","keywords":["ganache","ganache-rlp","ethereum","evm","blockchain","smart contracts","dapps","solidity","vyper","fe","web3","tooling","truffle"],"repository":{"type":"git","url":"git+https://github.com/trufflesuite/ganache.git","directory":"packages/rlp"},"author":{"name":"David Murdoch"},"bugs":{"url":"https://github.com/trufflesuite/ganache/issues"},"license":"MIT","readme":"# `@ganache/rlp`\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding\nfor Node.js.\n\nBased on https://github.com/ethereumjs/rlp, with some additional optimizations\nfor encoding:\n\n```typescript\nfunction encodeRange<\n  T extends EncodingInput | Readonly<EncodingInput>,\n  Start extends RangeOf<T[\"length\"]>\n>(\n  items: T,\n  start: Start,\n  length: Exclude<Remainders<T[\"length\"], Start>, 0>\n): { length: number; output: Buffer[] } {\n  //...;\n}\n```\n\nBegin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\nfinish encoding.\n\nReturns an object containing the total `length` of all data in the encoded parts,\nand `output`, an array of encoded Buffers.\n\n```typescript\nfunction digest(ranges: Readonly<Buffer[]>[], length: number) {\n  // ...\n}\n```\n\nFinishes encoding started by `encodeRange`.\n\nReturns a Buffer of encoded data.\n\nAdditional changes:\n\n- minor optimisations to `encode`\n- `encode` only accepts buffers or nested buffer arrays, strings, number, bigint,\n  and BN support have been removed.\n\n---\n\nThese changes enable encoding data in chunks, avoiding processing the same\ninputs multiple times in common scenarios withing Ganache. Example:\n\n```typescript\ntype EthereumRawTx = [\n  nonce: Buffer,\n  gasPrice: Buffer,\n  gas: Buffer,\n  to: Buffer,\n  value: Buffer,\n  data: Buffer,\n  v: Buffer,\n  r: Buffer,\n  s: Buffer\n];\n// encode the first 6 entries\nconst partialRlp = encodeRange(raw, 0, 6);\n// encode the last 3 entires\nconst signature = encodeRange(raw, 6, 3);\n// combine all entries\nconst serialized = digest(\n  [partialRlp.output, signature.output],\n  partialRlp.length + signature.length\n);\nreturn {\n  // computing the `from` address requires entries 0-6\n  from: computeFromAddress(partialRlp, v.toNumber(), raw, chainId),\n  // hash requires entries 0-9\n  hash: Data.from(keccak(serialized), 32),\n  // serialized uses all entries for storage/transmission\n  serialized\n};\n```\n","readmeFilename":"README.md"}