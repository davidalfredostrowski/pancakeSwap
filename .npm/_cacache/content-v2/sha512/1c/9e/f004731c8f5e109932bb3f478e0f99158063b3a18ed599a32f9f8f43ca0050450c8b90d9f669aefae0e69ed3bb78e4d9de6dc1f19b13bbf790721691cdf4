{"_id":"@ethereum-waffle/ens","_rev":"145-5e86d4d98e2e28f7462c804e31766f0d","name":"@ethereum-waffle/ens","dist-tags":{"latest":"4.0.3","beta":"3.0.0-beta.3","alpha":"4.0.2","dev":"4.0.3-dev.238c11c"},"versions":{"2.4.1":{"name":"@ethereum-waffle/ens","version":"2.4.1","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p ../waffle-provider/tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p ../waffle-provider/tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"devDependencies":{"chai":"^4.2.0","mocha":"^6.2.1","@ethereum-waffle/provider":"^2.4.1"},"dependencies":{"ethers":"^4.0.47","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/ens@2.4.1","dist":{"shasum":"ed6d1286b2d6f060bbe14a746ba28211a5bca31c","integrity":"sha512-bIsSCjk/JmrncoAdNuGbAYAPH+nPe8XrXuVltgMaDx3S5v6MvWCWuCJyiBMgmTqX7/RSyk+6m8mf89xR/d85Qg==","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-2.4.1.tgz","fileCount":37,"unpackedSize":23724,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJesVIACRA9TVsSAnZWagAAnmcP/0OSYvBnfGWP4D5/I1qC\n0sC+DM/30osgoClh3iZ2suPlMvoy6vMzU+AiWcxTopvMWdaiWN7H5T0N6Uj6\n5W7Ht7CC+JQZHoCafAXqrJampS2uJYCURodbTbNu2ZQsMhv4g01fBpGu0zOl\n5E1tS/0pa6w28YHQ1eRe13jRsZ7nkkQ/YwasPL14Zq5Xc6nmHe+9q7SJlscV\nuDgdQpYG19gqHoMGzxnDWPB/phnbGhOworVYq1sGu32WBYApj4oV2u61zxlK\nkUUkTl30scjJ2QxI0w2oRvTZAt1WxkVlhy6HnJ68uKm20c0I79GHbt4jQ4e1\nYEKsz57eg31lvTa7RMsZYn9wG+xLq7xPI3iwqAml3dgfkukjQM1JGQ4xC1oy\n/F6E1W94JoFQvrzm/v7iuGoi6bkKC+gz4zdkUlwZfIq2EduDnyXPyFXgqtfs\nXe4Z+WhTxdJQyyCfAqEgushV1+DjVa9oOCDvWe0VImr0LoJrxCFTGEuVsl/d\nei3IMmDCQUznl6jWbVNioY0y+FZucqZlJ5qRycQlXfVdk6v2TlPfrcErelTN\n2FVPOoKh/gJ3MPacts0hm4okuFH0MnjchEoAn4VHXwrEJXylt3wgMZdxCBsw\nsr37fbpAGLPgZnSepG9AlM/+EjYeBIneXMKVp3u2JBe3PVFhHfR3wfs5MTUO\nlhHc\r\n=Bq6e\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIEvWqpueb6yrNooJBhgHeoeAP5xkqxXiN2FPPo19B6c8AiEA/F7798nOga/NWKkIJzwW9P7lBcdmKOMQaAh/t823J2E="}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_2.4.1_1588679167908_0.8848805600810759"},"_hasShrinkwrap":false},"2.5.0":{"name":"@ethereum-waffle/ens","version":"2.5.0","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p ../waffle-provider/tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p ../waffle-provider/tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"devDependencies":{"chai":"^4.2.0","mocha":"^6.2.1","@ethereum-waffle/provider":"^2.5.0"},"dependencies":{"ethers":"^4.0.47","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/ens@2.5.0","dist":{"shasum":"c20df7f02e7dc5421d44450ceb0396936c6d491c","integrity":"sha512-0flcS0baCfSi+txcE0OzXlU1O99LZ1rhkA7qzfU9j4yKxKufCcvZcZulMPcOVuCyczMvq/zfcjETgY1mZQkynw==","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-2.5.0.tgz","fileCount":37,"unpackedSize":23704,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJesXW8CRA9TVsSAnZWagAAEpkP/R7GpBVV8AY7H0Nst7Bu\ny3Iamr212fNsCY3tvICjCIUmHXX1B5t0f7OlHG24e80pwAKywJiKqMSE4m8A\n4QV+tkZeHeI9F3wvB/i0Ga+6gw4EHB7mrjyvPOikliPN62wosaSvbj9Ac967\nIPq5yGFZVykUqnlcaee9LRhOX664krzpDQsP4HPgWdhGJaEH/DSCebfU3ab1\nZDB+kpIR9Kpd4l4F78NcWNPBsz2ulRYUkrdMRp5r4HTFCFAwLn8VlVW91aO/\nt8eSkVx/qR8B7cRB42CsEwdWX2hWbrKHQbqXz5yMoAVxsZqEf3coWYjPP2BY\nENRM5GwTwlDCuz32BJbopJeHbWVkHXVT0Uh4GbBkvvfld4I6bGqFZ6J/Xscz\nVpY2mW/Ln7lTQMKD0svlSXjgsJz6dbbwg52acS9LJPmSYP2EvZNnrhGKFuzS\n6XzEb/dQP3mBhnha+kJ7bZRkDpff6UQ5XnfjXXqeeEn78w8f0cdahVbSP2LJ\nmom5sx+pDsrhep0Rd6WrBW9gNEqxIjOZzancM4BXPCWSW00sBD/hZH/n5mvT\ncTk14+yktJfANbFSueJenG/XfW9GMNqiavu/RdYVXhIHDBRxLQq6xKPEiuRV\n1BoC8adVkCkHpgU3mFgcl03HF25+S4VZmwnM8S9vPsuBUWaNz4ZjPvAZJmgi\n4P5p\r\n=v5sT\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHUcwZCzHt8t5UjBbZxQNX6DbFnZ1Tyn807zBktN06SdAiAp1RtWrbP5XtxNEPmxJP3b6C8oQWIjHxS05Bdvd/5fAg=="}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_2.5.0_1588688316057_0.27291133606264717"},"_hasShrinkwrap":false},"3.0.0-beta.1":{"name":"@ethereum-waffle/ens","version":"3.0.0-beta.1","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p ../waffle-provider/tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p ../waffle-provider/tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"devDependencies":{"chai":"^4.2.0","mocha":"^6.2.1","@ethereum-waffle/provider":"^3.0.0-beta.1"},"dependencies":{"ethers":"^5.0.0-beta.184","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"readmeFilename":"README.md","readme":"[![CircleCI](https://circleci.com/gh/EthWorks/Waffle.svg?style=svg)](https://circleci.com/gh/EthWorks/Waffle)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple ens builder for testing with ENS.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENSBuilder\n\nThe `ENSBuilder` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENSBuilder`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating of ENSBuilder:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {createENSBuilder, ENSBuilder} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ensBuilder: ENSBuilder = await createENSBuilder(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to creating top level domain:\n\n```ts\nawait ensBuilder.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function to creating sub domain for exiting domain:\n\n```ts\nawait ensBuilder.createSubDomain('ethworks.test');\n```\n\nAnd use `setAddress` function for setting address for existing domain:\n\n```ts\nawait ensBuilder.setAddress('vlad.ethworks.test', '0x001...03');\n```\n","licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/ens@3.0.0-beta.1","dist":{"shasum":"383d5491c5a01a87aa724f90059999fab45906fc","integrity":"sha512-ds6j0bfU6GhGxz0xV9G9dzskQDTLutlDkB2in47L89ysxMg3w6v4MY/mJbPyx7Vr87vnsjT2+Tr07WrTSIQ9lg==","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-3.0.0-beta.1.tgz","fileCount":37,"unpackedSize":23797,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJesbEzCRA9TVsSAnZWagAAh1gP/j1ah/EF7DJkG1RPVZsJ\nynlwn5TzYqF5PIO5ZMdJG57fVJAfp7dztuaPxttCEdyXcp+MAxclEmtIqb0Q\nfVHh313ITHQ7ciMuko0xkl6hJUhWrVB2Z1zw2UCUlnQuAM14t/OUHYHz9qto\noAz/LK0sz0inMn1plMaA4JMJR4aiPbXojcFrZcak1c0iwWZCUrtiY915+GrS\n8Qu8yyENFOX4oCTGskGHCHaEXvFkyeiRsxdxl3sB2Xj7Un6ZO81g+7tU1ew0\no5UjjtOzPcycBz50CR04m6sQAZ8Iy/zY1II48BVa382fNhSTYdOfSBi1a/8E\nHgv2us2/gnbkkZIEpDhTCjDdKPfL1Q2mDJ/Z4XgJOjmOfgTPGCcWsWMmAzGI\nYIVKKIPi+0Z9ddFMcMk48TEkdsfgA8VxVQQRZ7t2KzcXbOorj3rpClO+8Xhr\ngjI6bG/uzehTqd9IyWjZKLwJfgGggdDJJDujekxHq54wPOm+mBvDqeZsXqUN\niE5oEBV6XKfUsmO8Ouh9ym6z2PRwiCSMuX6zvflibhx5gYJTArZZz0ZLz2mZ\nqhW/IvT4VHv+yw3zMD9K2dDOU+Xcrg+OkOVSRfaZ9ob3k/1k4BWkzop1dN79\nBQPy9DErOdh6ie4vqNxPgB31LxQV5quduCaMA0EYhU2QqEnromzJJ3pfFWYT\nyAhb\r\n=vN/J\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAhpCVFdZhSE6CS16UqTys2qg+BZoETcdvGoB+1pP4fAAiEA1ob49ZOKpd5Khl9PeXzzMPGDBtUztg6UPCqYSUGjvpA="}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_3.0.0-beta.1_1588703538971_0.16842299720876053"},"_hasShrinkwrap":false},"2.5.1":{"name":"@ethereum-waffle/ens","version":"2.5.1","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p ../waffle-provider/tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p ../waffle-provider/tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"devDependencies":{"chai":"^4.2.0","mocha":"^6.2.1","@ethereum-waffle/provider":"^2.5.1"},"dependencies":{"ethers":"^4.0.47","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/ens@2.5.1","dist":{"shasum":"e6191c08940ec7f176e0e02ca57d402b2044ea28","integrity":"sha512-rrAXXQ+cAyQKBvnnPnTUMtfBw27u6//INZRE2THbmT3WLwTk2BUTvUXQWTmQ5/UjxpPdGPlbC4srxfQi49oPXA==","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-2.5.1.tgz","fileCount":37,"unpackedSize":23704,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJexVB7CRA9TVsSAnZWagAAuVgP/jiaUGNxFs5HujhTSj2y\nFXs3Iroprh2yzTLS2OEETqKakj12SbX+RjWJtL8aUMu13jByUwvgAqHIT/v6\nOdYVctu17jJlJAAUZGObOuBoRu88Bq38JpyMcqbFe5t1VETNxh4CvkrtKEkP\nKVRwQl8lLscd90NWZ+XIwADz846lI1FbkNhtxnpJzxZsvwBhPUrvOssKf+Qo\nmPute6cGaoZmobGkuu5G7m4MO+7JuiEQyy+whLpmbxyK41z2ZE/VzXdezC4Z\ndO+HG4i5HSaCOWvFG7DWGzOqtkWN6oFuEP9vMMeer8mR009Mm1Sn8w+EEhCn\no2/+rXNpJilnXtkXSyR57YiKqof8uvASTxxY0w8b4Q/oO/CCHa6x90z5tHGY\nLd+Q7Yt8rrcpcoCoIb480jvuF4kgCbCvFB3zhVzf2f5l/lsVSinYN2Hi59aR\nu4HbNhySUoVBIbVxldPnxSp11Pu49ql+FWRD0pF/IzBYKfK4Wuj4WYqvjyve\nqoQY4nHhd/nFOGGwu+uBQRtKNAOMr2gA6jCjtQ3fAQAqGI8dw6rMancuL7he\nRQbUYV9aTxHokN8EYEu0r3dYhxNzwlpGZSIk/snShcivrIyPoK2xSbCqeFNN\namdRcw+rjdYf8cwZ8B1PJv5NfCtek03qj+bgtxMDRl8S86QzOwSOIk3SVe9a\nludC\r\n=o/Gx\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDi9ES5icphRa1nN5oiNfN/N9U38Nuv7AXryJL1ybqcLAIhAMUZZSTR4KxoPmKNsNdOK4CndFyoYgntJ6fUhiATVvfx"}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_2.5.1_1589989498685_0.779341798062668"},"_hasShrinkwrap":false},"3.0.0-beta.2":{"name":"@ethereum-waffle/ens","version":"3.0.0-beta.2","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"devDependencies":{"chai":"^4.2.0","chai-as-promised":"^7.1.1","mocha":"^6.2.1","ganache-core":"^2.10.2"},"dependencies":{"ethers":"^5.0.0-beta.184","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"readmeFilename":"README.md","readme":"[![CircleCI](https://circleci.com/gh/EthWorks/Waffle.svg?style=svg)](https://circleci.com/gh/EthWorks/Waffle)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/ens@3.0.0-beta.2","dist":{"shasum":"d53f6c396491fe73d0e9f2acf3f01aa87d83cea3","integrity":"sha512-K8mPV0VJqRLttKL/4cYC9YmfCQIJ79yWt9W0EpzD3XliKAqWflOkSRqOl0Igab4qGZ8aZ3pNWznZO/9xNJ6dMg==","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-3.0.0-beta.2.tgz","fileCount":33,"unpackedSize":33486,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJezAx2CRA9TVsSAnZWagAArtcP/Aq2JbVLkvK0x5l/+TSF\nRJmtFIhkopV1PlbUrc4Vy69KUs8W2xd/zVNGqTCzrNFWcj8bM/zEKKHW/uuP\ncMS7AywwMUhJoMJdf1ucKLosUCeqGYBtxwpQJf7okRIMFNBCNtiQA8JgJPL0\nVVzLY62dBoc8LiDjRk/ZPsBVYXPYcXg9xPPQ1gLHZh1NBI8LG1iltc/OsING\nsJvgNTFkbCEU/xoLxUcAyiYFmvTxOFSgkAVZVrQrE+LqtC0VN5o4CF0JYUDQ\nsHcZEWQLv+3N97bTQh/6kDxgUg5e1EiKv5WCNzU4+AKtgtjDSis5Ux/YP8Nm\nD4zdT+akJkPDnxKlZtS8s4SeeGvK+ucjHj3IHFplilce/hxfm+Bzrrp0I/BH\nTqJz0uHVCKf+9lpiJEG7+oToqx1ip7A+Bn8dsnbMLWprsQz6k+oIEUlvntA8\n9NbBZ6d8x9V9OzQv7ZeS2RGTKqXYFz11uvCzGg5oxwDp5Nx9/zc8G90kfY1n\n74TMTXi5HDUnDUQEZqu3bWvKZTNVUSNCG8y654PBktXLG3+kWDG4GyDNClVd\nATTTn3mI6IrcaFBoYo3mwu17FOCmN5zR32B2pQNzly7cFa/uao5qajav85tC\niVU0A5EniwHFScwXn6yo2hZPgsmXo3TGJ8jYBhQmU7tIUA+YsJHFSx0qcsuS\nuLY0\r\n=9m2F\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAMiDgymKB8mNx04jwggpw5yxlfRRecnTsreSscIA45hAiEA+lEYV3q+xj9MvQQxJO31XFK9CiVoF9GoXO3CBKQCHp0="}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_3.0.0-beta.2_1590430837863_0.9653511112667452"},"_hasShrinkwrap":false},"3.0.0-beta.3":{"name":"@ethereum-waffle/ens","version":"3.0.0-beta.3","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"devDependencies":{"chai":"^4.2.0","chai-as-promised":"^7.1.1","mocha":"^6.2.1","ganache-core":"^2.10.2"},"dependencies":{"ethers":"^5.0.0-beta.184","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"readmeFilename":"README.md","readme":"[![CircleCI](https://circleci.com/gh/EthWorks/Waffle.svg?style=svg)](https://circleci.com/gh/EthWorks/Waffle)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/ens@3.0.0-beta.3","dist":{"shasum":"7f822234b8ffdf9bb27e31b83afa4635f16c6c7b","integrity":"sha512-s75XUuC/nrcZX3BKhXl1Ys6dHW74yNw26rCNsTAoqX7ODMmlUIlMrwhncEu3tgXDIlrdRcshTugBzjpiY5v+8w==","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-3.0.0-beta.3.tgz","fileCount":33,"unpackedSize":33730,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe426kCRA9TVsSAnZWagAACfUP/RJYgldrJZkHjLXUIvpc\nKJcz5AmBsxlWLhpqcMuQ/LE11sa7jo47GniSSOiAw6YBt3llZze0WBRXUOge\neeLrZ48OL7Rn+0CwvYhs8L6MpFjHya+3R6WFqQTIejiOSahkeA4O1BoikI10\nXmWwvB8EvknRJZ40L4cmwwzTGobVcBD/T4npIPkou5nSGLu2qGdG16w1Qg/F\n/fIJcyDZltxVRFSz748zM1tO1UxT9mJO70zJ/S4TBQP4Qr4G0laCZ+3PetNU\noTtnLLWVBvPbZrRRSTkkEyQM4UfJxKjIDTUEdj8aaXGTrL5dldOBPnNHWB3A\n57CKE3E5SXtcDnKl7iSfRGwyM+5mHmn9hTspC4yXCyshC/FKDaGANX7FRtQj\nGymsYoL55qf/GTRBcbbOzgVoI4tywxrJ7H96YsHvEkvCnealKQpLBtkt4t2t\nb+n0XZGWKBsGldmbpAobclhorwJ6G/ayM3vXMisHqvC0abDmTR0teVpxdF/t\njdZbmC6y9LhHNLO2t1iWaazdO5fAXVjoIH8DQqWv2KgNalmIREiDinWntHp5\noY0tLZl5nTg50YU5SeN8nRX/9AEfsfR0zlkvFOwR1qXpZzOiL0isJ83b/wsm\niP36Cn7rDBcFFBFwDi7G/tCVkWyxJ8jMLiZj6ELWrcu+dm2YZB+RSZbTcZKT\nbc8H\r\n=+ETr\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDG733Hmw9lCSNLMOdJ7T4PBiPcVDQeaLSvclLIZUGQWQIgTOSGW5cTEtvQSKZYN6fzYuuarV5kwQBUmoEUmDdYB94="}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_3.0.0-beta.3_1591963299796_0.9957387292180273"},"_hasShrinkwrap":false},"3.0.0":{"name":"@ethereum-waffle/ens","version":"3.0.0","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"devDependencies":{"chai":"^4.2.0","chai-as-promised":"^7.1.1","mocha":"^6.2.1","ganache-core":"^2.10.2"},"dependencies":{"ethers":"^5.0.1","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/ens@3.0.0","dist":{"shasum":"44e0b58918cf76a31f5189637621dbf85d2f8acf","integrity":"sha512-ZH1vFx+AKkL0Q7mbJRz09LblurgxvYh1f6gxhnOWwACg6lt+H3wMGTdMSBZ8ttkxjfSa0CB2kFi3B6YKH/7iyQ==","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-3.0.0.tgz","fileCount":33,"unpackedSize":33714,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe5Gi1CRA9TVsSAnZWagAAJ9sP/RnS+oDkeoCakhz3v2Cu\nMHZiXDH46EswHx4xkgffjaFL4S++rW/f9Zj2u3r7/tr7NZvjCrLkaWQM0fzu\nRMGUc9lDcTIeK5VddQeX54JPguygPeFWlUcrg8vpFG3YuPMvVZi1O+QOxVOJ\noEyzadu7D4iUNDzHdQd5EXp2eWmtrqIXwh1rtEjBXAuoZ5Exp+gOI6uyUqFe\n5jXFNKWRkNnRhQTjGcXw6Npbv0ZQ1/yy0mwofnHF8XVQdWkK6r4jr6j6883w\n5+YVdscOwuuMW23mmMRqbOYK8xEV1BhWsfr1z7cAOn3CHQZ1FoQYxVkh8bMZ\nzL3ZrFOWYBPyVZAmJ38IThiQkRYErf+u+wkWdcRniLwckmL/nAosAdE6rYPb\nwAUnHXmuXpXe7wxo2emrL8rcb+EBjpylkiuXeZQR7Us1ezxuFVE11Vb7uc0J\njJjvfjOC7ORH4Ilr9fd+PGLHMRd8NjTdYKhm51QoY1A3GRRScFt4OYC5+KDZ\nHnQzRRt5lBMdm+Q9dRreynntgurpJgkyWHYeT/L/eoA7Ltbry1zpuiIhWng1\nK4PAXx2HufbLyJvyKrBggxTxFfgQ80laQT2PlNUh1/hoo2RzumWecnoxIifL\nMsw2MRiacYzY8oNOC5nvbFWeES1aE/pIM2zJ3BbF25m1B38PyA1YGI8hz78H\nRzMb\r\n=P9SN\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIC0KrEU0Iju1cAfkCcqtA/ZLcgrg/KD8eHbBj06fI056AiEAyVM8V6t5nIHFEx8ueYkWIvdpOMWZQzqvcWSZD35KiHY="}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_3.0.0_1592027317021_0.5674921563160966"},"_hasShrinkwrap":false},"3.0.1":{"name":"@ethereum-waffle/ens","version":"3.0.1","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"devDependencies":{"chai":"^4.2.0","chai-as-promised":"^7.1.1","mocha":"^6.2.1","ganache-core":"^2.10.2"},"dependencies":{"ethers":"^5.0.1","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/ens@3.0.1","dist":{"shasum":"74e989276273a1790586c0a9cfa16d7b993ed4dd","integrity":"sha512-nylX5Pi3M5CQkvOMX/5uCO+2i7R7RZg+aCUyVsYP99IafG7/FxxA8OBZZ2L8vpag5QxN2Ed4P3UKGTok9YPKEA==","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-3.0.1.tgz","fileCount":33,"unpackedSize":33714,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfAaoKCRA9TVsSAnZWagAAJywP/je7oWUBRqK/vVYtCIWS\nB9HHgx2E10qiUqfPGcjP34tmSCMg5vkYvXgADoHGf4mA0TBYdE4piAvmcrMy\nKNvKlcjlwrvkL4O1wQOKAE7RJuUKwO0SOYXQe1wNWmASGlEt4pCg5v6vUA+v\nGpu8Yz+epjk3B/YjkfwQN+RDjPKop8eDOlhmVN2gdmgZNR0aKc6k1oFAoYGn\nJX019TUosV8s6HYkJEpzcC5hpyNET+uCRmu0E2dut6Iv0yStVF5xiAiC+c0j\nWUjp8OFwGnCjB21u8MwSzXRmOsqBblJZt11GNbG8+zJ0DHHZTUrz2uTK6ZHi\neliGrGuLJE2pj1dgYRXSSStQiAttUTuzdixMsrFhKXW6pJs8hIs1lM6MiMDY\nn0nivGi0O4Xsi+n07awH07IPMmc+mvzk+HRupXKC+8NoPpdyOtR3PuIrEXuH\nejP2ZinJsZ4Quc3KMKdO0Pxd5eA4jOLYXeiBqFsUwwiLxnY4X0cEit8MHmg2\nHhek4IArFHDTwH9YFmIIpWesSDUDedJ1WOLeAvaEKvzNFF4d1vV7suJ7Nt29\n0magV60A5X8md8qRMf/Kl7cssv6Fb90KxJmsvU7ErJ0RA417brnNL4dx5R2z\namde8PrCPLCwqHJqk0TAR924nimdstUHJZYKBMacN2GQdrxJQeEg3vj1YEKc\nsDT3\r\n=lCn1\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEW42/TZ4vThhMmVGRp0UwO4zOGmNAqgv4/DB+0hfQNmAiBT8aqgw3TTnKA+twOK3DbRkpEaWlgjTdmAREGYdNw9nw=="}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_3.0.1_1593944585919_0.1062844293743388"},"_hasShrinkwrap":false},"3.0.2":{"name":"@ethereum-waffle/ens","version":"3.0.2","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"devDependencies":{"chai":"^4.2.0","chai-as-promised":"^7.1.1","mocha":"^6.2.1","ganache-core":"^2.10.2"},"dependencies":{"ethers":"^5.0.1","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/ens@3.0.2","dist":{"shasum":"0ace2f5efbcba79a763697830bf16260c0bd7460","integrity":"sha512-XkOVIbUvMt5hl6ZHgceqI7smWUercCV0LQtUjXgXPTUfONsB6JSPqAE2H6cc4sXqn82Q3cPThderLvT5QNTyRA==","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-3.0.2.tgz","fileCount":33,"unpackedSize":33714,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfCYGjCRA9TVsSAnZWagAA51gP/i2LhNcq9aPsRKsi6TU/\ngjxLrYqFvz/3FLJU4tuW4TyX8/DB0sbKCmG9fMxD/BAAJ1UwP9vcU0zrLot/\niDQTIBPSzA3j56hjYaOvEdQ3Sb70CBnXXCbEV7HlmPtTI5r2tBbvt9chRiUv\nAIQ5UBW/dmazu/A92k75Jii9RF5Qv7gTJedyFwrtf/U3mb2/mV22xzDafCMY\ng3odhp0StMW1MfX0rIvzPlngYutCWllSlvmvfgglriVjQz7GYUa6cIc0y9ey\nET1LFvYysFjwKm7JGEGIQnsv1Cba5R8iqEJUctDnx/n1N6QOl01XincOJpaR\npltAlf90MhOdHvtbMijlp7yQXgqlhnkDYe+wfm0CRsjncn2YyXYhOduMmhcV\n5I7QrKY04yQyYft0GbSx13sl2wTf7vXpekDenw5dK6F7gho88L6avdKc8dWT\nlrFyTTXuBwQMzZAilaGpsV8ZyyF9J9+7UcVgnM3pQHBNSCPxuHbXBeQml/4L\nuMUc65Cj3hZAURiJEcHkD1YHe9trNeJr3EPuS2Tj4QOjpxgWIp/LQGYNyP6Z\nUl/0B+X05e52m/ka9lOi266jcXwcngSDUtIrgsVanC5rqMJjw5fml0AL3Ogu\nEZIe4YjSvADsuCDPuzD5NMewXsSkwmeLddiDZ/IT51d/7SBJaaaKEIMs4zPF\nNkAD\r\n=8xMd\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD2Z2VmIIlfzqBG+2rfMddgtqOCo9VlB0DhFwwHj5I9VgIgcSnsSU72AxFqvP4RSNGslzkQyNGBnjSbGdW62MqsrJ8="}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_3.0.2_1594458530666_0.12972487811615574"},"_hasShrinkwrap":false},"3.0.3":{"name":"@ethereum-waffle/ens","version":"3.0.3","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"devDependencies":{"chai":"^4.2.0","chai-as-promised":"^7.1.1","mocha":"^6.2.1","ganache-core":"^2.10.2"},"dependencies":{"ethers":"^5.0.1","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/ens@3.0.3","dist":{"shasum":"d961563485b9b99fb2c322eab694781252d942c2","integrity":"sha512-P7yg8TuGuGLOBPh25IV4qbTDZH2TfyAyh9NYgh2qlDhCHsgyByj/U8B+vXbCtPRgdGCGzKJyiSMPOkEn5Kxf6w==","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-3.0.3.tgz","fileCount":33,"unpackedSize":33714,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfTRu3CRA9TVsSAnZWagAAau8P/1pmrON6j3nlS0a+lNYv\n6CStWyYHUtlYxL1upTCTFkvhQbl0prrLtbRhFjgBh2dlMKhN+KvLJ9QgGkAJ\n44OvRzPwrd85FA7iHTwt2Zu8bpZ1SsEl0qp7ZDjCe2ojV9ZRklKlD/tvNBwf\nYI0/1ibqZY03/+GK0hGhAyOqJEEGnxJCzENS7J2s2m/mCy528R8ZpOxoj0FV\nf87NYlLU5gCfehVgCA4mbWyT3wQrmvzHm6PUWA3kP1Pf36LRziB5lsrBq7cd\n38LHXtVjlnP2rXj9oIe7wxcYl7er7cxfApI6i8sG6aOB2CmWkv78OxFzH7m4\n0SIq6LvRfAXU4v7aBIfMBpzWdK74bP4DTN7rfOQYCXR9W9h/l6gqE1n1a5fn\nA3oH+QjjAd95ZqoDqx6MO/wa1PR+ji+QB8lhyItOu7rmxCrnOheUcNw5iCEt\nwm3caj/VwNXkvPYI6xNIVil3IkyMVa5igJrFIPuYuTbEvld0KFwhlbg9KfPy\nhVbFmcFtJEvPSjHZf1Aa8e7+SmtLslDoVUqhhT2XLsHTVe6d7N6ZSMqwXJCN\nLUFk5nHsWdM7Fqc01m72kwzA3avxCLyXJIzvmnTpREF5yV/nsD9x1+WNMkoL\nd4fce1ON3ERAhqA0bSoAVlf0kT+wPAd+kan1PEm2ZOpJyEvpP76A6bYazMhC\n7XID\r\n=agcH\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCOq2VQVqwe6/Lo81uyEZJT/qqlfJOOd3BUKUdKdDL+JwIhAKZqDI5joYPHDHM9vTqeJ8GNF5ljUKjY+uR/o8gAoa4q"}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_3.0.3_1598888886662_0.6113169964165173"},"_hasShrinkwrap":false},"3.1.0":{"name":"@ethereum-waffle/ens","version":"3.1.0","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"devDependencies":{"chai":"^4.2.0","chai-as-promised":"^7.1.1","mocha":"^6.2.1","ganache-core":"^2.10.2"},"dependencies":{"ethers":"^5.0.1","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/ens@3.1.0","dist":{"shasum":"d2d1173b7aad351360479a4dbe2626e9b960ba72","integrity":"sha512-Q0/MUBJQsiPseZv0Sv/GFOVdWGn0wRChWtUd30r94qlcM7OqmXLdx4YQSMGu7BhRPdp2DQE2CYMFTKjiznfRkA==","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-3.1.0.tgz","fileCount":33,"unpackedSize":33714,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfT1eBCRA9TVsSAnZWagAAtCAP/AxLejdBG/0GJIJ21iKW\ntBqEO9cu5r3ihdce4XDWPLbtPzCgua2HnB/IUxqzts+zqXwBQsPT/tTB4Jfu\nUdg956XRungaS3Sn6MOhUr5uYQTr8OHJWNIC+ceRA7FrAD8gg1U0sIeJxlWQ\nINptLfdu6ncvAgQ2Bv6gaxBrWPszne700uq3veroeDw4shkMFPTCXwZGLz1g\nkpdG+UlX563d7CDaa3fDp7DHPKGcAYISm1XyZl39jGBrawpGlgQ1u+5BvdvF\ns4PslyZuxrFuzK7TxCJsqPsemEI+R9tLVtC+VFjJerzwclrS9Mlbali+et20\nxlOtaU7z5VRoJ6nwPMuDb23B5avc1e/5BaR8OTrUgIQVrck/bsjRxuN1Etu7\nsUnCwQAFwYvDH3xD1/umSq8iLmcR950Rvsnmt4OrX6OSx1ZBpGMJD7pXyV5V\ngaMdZMd3z13zi3lMvjyGIuklT9Gp0+fLNsw+TRUCSuqzZfOxfE9Uf0G8m4Ma\nWpG8DJLjs/cv6B9peMuv/aTofwHTXYxL2Q2cr8eaiIgljz3JRBr+tARJ+OgK\nlW3zsIRaAj3Gf/tVOh+1/6q9+jRLZ2qEFBzf5b0hZ8LeXUBA8qtJ9IxmgMRf\noVi/XoQAoJiEIECJ/IgnIRZaFxdG3d3cQTzAfgUpBwTy+y5dzBBb5MzakILj\nG5c+\r\n=RiXN\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFSKw8WClo9XjFQycfJLiItOQBENME1hjdjXsXzqxwSRAiEAmPYl2qaWK3wKWp3yUqRWgQr9b9nROZtme8uV48nJPeU="}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_3.1.0_1599035264650_0.8365603454876644"},"_hasShrinkwrap":false},"3.1.1":{"name":"@ethereum-waffle/ens","version":"3.1.1","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"devDependencies":{"chai":"^4.2.0","chai-as-promised":"^7.1.1","mocha":"^6.2.1","ganache-core":"^2.10.2"},"dependencies":{"ethers":"^5.0.1","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/ens@3.1.1","dist":{"shasum":"0e0d35ff8e10e871b7dfc81eef60e4345df8f610","integrity":"sha512-36O7UBmPnDLoHaMcXBoCiF+lNrgiPs8DdLz8btMK231N68L/Bb1UdhzYhEeE0XsTpCkb+IxRr0Xl3gpI+y63Mg==","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-3.1.1.tgz","fileCount":33,"unpackedSize":33714,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfbzLCCRA9TVsSAnZWagAAal4P/jvHPGx/5rLZxgrFAUKD\npVrdkOlkhCTcZhzbupqXYYzc3hL9YvWXSKNbWr137/JUtvcn6Caaq5zmENOD\nQNczw7PfdVCufTY07esmyHMB+KxD6fAmN8zAvYdeGrqiYo6JIyHtxMTTOknR\nbUJ5zgJ0K2hzJKtwpTaz6Z4UVzrN8Sn7kDU8NFvvOGcIJW9SvjPX1o75Ofco\nQcB2+nxd4sx3R67P04o2hKvi+GJ6dJM6JlcHbSDE2hD6YNL1bJkK7isTt3Nr\ndsg738LsycOLo4VOTgpsTFyjPVdkyJogeU6Clq6uNagT+vxl4BZVcT9ApONW\nILE5hode6m9wCkzl9RnrFN3E8L5mYHDTuHwXsuK3m+ztM+I/innriqy8DV4G\n76M2I3W4ijUk78x/5sZzzZdwb68DdSVHRAPBKCMnlrMJz59kEpQN1FGss8/Q\naXbxY1uOQsIlznFRtDk02sDmWD/Ix89iEW7wJfdXLXIARVM4JuYZHn9EH83Y\nBKAKuGLDje4E06hnVWq3mbZmdtG0J9cKlMLjuGB5V5NEirJJnLSHOPlXPjOh\nEMoskGB6OwZe+ddcKvGfmxwOXUwqkn6Cb0+7z4/q10tHdIXInl2QOCel6MWk\nLsLfy3rXP9/IHmoyVXcnfy09qtaTyGv3/VYzTXrh9vibpxRDScA9e3MFPUG2\n+jZ4\r\n=j6pz\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCHvhJA04AgyIVU7NqVJlPVs3Kot7nRIe8a3zKu6aZ5TgIhAIWH9Q0F2smCzcnWZ85Fbrhnoi5QmdARFmMoQJf4+3MK"}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_3.1.1_1601123010333_0.3497401806140339"},"_hasShrinkwrap":false},"3.1.2":{"name":"@ethereum-waffle/ens","version":"3.1.2","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"devDependencies":{"chai":"^4.2.0","chai-as-promised":"^7.1.1","mocha":"^6.2.1","ganache-core":"^2.10.2"},"dependencies":{"ethers":"^5.0.1","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/ens@3.1.2","dist":{"shasum":"ed21ea9c376ec21f3c02649cc158cb60a69d94e9","integrity":"sha512-otoTGCClgCbyNQ7YStyTtFkCYo+K9XKslijOcTOGBHEp/tbij76fToXMp6EPUGaNg2mbNrWw9H8x6Glp7UD8iw==","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-3.1.2.tgz","fileCount":33,"unpackedSize":33714,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfktMzCRA9TVsSAnZWagAAb+gP/ioe1lXBT1MdUURDhy0G\nrm51stWaE7QVIMJvbVNgW/CI7wLqv92eEpUO/pwN85euAhr02iyLOAwIMCWw\na94bkhsYPbyruY8LSAkKi/wyq3DcpdiFP32OW92JwirX46jMjgYwqBwWNO7o\na5mYDefkgKGhJi6lQtGFGNm/jMFMTuw1xLJ3071KaW2kzDF/F9qDKXTKnO5R\nhUozx8gCDIU3dLWOyGAXMGOQnhdKSmArbz8PuBTm5VRxgka2zqTs3BnwrWyI\n46OxA+xGhe+Nv4ygbAlG6X1FfLWT4tAJToQDOCmL1wseS3gGqG8R3WacNg72\noww+rfM7j5AdcIDFuy8vpSbae8luiSELOrD8SwcBxvvD/hNx5vcEBPexg37i\nNWESocUC4FZpjRhw+t1E49tubcgYIUWvW5FF6wTwwBTDW1E5s2ZdYK9JeEOh\nHrSA5moWNk+D4/jAirVHcUylg0Cd1O/OM5dcNxzu57vs6Ll4/01TEjRkqFmS\nh9umXaqbADf0gG+BLZ3vsizcH4c31FXb71NxvoDuh812oQf4lb1exAfilXpy\n9944dXJrPX7kxJcCAa6P/kmNmUDyxiI3czI2ityi27hVZO67K2cLeYFn+p76\nsnKQkVO+wfpGRGnI2lFFO3pOD72LOkTEy5Gd7Nj+HTUUwPxtbqXqQDqt9rwY\nMP+9\r\n=Q0gc\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCBhMQa7rlQyzfoKEHWaP9orSwdcdvyyzOoq80SMZtayAIhANnb1jhuj7OTJ/MQ6jT9MGaOxX8eATquDJpwTOtiR3jd"}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_3.1.2_1603457843004_0.5580323651545358"},"_hasShrinkwrap":false},"3.2.0":{"name":"@ethereum-waffle/ens","version":"3.2.0","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"devDependencies":{"chai":"^4.2.0","chai-as-promised":"^7.1.1","mocha":"^6.2.1","ganache-core":"^2.10.2"},"dependencies":{"ethers":"^5.0.1","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/ens@3.2.0","dist":{"shasum":"26f7b2048a422eae5ce39a855e519e01ebc06953","integrity":"sha512-n4EYJDLAwN2X+2EsZMasXRlz5gYp39Tmy18RU4f6ZdnTNuVNw1BNkCC9VzrQooHGvHLjKZFPvcl+FRfBO+Xcyw==","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-3.2.0.tgz","fileCount":33,"unpackedSize":33714,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfnQ/eCRA9TVsSAnZWagAABfkP/0WIU7To5NT4vUW8+WKU\nbWBhnNzmKoWtaOXksP4CtmzIxIuSDbOGezUqi4nMqcoL/VUgD9Xo50cq4zQr\nSWlFaK1RdKtb7aqWfzP+zMQZlgvGY89DkmPhs220urHsAUZRlSV+K4EvVbE+\ngJJCzp4NGouYG98W7gHOaw+mKnKbJ0cryVmAar7IA+WtH1wzbHG8aA3uxzCK\nuQHooKMB2xIxVsc9/ujOKECQvQd1CX67wCr56rgytE/1s/IXroGUcggghjd7\n9xa3EdsV5HzdzwZAbx+mUEOyo+acgHIBvc67L1SOFLLPYMlm+WONynacH+T5\nV6wbZ1cHn1Gv9EDjraWWejfl1rthNN80yNDeQ9gjrNkd+cZR2H1yUBHIpSdd\niGW3E3enErgvxl+QA8JocGx5amvKGG9KtrgvCKgu905ipHmLrYmOPZS1/Cpk\nhcQTvMD8i0Pe7pGyYscpIDF6pkX960sf6Dj34202PFx8J9d4s3c1YaJsidLf\n3VX9SKftvxOz/Oc/jYkKg7oZPyIk4FvHF9ckdCUYSy+dvRCJR5Vz3t9hfB+Y\nznwFtKjkMp49IeKGl9GjiVg4GOS98ld2pmcdFkfRUZh/XPqm8/DQEDzW3mW9\nBPl/DwymKIiqnj/PIp8jlKCwWnjThCPbsVYwJq5mev+2dwFTCYag5o5ObGYo\nh/CC\r\n=vncP\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDrmIplfEiCCa17xSwCPsnfjhWPyiRFyeAws7z2MClVxAiEA6fMI6/Ri/iasvyB/U2mn2oX2G/1lTruyPU2hWVmG/dc="}]},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_3.2.0_1604128733842_0.859888976325917"},"_hasShrinkwrap":false},"3.2.1":{"name":"@ethereum-waffle/ens","version":"3.2.1","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"export NODE_ENV=test && mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"devDependencies":{"chai":"^4.2.0","chai-as-promised":"^7.1.1","mocha":"^6.2.1","ganache-core":"^2.10.2"},"dependencies":{"ethers":"^5.0.1","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/ens@3.2.1","dist":{"shasum":"9f369112d62f7aa88d010be4d133b6d0f5e8c492","integrity":"sha512-dXv/Mb8EgEYOKv2jjmkFNFCmSjNv8nPk1Gaegc0J/KXWuTU6CBOhWet7YS5joGO8ORK21MvN2qVgcQj+FYw0Dw==","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-3.2.1.tgz","fileCount":33,"unpackedSize":33714,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfvSuwCRA9TVsSAnZWagAAehYP/RBvGbEk0X7+NLcuptGu\nw/hmJwplKHAZza9Gu1tpChKOLUh6Byj25zy8+LH0Y/POX8FQRQa9KErZ3NAj\nZIH7H0ed/Ww07GyTOdi6iolvVBeJ3E/UYoWVKzyN8KJm1B1C0HV7+usn1+jf\nzlozXq/PaTDew4Cmbacvz+jNn717TfLGuVem695w/m09xw/GZY7XYwOsF5ld\nidOh7hNevxRqFO6FRBZAYein6c05n6cMf4Ea9AmBtGrVIFKY1XWAa7Aq4s6b\ngnWuurDO3bvMjdPTVV+qd7l6whgW01QevUUfVCTkNxmygBgK8H9Ak2HjKGRz\nfrsejlgRPa2fVB7Sg+P1D+TmOOSrYCMsJ8UBnSXNJgKjNPEKV34n9b7EO3S8\ndmEpEW/ZqXb/Q0kkOTo+rJJouM2ZKSWTnYFZRuYw6o2Y2Qtc0rgUlNVnP/OE\ndtGkO27KhRtcCu41/DbaoQWclxdpwBwC6LvXuv7wwGKXRN/Lrnpm7IfwyOjY\nx3Zgulr2IehEcW9XeaH09JAYP+Iu99YqreXkbdu3fn6nPNUYp8xznkaMfglq\nbbTquhpqSokrgtp6q0Fix7zyFEqrpIHb7QYFacCO1Ndu5mKR1wijV2ikDBAY\nHa5IGKooGLuaN5wEHAiYi1eikIbtw5533aKRns/SNcCUg2u6W6bn4x9jfY39\nYync\r\n=MUjv\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDQL5b6Q74tzAMenEB83M3Z24Cpox525BkuQLNeoojOYAIhAMHz8gu7ajPEGObuXmii4snpzamwA+BbHgBFNB1EnFeo"}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_3.2.1_1606233007674_0.7154765462219406"},"_hasShrinkwrap":false},"3.2.2":{"name":"@ethereum-waffle/ens","version":"3.2.2","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git@github.com:EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"^5.0.1"},"devDependencies":{"ganache-core":"^2.10.2"},"licenseText":"Copyright 2020 Ethworks sp z o.o.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"@ethereum-waffle/ens@3.2.2","dist":{"shasum":"2a1ea3270b8d64498324a80cd659db843b1ba4b3","integrity":"sha512-bvoi/52dWEpLpvOBOm4fCkGEv7T88M7QI4StFAh7tRlCbp2oIZ0VcItQrIrz7Hek5BPMS/AJF2QtYoec4CtxBg==","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-3.2.2.tgz","fileCount":33,"unpackedSize":34414,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgDFsnCRA9TVsSAnZWagAAxnIP/09iDE0SKya7ocnAaIXQ\nZnvYCeuUXuwtxcMsvKwVpvNdS4XEi+rallv/EFq4XI5PeaK+5vMFjKu/Oup0\n6lCW8rOhFqzcjkVQVMLNiu7eRJaALC4Zrb37nxPiR+DOMyaou3tyCG/JvtXy\nnFzul4XZTn4bLo+NnVWvQ0FIcwShUYTETcxOJtuJkjQBJYDDWXG20nVJX2ay\neJkOqC3g/x2XuR4+gJmH+LYS+s2XoCv1ITeqPwoGGc9DMI7Rz+ziA68vmPnQ\naRZ7nM/vwi0+SLbTIky7qy4DP005AqaEV30GnUaEhcNTniV/G+5PLhpQw1pv\nYMvJglqj7ObqZ53pUA24nlpVNGs87XvXJuwJhV9B0T9OvKLmp4gvH6PfH2Md\n8O/kkj4mQWjrc8Vtx7ZBQ5xe2682W9aiZbIq5hPmEoATvVOn4XmGRhARJQW5\nAUTzrK98cEqonYT8EOQiuAsAPQ5GkTM+xACme8TnG9suqWTTxzePsN8fles1\nOlHUsXn8pWQwhlUyvDRlKWZnNjhhCPG1ulglJhTpAv3cj/CN/fDwc+QcapCd\nQytC4IBWCrUtvJyFP5ym1BrAwuYX6sbbAtvecw596/VHsdoRVlK2oEA+2w8Q\nZIOU8elTkwDhhzEGmf/K9dH1Qa1CrrhyIpWs8DHKHMnxOpyB+fqoZio348kk\nRd6z\r\n=fiNA\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIC9VHHoSFCf6gM9xE0BnJmRByVbd1/alGJO+Ib9mmiXgAiB0egpQ3yG7E1dcA4hcoG1/dqz13bpN/E2/uqX9pnY+uw=="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_3.2.2_1611422503354_0.8818119666718551"},"_hasShrinkwrap":false},"3.2.3":{"name":"@ethereum-waffle/ens","version":"3.2.3","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"^5.0.1"},"devDependencies":{"ganache-core":"^2.10.2"},"_id":"@ethereum-waffle/ens@3.2.3","_nodeVersion":"12.20.2","_npmVersion":"6.14.11","dist":{"integrity":"sha512-OIfguJu4e+NYJHNnNVaFzvNG5WYPntWU1vnQuAFszBFytOeIkv2hAXv8RmRL+cledcvShtP3gmXU3Lvf0o4Sxw==","shasum":"970f51e16a140e4e99c7b7831713d645be63aacb","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-3.2.3.tgz","fileCount":28,"unpackedSize":34572,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgO0suCRA9TVsSAnZWagAAvBAP/2QoHguVl6b5JORlyHhP\ntonkPDe350wkEqc/6Hc2b2Ldgsi/apLEgA3ydkoHpE1ZnUaIvmTglign1FJX\nvGOQ+N7GtQZziciRTpUlynK9Y9/H5JBjchy9InBnU015UhrEFtJ9Jefa7yuO\nDI5EDT5BbyDDyt49erLHak1Xu1AyefMkeNPX5Xa5ftnlQID8GZeOy/ahuIve\n3GxsEp4lWqsYP30e4JgmvEsrZojyem9ySEoSlezf+MlctOLHC/K4E5HSKFWe\np/PnsXR1QcoUop+QQa9EpsRqhpFEbQmfumO1d/qxgB1/aaCRhWCenV/MXIug\n+2crtOIMLCviKSLCdjNsXvNLUCGfewi0YhH9HR4SbQHMOiKHvv7wOnLf7+/C\n9y1WGdJHUL630jtsa49tg0+aU6LMk+lxzMFaamEVdp41es7eopDFgE630tgp\npKDW9SfejzxNEdXPzIT/4b5LZXIJLx09cUL+dxEisUE4WzXqWqdOUg4w2Gav\nCSDYlrYSh0AKtPZT5vSeu4EUUBiwXA+SQM1VeTBy8rPSAl1WrZoFkvgpaCtN\nPYQ0enY/bGde6sOmTcOvzV1aXMXlxUO7APrORVjUdUCidn9bVPKEyCNShqDc\nmWNNPVSDsXur6rUypOyGD618/5CVFXJuybkUpluvMGhn8NbyJq3tmic7TYzT\nUx4k\r\n=Di27\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDQOOu7g2KCO2iEDyTw7BXPHa7XbCdWRKGvQKDcYBqMBAiEA/D53MrWUndAFcsmgi8gJFDtVs4H22/oyqds5V8atBis="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_3.2.3_1614498605823_0.32338623516211173"},"_hasShrinkwrap":false},"3.2.4":{"name":"@ethereum-waffle/ens","version":"3.2.4","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"^5.0.1"},"devDependencies":{"ganache-core":"^2.13.2"},"_id":"@ethereum-waffle/ens@3.2.4","_nodeVersion":"12.21.0","_npmVersion":"6.14.11","dist":{"integrity":"sha512-lkRVPCEkk7KOwH9MqFMB+gL0X8cZNsm+MnKpP9CNbAyhFos2sCDGcY8t6BA12KBK6pdMuuRXPxYL9WfPl9bqSQ==","shasum":"c486be4879ea7107e1ff01b24851a5e44f5946ce","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-3.2.4.tgz","fileCount":28,"unpackedSize":34924,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgWw6PCRA9TVsSAnZWagAAMVAP/RzbU2kOIeg4RfP2rBoy\nNOxet5pabZz11djm2TiSYhOUqEuDSk9gw7LflxHdc6wYcL2zs1MfrQvrN9ou\nXwNZxB2mBh5Vsvd/NJv8TSDc7z5L9LagAhSeQmrsVJdXY/uYH13lDtyqYlbs\n46YKCWxMtfgWo5fZbGcCO1GUY1m6nRDsziWSGnMIv85N6kYbwE2qrIv5yBER\nzuGyRHQ7HqdutJE/hKqjXHm3RpR0AW+OmrwItNKZ4hbjbXnzFoH73qDRAC52\nLQSNw1mFw4dYBojYldaHoPeQETygrsZP+syOmPNxZJCM5qWjRAxBHLYCYiWD\nZPbdvaxgKRfSKmxFlbRbGjV0tZy3KJk0VIAyXIC65QGu7c+WDVUA5U6hGxwB\nNWpwb4krgjgobsxYZDP95ZZZ8WqLoEgOoDrW4KNXLw6mb/2Q5J2NncbgRACX\nUy5y999d9JcLxaYZiQzq9SqSVelCGZmi2U0i5ObH1JQ3FssMcxkV6EWNZ6A1\nloy0qcbh2BlRkSxSnc1+DiFAG2UOuU3iBb+Y4a8pydgrlvwaDCFYcSPLf25Y\nfo3vtUW0qUEYxGbKkhUhJx801nD915ZpZrKYB0DH0cPBX1wFAkqWJHJwvfLe\nCd+F8CeI4aTDUK/l9lkVv3fVHAi9tfsfl50ti0oNiSd/9icFUaH3QyCIhx8m\nYYoA\r\n=jpRg\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCYGrVF3W/4nbBsdDkbtLrzk/Up13BSlfVGbOC9z75JmQIgZLzotL5EhPLENAnxxMxE2eko8KVOw7FSEDDRBezcV0g="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_3.2.4_1616580239336_0.4519086138054509"},"_hasShrinkwrap":false},"3.3.0":{"name":"@ethereum-waffle/ens","version":"3.3.0","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"^5.0.1"},"devDependencies":{"ganache-core":"^2.13.2"},"_id":"@ethereum-waffle/ens@3.3.0","_nodeVersion":"12.22.1","_npmVersion":"6.14.12","dist":{"integrity":"sha512-zVIH/5cQnIEgJPg1aV8+ehYicpcfuAisfrtzYh1pN3UbfeqPylFBeBaIZ7xj/xYzlJjkrek/h9VfULl6EX9Aqw==","shasum":"d54f4c8e6b7bcafdc13ab294433f45416b2b2791","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-3.3.0.tgz","fileCount":28,"unpackedSize":35095,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgy0ZHCRA9TVsSAnZWagAA2tcP/A3YbGoWvPhM2z0U59dD\ngeVWDTuwqjuuOlH7WznvNTGaRXptQ6d3dEbHbDAYxnUgTSGya9m8SepCE8/0\neCvsjtVy0juFi4TvbU6dWft++zr829SULVzXfVzEGlFEteIRlimDG7EBDcFe\nOa9f8qpgX6S0seKb8j32hQphiwaaZE83u25z2SEHkqTaw+bE7Zzn+ytC1gM6\nQBvHC5NFlT4TyNSDga0GhjDEaIP053IlCXs/Z0C6ZZxGWfpstjtR5X8Xobcy\nH2EOHgImmC2g+bwgJsy7a9qF5AK1Mvh9NUBcYCi7gzQ6iqMzMRhEcGqgxRM0\nusDSTSGtcngvJZt0NrpRd99oIU7xvgrJot212sUfeBpZ/1JVlr3oXG1R2gq+\nfJZerphhXNTwieOQsvKPkuGw42Jwcg2CsWDjkHi3PWoy+7ekqYHRm97h4EJJ\nIljd8QYzIIYopqdRsR6RX6yydiqPIsLCKkXybtqnP5dOaaK/KDhXs4hrH6vY\n+2rbjB6QwurmLnmxEfz/dTnY/tJ8wgM0G2CP3GRKoblA2ylHBwOeTrm7sH6x\nhybDnoezVpq51cuaLy4gbIl0xz1r1Dulfno2mjnG2mc0uyEOCpNlpM8Vt9ny\ns9GVPR3QaXMlEQwcQDn0+euLaf7vn/7JuG+PUM2xb4sHur0FPhiDkLzugvZM\nEjbE\r\n=IN/f\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCMFfTPGlFsXnVgRf0r1eWhSRf3wrt9JQwxuE8uLjabjgIhAKOj0UWOr+yF9/Yv+xuZ2wvTeFioa/ZAybdm4ZttoX++"}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_3.3.0_1623934534798_0.014230368255823134"},"_hasShrinkwrap":false},"3.3.1":{"name":"@ethereum-waffle/ens","version":"3.3.1","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"^5.5.2"},"devDependencies":{"ganache-core":"^2.13.2"},"_id":"@ethereum-waffle/ens@3.3.1","_nodeVersion":"12.22.8","_npmVersion":"6.14.15","dist":{"integrity":"sha512-xSjNWnT2Iwii3J3XGqD+F5yLEOzQzLHNLGfI5KIXdtQ4FHgReW/AMGRgPPLi+n+SP08oEQWJ3sEKrvbFlwJuaA==","shasum":"0f1b7ac4fc156641c18accd60f8ce256e2c475cf","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-3.3.1.tgz","fileCount":28,"unpackedSize":35180,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhxjAUCRA9TVsSAnZWagAAbLEP+wRXiU5pCY9mjMuLi3p+\nwcAIMmDSKNZ/kUGkzh3FgTk2FPiXGBr5oAF0orxChbQL4Obim6SzVjR6oIal\nHATmbeCjYXlcr7Tg08Ia5GXs07UeI5NKTSdBGuF85FewgfQJDbJy0cpJau8U\nl+Zu5kQQL9+3UxAJ2gpukYnulDTnUcHRwJTGfhuVZy3q1vGxCthgGzWRv/SI\n+qo48scC2KHhODPtH7syOJ5pz28uyky1i0UUfC70mkH8xAkc/qSGNi9MQjdI\nrHZ/lf6yiYPpFkQJPNOexbr5eLQePWEtQZjTUu7mjndqpN4uT3duvZjqgxXY\n/fnX/5Sn1xAGW5fiNA+cOa5+hsU7UQdANQazn7se+wWy6J/XnanfFs786NVq\nkDzXBB4mhJwsxCYirFxOK6g5xu6t8tNof9BpFd8llaVxGXWwzZAPgGHgBaD5\nbdSfxSY3wh/WI4SQdwm/yh3EYjmq4zyORXBluNZsS7zRQYT6qCk8PGMMHnlf\nNDR5vcdUpzuonXIMfV/uYKkIWew+tf6m3YHi0LrJDVwqh6ouzVLiqyxnH9VD\n43Bx/3LhidS6VPltrJfbT4o2dZBfHRw0tO6FWMzbKMhrzHHXM6qMuQoP/HbD\nN6iSCYxVA2IWtvvVO6lF4p/XasxWKZslN0cjZoNtlLp9/Cb98fFFq4I+kJ6s\nquQq\r\n=X/kh\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC0rHZ9vuyIxL9L4hluvBMYeWftlX5/1xuJaCAm8PIewwIhAJQIVWkoCqkYqU1RVY/QE0JjlbhQCP3V3Mb9hFrqIHH8"}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_3.3.1_1640378388156_0.09134449170993508"},"_hasShrinkwrap":false},"4.0.0-alpha.0":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.0","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"^5.5.4"},"devDependencies":{"ganache-core":"^2.13.2"},"_id":"@ethereum-waffle/ens@4.0.0-alpha.0","_nodeVersion":"12.22.10","_npmVersion":"6.14.16","dist":{"integrity":"sha512-F0D3Zx67QCcRLMoaeUiWNSjv4X11VMYxEtXcxKmCl5+QBhhMru11C4NyNwHuHzi6m06ubINyheEH/lM/DW2Rhg==","shasum":"26eea3bf65dde9404f29f7b50d27c73f06ce2a75","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.0.tgz","fileCount":28,"unpackedSize":35302,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiKgM1ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpbIw//ejLWtQCn9ZCIAOXtbVA+fa0eKhkVl+inTvS2kp+dDq57EduB\r\nWMt6mEU1aIw6K3rFKT7yT7PubEXMJCRrWYUte0Ll5BXlVN0yJnhe4+rgGko8\r\nIInMmVo8j5Xo5t8+/du24c0m7SbiN0gS6wgzk+pLKvZteHVypPwXj92S6peY\r\nsm6Bb9LpMrgdmVLJV18zu3z55lh0SZxiS7aPogq9uddcohz/+cAu97oY4N50\r\n9dkWYegBXgLX/QbbDBXSTwK/RZwjxB0JoN/QQRbYMt/Krhrjv4ySNCyWIJLZ\r\nIJexxkma3Ope8mj6IYVM/FsUqA9ESchmoVYdVUipCbFk9YbzokTEE8aDlCAt\r\n1qqp/U81l66BV81mqqfVPlwAgsycZFUNTyddwtqrg8Kv0mVd3nZBAwhDyRYD\r\nFyB7fEJZoDxRGdKnQazkXuGKhd8//nE0MH1o1VS1T/eYer45LlatEhpMA5Y6\r\nvXzIOawZtA7nzI4K8j5X8sv1K72ZhaS+XpVZGzyRmssH6/zyaIvj6sGG+F2J\r\nwbXLAWRURSU2hMmndprDj1yqGKdJB7S+jAoVrr8Mp1FPu4doCPOBLcy2uRGf\r\nH12m5ZCK8R54nW8Iq/AuRRIOSJDbxXQqLafNQuKn/cd8UhxifBr5fFvDtkwC\r\nSRX627Dg3EaloEngldjt4BpEBECamDFTAp8=\r\n=+8Gz\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC4VidqaFzn6ynGnPpCD2X64LihuEi8KOrct/3Uy7UoTQIgEXXuBYkBNBu3w625eo9MATpVLIfJKt813VdaL+idm7k="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.0_1646920500893_0.527442889710058"},"_hasShrinkwrap":false},"4.0.0-alpha.1":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.1","description":"A mock ens implementation for testing.","repository":"git@github.com:EthWorks/Waffle.git","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","private":false,"license":"MIT","publishConfig":{"access":"public"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"^5.5.4"},"devDependencies":{"ganache-core":"^2.13.2"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"_id":"@ethereum-waffle/ens@4.0.0-alpha.1","_integrity":"sha512-HXUF2C8lYRiusz7JwVV+nMmKGpxLKzGqL56HeQ5oH3kPrv2I4+xaqhTTVKpJfjqm8y9YPD7eubzhFpHOaZEkDQ==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-alpha.1.tgz","_from":"file:ethereum-waffle-ens-4.0.0-alpha.1.tgz","_nodeVersion":"16.14.0","_npmVersion":"8.3.1","dist":{"integrity":"sha512-HXUF2C8lYRiusz7JwVV+nMmKGpxLKzGqL56HeQ5oH3kPrv2I4+xaqhTTVKpJfjqm8y9YPD7eubzhFpHOaZEkDQ==","shasum":"81920d94aad02a4d50d970ec44561c3e3216c43e","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.1.tgz","fileCount":28,"unpackedSize":35547,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiOvUEACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqeKw//QN3G75AhiWi3OXtqzFs1KV+rlojk3pkKyX2uv81/OezYCkb5\r\nTF/WTYWYAfZVZIUKVx6TeC+2ZvAjPSZJZVasnWgeA7F+g5N80fzWSaLvt7fM\r\n402dZHezYun2tIdR+hBRynNSai8csZBuxrtlJDPhVItNBBo9YPEsnm7WyHDN\r\nkQ8IluBl1s1/Z7AozG6+JIuwubdgnMwrpwD8tTNeAC7c1fbx4Rg1R522ADKe\r\nrBeylo424NFOGy7lD+ZW0YLrWh1AJNqD4w8vRI5gz1zVCHnpAmor2+KOnpxE\r\n97evuZ783hoBS6E9qFjUOm7ObQipqaHsl/VEg1erJWVrzRJrUVYgh54ZJEKd\r\nC1+/q6kNfqdJZm4AtgvH1jNQVummyo+IklmlIxKhuBo5k+pufxpqXyvIWysN\r\n5x3cu6wE39buTtBT31CBpHfyMc3dGNbBn82m8d0elcBNdL/SCqn3a66tUFbH\r\npcMCPCi65BwDl8XB6CfuyjPGvVTUWGUZxN30JVs7Lc+F+1tjKQTIiWX/qkMP\r\nF36Q4NCU5In27ofdPtPuqmejfFzecoiKH28NZYW5hvyCLeObIQ+8usojVU4A\r\nSkdZhjersBiKAWF1N5AbiswQ3zOkvXe10KuSHmD/cFb6djvAVL0WgkTwU143\r\nMn3GbXEFd5EuDZwBcvYFbJ2INWrx3skt0Bk=\r\n=ZVeh\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCEqM0SpS7+vlDs3z2oPY+E9m8QmsibyEAJW929s/pnqQIhAOg+hGGmS85nDPiTvPBlt4ppozT7YsWzTUdS8cGddpty"}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.1_1648030979898_0.04068011460290122"},"_hasShrinkwrap":false},"3.4.4":{"name":"@ethereum-waffle/ens","version":"3.4.4","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"prepublishOnly":"yarn build","test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"^5.5.2"},"devDependencies":{"ganache-core":"^2.13.2"},"_id":"@ethereum-waffle/ens@3.4.4","_nodeVersion":"12.22.10","_npmVersion":"6.14.16","dist":{"integrity":"sha512-0m4NdwWxliy3heBYva1Wr4WbJKLnwXizmy5FfSSr5PMbjI7SIGCdCB59U7/ZzY773/hY3bLnzLwvG5mggVjJWg==","shasum":"db97ea2c9decbb70b9205d53de2ccbd6f3182ba1","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-3.4.4.tgz","fileCount":28,"unpackedSize":35180,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiOxN4ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrgXA//YCZjs9dkOHEHirER2m5vHxDy7hb7nLK3xcGCPZ0bp2p80Lxx\r\nm3LlBKBWqfjg5Dy+ce8aSW1LpVeaOvP0+ArQzwIY6o9/7R3gL4dDa7AvST+z\r\nzcHUl7jTeMVKDL05qQ4+gOZ/n+kq75WY4SODdjxl6/9C4SawUDk864s9eCcq\r\nuz1RAT31na+Uy70yr4PnSB09mxWtJKMRrz2U5TG+zbXSJpfvGFUVp+RhovhW\r\n6yMzffyMmIV9Y4W4Jp6QZSqL2gQAM2vM36+iD0MblKAUVIQ2uX6HbVjD8yop\r\nbNbB8o2YXS+EanHwBmOkqzsDMuzFPm7gF4XPKRV9miUuotrQcpe5Y+/tQ0V6\r\n1hgiPGf7eFY8q4BxiBOUPNLWYfHDspMze6iLexV2btKJgIGmWtdUmi75Sm+F\r\nSAmj2ow4LvRjpbscqyzuLP/AMIPtKZZUvY43/1gVCWUEWLRxAU5Uv/HhhFwS\r\nKjIBUpN4QegQZ32S1D2ubjT283nosILeZLBdJuxn6m6vFVGD836gfhxx01C6\r\n45KEAa0TtPLU9Nvpep1v7iXaTAFWTeJYXzbWBw2vv+MdzFXpg3at1UQ6Qtpf\r\nHBYl/dvAlQD71DpAKK2C3ETmG6v1EknONwOBbQ+GCrrzYooDeukc4rCi9ELo\r\nnGjYQbWYru/MDbIQCH2PM1Y9BL82SKHaBi0=\r\n=Znbm\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCQR7wL4awRwJO+rCAdK1lD4WwGt4TqfqIFR4YBqmHXXAIhAN8qDSsb/6lmXWB8Cvn8t9gs/CYrUbJ7mPanF2xI/y/2"}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_3.4.4_1648038776461_0.8173118996417963"},"_hasShrinkwrap":false},"4.0.0-alpha.2":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.2","description":"A mock ens implementation for testing.","repository":"git@github.com:EthWorks/Waffle.git","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"^5.6.1"},"devDependencies":{"ganache":"^7.0.3"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"_id":"@ethereum-waffle/ens@4.0.0-alpha.2","_integrity":"sha512-RRMGnFWvVhpdlDcpAxycFdqOnI7b3eK1hP65QHr3759MJsTS03h/ZwgZn/WZ/wLFZEx9qIM+0hzPmXNzb6Ox3g==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-alpha.2.tgz","_from":"file:ethereum-waffle-ens-4.0.0-alpha.2.tgz","_nodeVersion":"16.14.0","_npmVersion":"8.3.1","dist":{"integrity":"sha512-RRMGnFWvVhpdlDcpAxycFdqOnI7b3eK1hP65QHr3759MJsTS03h/ZwgZn/WZ/wLFZEx9qIM+0hzPmXNzb6Ox3g==","shasum":"0bec54a911bfcfd09503b1eddebc9305d72fc5c3","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.2.tgz","fileCount":28,"unpackedSize":35628,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiPIkxACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmrb4w/9F8FGBDcqhVnacJ7tNY96KAclIZw5ekoVX0+3XGywM0FylxbE\r\nVxOjQTiFD1JHSYw4qqr3lvoYnHDDlKo0tG57Wp2iSpssKGOomSW5LJnAAv6f\r\nV2Cu0o7z2zY6X49vQbJlAh9HWSQiQ+xPKx0T/EHWTFJQLsgNBYZN0D/psuom\r\n/P4SkaQI87GJlU5iE/UzDW6pgHdFNpkgZnBOic1xKimjoNiPAtLI0Ob0ABvA\r\n/wu9isPIxHvr1XDpgBcF6YihJPGGy4Ev2UZPodktVyczCQmjx0jakEOHq/u3\r\n8LdTfGLHroIXBzUFfIAQ86KUaF5mE6Vr2xlQh54u9BsR1qbGy6o4WVOIhrwV\r\nVn/Vr20RgWr+ZQvvfiGJwUfg7wXMsMciQDjqESIPLmlpX8mz1iDQPy77Duh7\r\ni1pv7ewVmRcncSWYDiLL0Vr7cImjhYR91wM50B4rlHtkZAFYoRCyZEvlZmkC\r\nVfBfpWunxdWBtdwsnr5ZSOTw1T6adEEJ7N3w8fO+maTH5xwXOEK8T8rT+mmj\r\ntZkAVdLqTw+3Rso/nmBt/lUG/iPtK669T2hTyIYZjLm+HUx3xMMkP7xZ3pX9\r\nYRgkyfSPXfSbY5OIh4yWx1ujG1P/TMjV81/jLjVK5MEzx5WMbGpraqHQF2lP\r\nEkAfDNhx5WiqH1UGjlptRFdkCcvRHz03I+g=\r\n=pZ21\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDG7wvvaMhSS1v0xHY5ec/Sp+tcJP0IsiBbAu4gWuWsygIhAJdWxkp9qbpA8hSu8dENqc5aTUGo8yHi6yK7clfaoCHu"}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.2_1648134449410_0.12586207961181972"},"_hasShrinkwrap":false},"4.0.0-alpha.3":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.3","description":"A mock ens implementation for testing.","repository":"git@github.com:EthWorks/Waffle.git","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"^5.6.1"},"devDependencies":{"ganache":"^7.0.3"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"_id":"@ethereum-waffle/ens@4.0.0-alpha.3","_integrity":"sha512-x7dxSthsAoTd1UAhHdFL8R+lWP66qt/HgnaY5L54NH3CTufnCREzPCnKRpER9XCc8OAPzS9Jf6+T2VUGLxO8NQ==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-alpha.3.tgz","_from":"file:ethereum-waffle-ens-4.0.0-alpha.3.tgz","_nodeVersion":"16.14.0","_npmVersion":"8.3.1","dist":{"integrity":"sha512-x7dxSthsAoTd1UAhHdFL8R+lWP66qt/HgnaY5L54NH3CTufnCREzPCnKRpER9XCc8OAPzS9Jf6+T2VUGLxO8NQ==","shasum":"3a834676dbf47a7b3d15c5be7df31a2db9f547be","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.3.tgz","fileCount":28,"unpackedSize":35628,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiPaXCACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpxQRAAjJQzP7+P0OZmI8eSct/JuZyPdc02gu9Cz9Xtr8r2UwraVIuV\r\nP1WhujZ6XOZwdFUJQFqLXHfB1TY2z90qzgGSy6XrcgWHavUCx4tKlKP8NrjR\r\nlunLI57kV5ZSamywjpxoIEpOFsYSW6DZXU74f6VojAJxE5+6acqKYkn8GTmy\r\nGXTyVxCpzumJfZl+9xRDzWS8HcIQroyoCzVDJ4M2BWt6Yb4DO7yg3dh8gAhr\r\n1YEuA/5Q0E3ThjhDrPT0ZH+dB7dOXR2OwCk28FkqbPnIY2a532+sBG2tZErf\r\nX0s4f30IAHMTVmvST60j7TDPR4WDDk1ASDvXqRlTjwn7EBi2mqqp01QmqRqn\r\nHiHGCDSSJZ5ar6h2y7GuLrlggUvTsX3yYIAgEaeznpAgztFrdrSe0jBRnD9g\r\nnJ2LemHM6MkEdn97MD5cN7bKlcvh7opJXazWbx4Gdt/f9HLBnCCpLner23QU\r\nodzPmgOFM6S/zokWFm+e2Q+TTu5OYe6hl3AJFk4o01MEPPqRv2EVVooIf4fk\r\nF11AyI53OXvDckTk19C1SQlNZryDZZveXjiZeVc+uFppiP5zG22L5nKWx/bE\r\nPYjmxzEsNhgrgQgEtCdirqE9ko85jBGpg97H4gitxYTDrY39FlGyd02khT6C\r\nR8vuxmmmc+2I1rR2pTkUMeBvl0sypTbTtl0=\r\n=ydzv\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD+rOKJKrK42RmUpVqNcFf9916DVEJZ9it2oXmXNCNKwAIhAM/zanpaWucuZpAk5SmiWQUtCmNiBSYAAJzoe7ie3dGR"}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.3_1648207298016_0.04709976797390558"},"_hasShrinkwrap":false},"4.0.0-alpha.4":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.4","description":"A mock ens implementation for testing.","repository":"git@github.com:EthWorks/Waffle.git","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"^5.6.1"},"devDependencies":{"ganache":"^7.0.3"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"_id":"@ethereum-waffle/ens@4.0.0-alpha.4","_integrity":"sha512-Q3I2+JWqg51xcy2Tf3o7qdLad1KJWR1lgTG0RyrHeeam0M9nVWr3X6h14gUvrQNyp5HHBlTsqlG5NoEeTUz5PQ==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-alpha.4.tgz","_from":"file:ethereum-waffle-ens-4.0.0-alpha.4.tgz","_nodeVersion":"16.14.0","_npmVersion":"8.3.1","dist":{"integrity":"sha512-Q3I2+JWqg51xcy2Tf3o7qdLad1KJWR1lgTG0RyrHeeam0M9nVWr3X6h14gUvrQNyp5HHBlTsqlG5NoEeTUz5PQ==","shasum":"318bdee6bd71bef174b51ae147dc5771fd1ced6e","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.4.tgz","fileCount":28,"unpackedSize":35628,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiPcs1ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqkMw/+MmMNWoXKcCQBm72oKB+Q6OSNU1koVV5u2IHU1b348JQRSfS1\r\neURIMNn7EqnpeQIjXj9iUYKvYhUgalVvBcv3Gn+Ajz6fiSfrgozU4O2D6Noc\r\nTZF0j0MwmkQaDvnCHnOXQXDJ0UbhHUVnNrl9X17c0iBYQaz4O+TluKqPTAm+\r\nvns4PWg0jIcj419fG04oCarH50vftSa2XJgzMQzKMWZZcEp231btTBUvcZSP\r\nBonbToPCq4sSoLCsqaUF+IWn2zKwuBAjr7JzLz+cH5+HzzEmEfVdCNN4wvUD\r\nWka8gTUhj1cVMhLCq9dvDATjyvQ5qC/XzZ08ntIiBPl277ORXVZx/VeD1Jxn\r\nwOchnLo1FguPUwvJZ96BLBu/9JQYTd3ScR5v/r8YZYEprAh727U2vrXwPs8C\r\nGgnFZrEgRMtpEh/UseD4jDUR0iCKk2Y5YnSTs5jPYgqIWmCaXiyBgs0Jp7aa\r\nB0QcgfzJdssYTOs7olKeRk+CCeclxM4tbQh0ABL9X4bmZ7plyn4ukdaRW+ZX\r\nhWMQpxIH3bBoQuM2I3KEf358QRZrySPpp6LArniLx/dL9LWut6njkCyJV+IN\r\n60WXSGVXUnILpMtjdqFPPaDAPlWtJMrTAgfsaeyXQH8jUO1OavZEC3oSxZVD\r\nY7XJD0JkVEOJ24aK1x8N/vi/DN9oKG1cV6Y=\r\n=2mWw\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDLoTx1phWxeld5juIuzN4EH8ShpD81nbWwt0DW0TMzugIgRV1+YUkRsFm4BLyDuqF8u1H9ib1/ViNCT5euAEDPGpk="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.4_1648216885761_0.015983507978947875"},"_hasShrinkwrap":false},"4.0.0-alpha.5":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.5","description":"A mock ens implementation for testing.","repository":"git@github.com:EthWorks/Waffle.git","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"^5.6.1"},"devDependencies":{"ganache":"^7.0.3"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"_id":"@ethereum-waffle/ens@4.0.0-alpha.5","_integrity":"sha512-grkWpuUYJqJDz90NwZs8SBtgfhmEQ0X13jV3R5CmbzRqC29OiQ8TjT8yFhpvZkV2X8+t6QblBaU5cZzdzw/1AQ==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-alpha.5.tgz","_from":"file:ethereum-waffle-ens-4.0.0-alpha.5.tgz","_nodeVersion":"16.14.0","_npmVersion":"8.3.1","dist":{"integrity":"sha512-grkWpuUYJqJDz90NwZs8SBtgfhmEQ0X13jV3R5CmbzRqC29OiQ8TjT8yFhpvZkV2X8+t6QblBaU5cZzdzw/1AQ==","shasum":"4d7040c363a313f6ac270845227eb2ab3960d7c3","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.5.tgz","fileCount":28,"unpackedSize":35628,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiPeTgACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqNuA//QQlXHR4svx8hcQ+XkzypNoL2j5/Tk4P2PN4Gi9gC6MY9pcn/\r\nJieh9EhFpsQHLvE+34C4J5DGu/ZQlNtmfxIwEzPtF7IS4SD5+oemz9XN/sgG\r\npf0SBR/EsKkDQ0M+W0IzFAJsDIh8ECrIZ5KBQTb+/u5/z0eT6AMCQenHIjm3\r\nLkvd83L2BcPYOukOeBq4mTResfW80rjRX1HX7An3WfDaJd71RryZe3lZQLsE\r\n2YSyvrhiErTnzBNynU/9AulOJJRwpYk9gS1RVTurH7SPZfCOccv2vcHYu0TG\r\n/iLVfKM70BLcELmrO28rpSMP9nEdUqCslam5ql/YoAcjCTliqPM6Nu0mzZyX\r\nUvmhpypkl/l/heOi8oNltsYqa29Usnntwwu0SwgOxhoVgzrJ4wt8hEQLgTRZ\r\n0YltUfNzE2j2GjCQX0r+F9XoxwYQhFyw7bXhe8QIk9hmHOkzelR8wkNR2Ork\r\nhllC9B+Q948pkfrgMB/MJQ0tlT0OznBKID9jMiu03XGlR4PXIA176goOykdV\r\nfRDssLB/t01Z0pkjGkfe7OYHH+PRVFelnAO9uhiAIDlBTpbjU1Y1h/IDXgtH\r\naUc9xsBUbtv2YNVt82iQiMMuN8PzWQq1G35SDlbPaIBvVhuPk+h9jSj9GeR4\r\nB5f9XKYkkzCrmFLDB6Nhc8Q7gm7Zdc2z+NE=\r\n=bSXp\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBroMApBbNRZk+W0EBp/kiGpYx03aNluM/8G901L7EUYAiEA1xpS56XbKamseGKIXDBO7vlsdRCuCV3OhrBcn4DMU44="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.5_1648223456520_0.152468941036902"},"_hasShrinkwrap":false},"4.0.0-alpha.6":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.6","description":"A mock ens implementation for testing.","repository":"git@github.com:EthWorks/Waffle.git","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"^5.6.1"},"devDependencies":{"ganache":"^7.0.3"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"_id":"@ethereum-waffle/ens@4.0.0-alpha.6","_integrity":"sha512-7hJgFkgOe9jMKnUlVhxt2jujDs/mDy34m2UkLYPv6+hG9dxyO/zGbQ1lSar0gBe5lJxi6wdPHryZxO5NYAo5HA==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-alpha.6.tgz","_from":"file:ethereum-waffle-ens-4.0.0-alpha.6.tgz","_nodeVersion":"16.14.0","_npmVersion":"8.3.1","dist":{"integrity":"sha512-7hJgFkgOe9jMKnUlVhxt2jujDs/mDy34m2UkLYPv6+hG9dxyO/zGbQ1lSar0gBe5lJxi6wdPHryZxO5NYAo5HA==","shasum":"d0c13bd3e693484ffc5a4ff50de3490b0e571e39","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.6.tgz","fileCount":28,"unpackedSize":35583,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiQcoHACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrRWw/+Kwx3MC+PAhidZh0j5xWC0e9FCIfW2SDJX8j0BWM85Spe0Onl\r\nFkw09Ay412o85bSEmsafoEkIk16igD9HZA2rUQaUqj3FEG5M7a1Tl6fIncmg\r\n307XO8XwwIp9ZAo7x2BkSUwyPGYwLyB4XCL8zMDau57GGhTnJswx9fXaTXy9\r\neXcPhHWSqVneBDXoVs8Qi8q58MIFLlTpQxvkCbUZGYV4Snc23yPIAhxnG9Vm\r\nyXDSo2+LCw5nwET8Sj38rwyzWT//tRLkhV+h2PDNO8o5P+sD5zCOekfitOox\r\nBWwwYNx28LdnWmvbKED4h1hErHy2lbPhtehZHBrMPB/dqGP7kBjbnEQJZGmb\r\nmoskiBupQdP+qdWerQBhRCHEh37FL8F+i0WArotV8muz1lO6XFNayRWh9zQh\r\nJssp45W7A7ftcECXPOc2kAvdpZnLPEzhzjNy5Mi9N2DeD+nducK68TP5/LBM\r\nwHc0j7RF9cUpAKNlYFXic/4q4wKmzlxAV0CnGejAYdT/UYX+U/PQ691Cflst\r\n1cQCnOPLX1XStG4IJh/XcVmr+2P2lMaWmI4UjwWJ4tWUzVWKxVlnzczoY8h5\r\nfbZEe94/lylrF3smLAZ8v921tMvx4i7C8TukmNe8qrrXZ1tDbXGr/S6jQDU/\r\n9bCK2o1+Ha9Nr203XalZnkau/mYAf4UJwao=\r\n=+Wok\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIH1aowEVwcqWqnn/Fndf9cHxDRxcuqh8yhJiZYhlLSN9AiEApQSOH8qNnewRV2CVajLgMclVKPNlTrtlWBx722HxfXI="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.6_1648478726815_0.6056618675587782"},"_hasShrinkwrap":false},"4.0.0-alpha.7":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.7","description":"A mock ens implementation for testing.","repository":"git@github.com:EthWorks/Waffle.git","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.1"},"devDependencies":{"ganache":"^7.0.3"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"_id":"@ethereum-waffle/ens@4.0.0-alpha.7","_integrity":"sha512-UzXJSSAQd3BiSoXLKqwFKdPUiSZpcbr8OE4SBr3rzW4PQjQ2g3rJqNy/tE1tZMkOLSs8jPwc7Vel+3H1HXYCEQ==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-alpha.7.tgz","_from":"file:ethereum-waffle-ens-4.0.0-alpha.7.tgz","_nodeVersion":"16.14.0","_npmVersion":"8.3.1","dist":{"integrity":"sha512-UzXJSSAQd3BiSoXLKqwFKdPUiSZpcbr8OE4SBr3rzW4PQjQ2g3rJqNy/tE1tZMkOLSs8jPwc7Vel+3H1HXYCEQ==","shasum":"1c18a5a9c96391ec4cc647d6f3a23b553411fb06","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.7.tgz","fileCount":28,"unpackedSize":35582,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiQd3qACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoDog//SOBeHDwHRjCc5q7wOga91ryOqtaRenXsGKMB6cefWn997KCx\r\n83GO4PNX84+22NniVTN90TegchgieK4DmWpT2CrutRgFWz6kCsdMcXU6USKl\r\ncclefAXpOruMWO86tJw68vJX3bn2uPwZhUapvnfpc4K27fh7uyjm2QPRLk8s\r\nTSp6TE7epqV1sxDxd8J213aRBjKaDqOqhdkUmcNaVU9l+Eas6b2xSkkjzxf/\r\nsKqOeBM/31kXexuKGkC+eb27LZHl7CAbYeaBVz4HqtCEQcCU0qznnwikjIZ3\r\nPqi0HRVB3WyF5GNiUVjmJxb/7x8I1cwkdUugtAauFUQg+zAr/rvTpuQUOzZH\r\neo78IxeB27TXpE/N2TtbqPcedtqQPW8kimDr8wjuukt2UP1HMYVdqobj6TeI\r\nmoX/EHH+EYqnZp2uBN/NIbB7pIABU4ZVZ0qmv9q35kZ1auYCCUOqqg4Ku17y\r\nAKNCySqqpMkfGiW7JykYxyoLaNT0iK1pwyqRrMjw07fRaE/RVuGd1F8Z50f9\r\ndt3zX3DQQksgU+d7qSvOon67Q8Seb2rP6eqabSJeb6UYJRshObra6FpAMk+e\r\n0ZJMrF495hEvCOpB/5G3WBCE9SKq4EjD/6x/HSALDSrbsCRJ/GkWj9jmC0b9\r\n7eE2w1ZeF8uNRmkx8iBWPt+PLbdkmnu5SuE=\r\n=QJjz\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD3+3qBOSJW3cWCllNkUf9g9ytZXQuHNKorA4fZR5McBwIhAOWTFRSqjW3HGc34LcZJ98ILDS0JVnrU3SBzdpxyxYN/"}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.7_1648483818590_0.8297587517093716"},"_hasShrinkwrap":false},"4.0.0-alpha.8":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.8","description":"A mock ens implementation for testing.","repository":"git@github.com:EthWorks/Waffle.git","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.1"},"devDependencies":{"ganache":"^7.0.3"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"_id":"@ethereum-waffle/ens@4.0.0-alpha.8","_integrity":"sha512-kdeB5P8445rMfjOzQyPx55hEaaUtGivXjsEErhsG76rE/cBQmusfYYOssdk8/MLwTOBWnjMlPP8nAlyF1O6RYg==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-alpha.8.tgz","_from":"file:ethereum-waffle-ens-4.0.0-alpha.8.tgz","_nodeVersion":"16.14.0","_npmVersion":"8.3.1","dist":{"integrity":"sha512-kdeB5P8445rMfjOzQyPx55hEaaUtGivXjsEErhsG76rE/cBQmusfYYOssdk8/MLwTOBWnjMlPP8nAlyF1O6RYg==","shasum":"2b35123b09e128f49118ab59db82311455fd5b14","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.8.tgz","fileCount":28,"unpackedSize":35582,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiQxbSACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrZwg//fBMoQraGhd+GmLUrNR9B+77SxaM0uMBpHQ6MGTW8iFbpKwDO\r\nrbXjJ2RJplxroKwNWl64EOtsJXnoD12+A7RN61dy5CTzC+m35x5+3aWqEEOb\r\nSExLRh5vSLVijJgci3iLM3ZhDttcHrQLlH7MQJ+N1Uxp2h8wmfXJ0gJWBIAK\r\nmdHEf/M/8RCr3CK5gr42GqrGh7Ebg5ed0A4gC0gDSH+PQJ2p+qaaegcA4gSU\r\nhv7Ei2GqcEYl0EjLQfn4QDHAD2WGTxC2kmvHIVTaT7NCaKr2EK3YsZvPg2rP\r\nqQahF8cIrjhm5OvcWIP1kc42LIoNhdj5JyWQhXdoFl9G05wxkhW27VrNIlZN\r\nurrfDa2YdlPPW/qUOYLGCfxTghwfJEQU4URUipdkrwSHsc/KpYf3RCk6aodZ\r\nKyWbanuP/tRph4L7PTuTagp5+cC93k0VtKof+aO1TlwKraWTI9ODO1kyaFgp\r\neORilUI1Pqp40+EAPjaP7aQ6EbgE+pjONy7RgjHXvGhreZGDrnLY6ylXnDm+\r\natqsP6qMVMW5s25bdRVQbLv/9rsxH7KEIFgcj3FxNVT5gpIimLmkq16xTOH4\r\nqWWMha5STru6jNCzMkT+5MBVRIIU27T45ftLvZkbZ9D7ODm0W8AtD2+Yhkxm\r\n373R23rS5Hsm2rIucvL2d1EobMu3lb9qanQ=\r\n=QqQ2\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDgr/k6tELANHaH+YAUNz0IlgNeKk94Yt/5Fc/Rc/UqQAiEAsJNf1eS2RM5oWlidD5mHdbejRTliXEnZOckArugwvh0="}]},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.8_1648563922385_0.7941368112866785"},"_hasShrinkwrap":false},"4.0.0-alpha.9":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.9","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.1"},"devDependencies":{"ganache":"^7.0.3"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","gitHead":"e7299db6b37b027b6aeafdacb75f45c632898674","_id":"@ethereum-waffle/ens@4.0.0-alpha.9","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-CO+O4UG7zN2peRsEXYSnJo0/LYYAJNzy2UHQIP64b9Rj9en4t1dtRut7By44AQplUW76Lz2zv8tjwu1gn82D8g==","shasum":"d346c7049b46788974a269b76891c2161bae49ed","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.9.tgz","fileCount":29,"unpackedSize":43288,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGJ5EbNCnlDrNExuRwn3gc7y36mMJk3Y5JiQbI2B96ckAiB+R/d37pyOImTTK/iPbVcQVz3169pI0bt4PcVx0Mc1Yw=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiTGAWACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoeKA/+Nx57owTw1lk3//B11/SA8krSohq+Bv7s5q05TSrbqANf290w\r\noztDYi6x+/LeXW1vVesAzAYANCDxOfJEbPjHyQk39r6pqV9eUHuRLAMSlLDT\r\ngaUTCivHYizxRhc66XcDlEyI+0Qx+B39/kMo9w+OWn8pXakWcxk1gBIoLOhZ\r\nrjlR3wAKAc8unrBdFVwnumAZCcWKnAgAsH+4KyHH5Vd5lFUUOEdjaSxhi2Yf\r\nkwE+L53jSe8jJFAGgEJDsxpnrEnitrI4tvIc9nxai2KFp5qiN+3k+0PeazH3\r\nfqxDImLMQU21aE6ojHYdZhfda9EBP/uHTQL/NV59Nvs7C2aRwf64N+rYUdtD\r\nlxNOWkkOCtLAK86ghmLa0rIh3tWvPOPcnac0vSJ6Pp/kK0gBC6ZP9xqgbLX+\r\no1y1SlT5CmgxEZX5Kno0QcnzCoTGlEhguMoLpYU0FbD9xDztYKn8oV/QTs0G\r\nd7F/YbJBWk5ESpHBFvHnb8uWQGiqnclOtKBght75qgQuROTTX12OsdPrgqn1\r\nXbOZDMIV5amm/qbgj6PXbxwoSOdz6gq/noXHgTyFPKSENvMu1a3cKuuc0yMz\r\nJSLYkHS9j1107/uIoaxrzQw/a9VLWjl2jvq6Y9XcCYaWyZkkJsg9IqZ19R5X\r\nFhDxPvHyxt7+J8SNVKX1tzocPaJiRUYlGwc=\r\n=q43D\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.9_1649172502765_0.7116527684558211"},"_hasShrinkwrap":false},"4.0.0-alpha.10":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.10","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.1"},"devDependencies":{"ganache":"^7.0.3"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","gitHead":"528e32b3e375eb66b2f111ad8c2d5da95d51c15b","_id":"@ethereum-waffle/ens@4.0.0-alpha.10","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-UqCgmhX6+Ci6bb5OgUMFAmKP9teCWDD5iyWRhhaxlo+VP7aFp9vmHACvr6GTB0blogaiemjH3fFMFqUkguIi8A==","shasum":"038d4e107a215e345c59947819dc01fc3fee70f8","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.10.tgz","fileCount":29,"unpackedSize":43290,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDPMY0OZMKRvwq6ocXwHjti/huGddzbOt0iXZhKVL9WFAIgQ5knVl4rk234VPhWc7BPnpyq6RO68EYRorUwsZ4nclA="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiUAjgACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqu7BAAnbtJ5XuZSSb4E8LLV0Pzziz3Qla9YUQtIfZ0VuYZOtJIdtPw\r\nHhu4hrFSXZqIw0wAEOs4JF/fo86kzO+a+We9qn9R0I17urd4dv6qM1BAFJ+v\r\nGHInmmCohMvyEEdAzshIn+UGEHEigjDE6BjDnvXVbiQ7Gf8hAa1bCz28IMto\r\nqWI6Ura65p8AgKIoBUl2wTINB7TFQ8djyOKXOX70AFc4GjePQrdtj6YxerxF\r\n5hNjb87pTf3xYqkJ2b1uQzCgbunlqbsSlhq8G7IkuaW6BtSfAMl1shvWRPit\r\nbw/AtHjAEuPLxsEULi+EUCCfMX9eekcY1FMO8fBs48uU5pCyFVro+g0KkqnQ\r\nmdwQgX30af06tn27wxu8cijs1Tckcu0U+jguG5sGTqawrp1byLWSFiGq++uw\r\nYoDvg+slemrhjGQDbYv434+WvUuhWUq7LpHZS1Q76uqmUIMcUioyrSQspY3D\r\niQD+fKnshpmK76IXQfAlKJBKbzP5zNZRcSt+c+D/IItFIoeGDVZB3AVfIqRS\r\nHj1FylTBVPW2CraKyW9m7xOtEhyTbOeXZJfFHzW/YkaITbT5mBr7l4UX4T0o\r\nv0cRrT6CYtfsy0DRG2k98rq1zeC7W0KuTC11wQzZad8FGqZFCb9iosN76zig\r\n/R4jTuvKg2MXJeyaxgoBDhhsb/gSjQROQJM=\r\n=mVfi\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.10_1649412320141_0.7142673260135679"},"_hasShrinkwrap":false},"4.0.0-alpha.11":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.11","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.1"},"devDependencies":{"ganache":"^7.0.3"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","gitHead":"ed044d59f258f45fa3e155fe6f9b271ce9d39de1","_id":"@ethereum-waffle/ens@4.0.0-alpha.11","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-XaeBQt2MrhWaYObtfBhtABrp0Y0zu3rJZEE+HiLDKSt3iorlh4x7FOy4/B6UnbKRsDkwXHLF4UJLsnvEfYrdCA==","shasum":"ba35fc8ed053d1c4328cffad9b78a8b8485cea0e","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.11.tgz","fileCount":29,"unpackedSize":43290,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDPUMxn+swpyYTInd2FFYQrEQwg1If+TcWMOEGJTyr4JgIhAPx/tpVqH1JQIC0v1FSMNfbTPWJmddaEpsTtZj32vMq7"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiUDcHACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr8rQ/+P4Ce5+YwZebouiARE22vNJEf/RFxNYSq4tCosk8Mc2p4el+I\r\n1obrlB0G2e7comPsrAlgdcZ1monYqwsCV/lrCwXRZH299HJ2UzT7gJT+Zpwe\r\nNV3YJs6iSMXEJQNf/KN3oWEBqGCMoqZyfyg0eyfM7Z3HuwQca4ebXamt33jb\r\n9GBhtSvfLQFBrgMFfw/i4wa2F7xZjSQH4RONJfUg5ONHA3phogUEQPkaWWlm\r\nNHwpDnC/QSUnAViQERaFAMxqH3NAkk80XMI+SiXRUwBCzeMZTfqg46N2GyFT\r\nIlRIZf4r7PQAr9LHY87dGqUpvtELvN1Qw9dMeNVCW5A6+zWIZq7/N76y7z3i\r\nGPiBl4wJSMjZ2BnGVXWQsAq3FXbp3FoeByjhEgd4oCpHTsQJPFxBsD530+6u\r\nOH0hbIsIUI+76FHjURCF02+8cjglJuvQFydrrVKHpgOwMASotkOUE+Hmub9o\r\nx1AIMpO9+KUoKt8TKybZi6TDInqXcTIjhCcjfaaWKqYmKqCPYGSAhjfirPBP\r\n7kj/KqMN9Ht/7r1/HyEJW5UzvBj9WbsZcAR52liY6o3pL4E5IIYxNGtH1nNG\r\nRmCLF3mXQZV7GAwPzQcRVJBgwPnDj5AZgZQZiRAc/8XPmGofT3qPD3vtmPOa\r\nTyDjEDowP6h2qpdabFdr1vxRsyg1SQGfzM8=\r\n=TUuK\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.11_1649424135242_0.6262186370701248"},"_hasShrinkwrap":false},"4.0.0-alpha.12":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.12","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.1"},"devDependencies":{"ganache":"^7.0.3"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","gitHead":"c63d7943b840e3695179ae9414a7429b63ab86f3","_id":"@ethereum-waffle/ens@4.0.0-alpha.12","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-621BhmC/1UNJtYcBApJ71qYYdk+MKrwJ4yNIR3EQ4270GKr3bFtB+k82cnYUJsnvi5vUVs2zu21iXQ6P2aUktA==","shasum":"d096219568c18b54f54708d8b1d9da803d44e219","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.12.tgz","fileCount":29,"unpackedSize":43290,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIEgOZWgmQuvapaaBMqGJXp4gz3pVV+VzRei+8x3iGCjmAiEA6gWezUxv7FvYUB4sGtsSx2skxvTD9gPD4uBH3zAjI4s="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiUDnaACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmos2Q//QwxYMRAdUwQuWvDchDBYFoSyf1Jbr6fgQVEm/ADx2Gdvvyvf\r\n0GOH+R0RxQYsc5zY4KKOnYpIQH38Y6DWd79scV7fNPfqAqJuXCRjXX9LzG2+\r\nGBV41Ucizb3JgUG3ud1zijHkVu/R1KvIv72x2bvoMvOaCGhBXmJ6PqL99MFY\r\nPYcMFO4E9rmker/DLNrdAV2kszRMdtT3N0/jCd+C8iwzKqk7v654/hKyl7Si\r\nRMEos5FJeVlPualNnprQAH5eDgq/nUgMJxYjQ9Z30bdiVu/znwpDhDmUpSAi\r\nWQOGT6S8X83BY0vTTv1Z/gcop6N1t0T0WDe2NY88CV/lPi6glkIMTS/19cmO\r\nLaU5EpiuWn7K/YZiDyMYcrhd6cjkNUYv18jlSqIB8L48CyCklfMeMi7GcPRL\r\n/Cqs2QAKMb8sIa6jtAuYN6yaWWLk1QogOqoSy30WoqTyZ771uJ/OUcE2ut8h\r\nWO33jT5SQi8XWJRygUyh/t27z6uqYwm5UyW6X5We93uRFj3RbvMnPSL9yZfY\r\ndt8kK2Q4GQbzvN2As8+QMO+OJzaWo1jgERfDh0nS52TJK/y5UkEVqTa+W0dA\r\nHDDHAb7NQoDH35I9PcJvMPUAIztEXTwaN6Jnmxrd/iMlhTSj02bLkA1QDkd6\r\nNb3Gs3mrHG1qoHO6eGTD6dNzgsJUb7svlyY=\r\n=NlO3\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.12_1649424857859_0.8850641282580096"},"_hasShrinkwrap":false},"4.0.0-alpha.13":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.13","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.1"},"devDependencies":{"ganache":"^7.0.3"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","gitHead":"fd1ce01affd04e81de568ab2f51bfd0ce0142654","_id":"@ethereum-waffle/ens@4.0.0-alpha.13","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-UTlqn2Kggj3fNmhpAKsHvIHEJSp2YlekAY1lqJLsxdh4mlyxKKhzkdXLLIRnWJM+wChUwXQW8UZadR+U67PA7Q==","shasum":"ed9ccf3796d487e000419c128548cfb39df221cb","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.13.tgz","fileCount":29,"unpackedSize":43290,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAnMMjGmz4F6Dw6PHFYgOChtUvaaGGpLmgsoYkuH9NNQAiBKfebBA9bqj2gGTKnC0/JNkO20iP4ggl2rrWHht2UNgQ=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiUDt3ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqiaxAAhL4JCjx7oEFZK3mE5r2GVzW/i6zj25YrbySNJY4Z6At0qTpO\r\nDkzB4ziP0JQUaUOrv4kUVVX7Wu7d5b7Khnz3mK/kXLV3OERHZ0ANiazdnlSD\r\nELrPFO8EKVybdWGudu/X2YMpOlIIo16l4qqJnbKMNuE3g0FjAuUNP7s4xqSB\r\n9O03p1d7iqYoTy84pnLEyGf1EzWSpAb4xnBcY+YQButbvtwgFw2+N05hPe3E\r\nCykrpatSssKdidT7J8nSxo5l19IuRoDU0N4hbpOnRY9l3oC5h8f4+5TUdBn+\r\nps8HF7Zvb39ibu0sxFLKbBeP6H3Q5T+YlEWYhX7cn4N83UxpiigF/hxVS0/K\r\ny6UAhA7OQqR4zyoquRkLYIpRHb6xBoatIm9akViFFD89YaLMPyUXrdWQx6s8\r\nkVNNhzhreR01CgowlLAv7cg1umcdaV7EnbCt86JLJ75sU2x+9/58aYefme0S\r\npe1kaYsFo6h03LSPmgUVjEIPiWaZNtv0biZeVhsYKNGRIt5FqMogFoIUEef2\r\n/M30hY0J+0qpNw4fnA0UJ1bmy6Q/4QLN9Mkm6PTuYiZcn39IPAoHwlYciSV5\r\ndpCzIwLEfuP/EAWagqmR/K6Or+yvGewan2/N/LsNakAnzHngKhXrDfVqgRIr\r\n3dHjfWrHwqZw14WNxfGuxi9FQPZdamWtMSA=\r\n=EMxD\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.13_1649425271336_0.961661489785304"},"_hasShrinkwrap":false},"4.0.0-alpha.14":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.14","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.1"},"devDependencies":{"ganache":"^7.0.3"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","gitHead":"96210f0ea784ee0adfcdbd53044232b1f0c69e85","_id":"@ethereum-waffle/ens@4.0.0-alpha.14","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-UoOz4lcAjkh6GLQHfOaxUy0Vez0Jnesyq/QYFaoWoNvCCUf0ufYg2Y+nEHLOsyK4pw+sAiZG7t/cHZyuksUvvw==","shasum":"25e46ac5c7379238f690524d9df09608d6065b12","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.14.tgz","fileCount":29,"unpackedSize":43290,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCY/wWptzawXIf5p6mrHu+ORejeyIkWsLHfJnx9PY3kZwIhAN2E18WBYs28kE+8TmPdxlXYKcllBeIepCVcaoUfC4I6"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiUD6PACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqMww/+JLZP4UjJtZwFrOjoSuzawJ5cLoKHIAWCgb0Io9kxnDxGwX4L\r\nqAR4UDZYxsWgUrpMBmqzSycv87/SJNBusza4q+PkOzw8PQvbbYoqnWhVj+nd\r\nJvAJ6zaTxj+cibFu8jM31SrM6CcaH+mcI2UZy7T+8bVlA/Q7zonf6l3AG9DT\r\nW0dC2bn8PxHaAw4eFJkkOL9AIYZ31z050r92XqEZR1EuTHzCZ6o+0MfBMV+1\r\nt2iB+KTdqequVuhAIuMAEloH8oIB7EzC+jFvCteu4V+MAtCEPjc9zmioLvNn\r\nguhCb4gzyNYvtEmhMGfb8Bg1ErZi/Dpok62S4hqlUwEo9Ba75IybcL97oAiv\r\nsk83VY1DAzQGr1VwJsuvo653oh++PwrY/JOjfhuQnTGBulYZ6boMVkwJRZHi\r\nRrgDAoFePVVuBnp5MrpiRdVbjHVbUFUdCUrdfbnjD8ytEeU8ugPN8V7zjJyW\r\nSOocVy9nWXxcb/+AZ76eqMdKwFolMJbb4Tv9iEexHQZ8UmXHcvnk3YwxyUYh\r\n6Gcm9oUlb1X8xb9596/qV605E/X8eP6v16BM91qeNdHQ2k1LVbs+BQY2u2I2\r\n8ZyO0zqDktBAefC7mWL/wXxEya361BwshsbWClmw2N82TIq4u+DsI7NiBhJ3\r\nErFPOIzsfGA4kfE/SvrEP7A0bNaSOL1JLe4=\r\n=vPvZ\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.14_1649426063022_0.30967554028854205"},"_hasShrinkwrap":false},"4.0.0-alpha.15":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.15","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.1"},"devDependencies":{"ganache":"^7.0.3"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","gitHead":"b94c36999046cdaa28e71ebb47f1a399b336b9d2","_id":"@ethereum-waffle/ens@4.0.0-alpha.15","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-wieIsSYw9HmHuR9s231phqy0A9aDdqqHxgAOsky1LHKRjhBpbeq45BeIxIeZJFbBqfg1msnNvTS0o6x3y6OQmQ==","shasum":"7db7c5236d1da432553ac75d09473ada5c40dd8e","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.15.tgz","fileCount":29,"unpackedSize":43290,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIB67E6j1JcFdGCXJHaqM/K+JjxDUZHNwXIsc+QzCIYt1AiAZ9zgsnysKTsNJGiojiHJ5cf+zAbB4oMNnzl8AEsbfKA=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiUFxjACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqXig/7B7nti+4g1QBxgX0gCksdxyFz6OQKMtrJCdhuoi4dtzdIlnDQ\r\n1NwQhA38xIMiAtbpoPJtgiRXeb1YMJNHZBkYIqmTp3DX3CygzK2xO7rvKCzo\r\ntXM4VyQWPW6jwfGzyjggxYuBrimS29UGVJnp6JW+nsAvyXim3JYMGvu6wBAk\r\nze26E7Bi5hekvS5jxxa+xvScwipNcV7/eZDAX1WXylepSWX8dipIaozecfUv\r\nWxKmicYOekVJ4/yZjFUQB4+X+2DmILEzYVyA3cT+64xjIfagg6R3YfXguRL5\r\ngxhJNsZiBCLKEVFDqIXFQeLhacrZgUdsAnl07AzeO57f1TCxRDDlGkjLTK6P\r\nV9pIFeJjtmXCSO+5mIh1Q6Qu7+N/ulz24UkbVxXMG8gGYQKJrkcYZbBP1WGd\r\nE+zgM8ICp6srLdyUpkueqRajw32rkbOLG5lt1sAI2DxIo1P23uvA+6A+v4G0\r\nGbw+n60ZoJunFQbBnxgl++2D9WzMezuTgk9Y4fTHkX4Ps32yLbn03HgthfR9\r\nhAEMkI3NRb8yNMCuxjmfC6tFhMWJuBfYT90njkloUqt8bDaCeNMvdoFp4869\r\nH6HwbTtkYSVxAALglsfgHW36Qa9Q905w7glOj9LDQFVf/CK7rGPVOh7zQaXW\r\n+xGDvoPTOyk6QWq8KlfWSHAqBVDCrehmMxI=\r\n=F7Vr\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.15_1649433698974_0.21318747391436532"},"_hasShrinkwrap":false},"4.0.0-alpha.b94c36":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.b94c36","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.1"},"devDependencies":{"ganache":"^7.0.3"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","gitHead":"f89ed312e4403bc227a6348df418e87b609e5f21","_id":"@ethereum-waffle/ens@4.0.0-alpha.b94c36","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-CjIgqk2KTBC2LDpPk4EIV3ENMLSAHPS6dMQjprm5WwupGFzeoNki6mD4jzpEPCs7oHe04SEt/Dv3cYUSzfKNZg==","shasum":"14562d9ce9f370779fa1d44e98bc3c911e57fec2","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.b94c36.tgz","fileCount":29,"unpackedSize":43297,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD9Md2ao1W3C7icBRsKdzbha15bcVHFuaUX4pOH0LNOKQIgTgX47T+8iwbfq2aOyXAvsD6OXdBzEKt0VO8A5CYNVlk="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiU/JyACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqndQ//VTwzZGeasCz+P6Qr+hwc6ZuUlleqvDRURMwtT1+ndZyDRAqB\r\nlX8jUCAeAsMk2AmGWgXXbvrjjwdlDOst7l/zSVNp671j7HRpqrIgCZO5qtM6\r\njW6miKRrIeQubQ3aceJb+iReeiJ/PZ5w1QMWqoCn8Lo3gaO6nSCRdya4Q7Vq\r\nChtPmo13on+9BT/PHEQSjIzfHDhhvFBe9V/pYSnalN6XpPZv3xUV8dOZeHFp\r\nLfILtDuHGz0e0lIWIIz1mBax+lX/0nAFW2mH1HdY4Pdqeu4+E0WhFE44PLXP\r\nXmM7ZA4KRPq6ebiFXzv7CA8dxpRfaUzQxx1e7BjzZ5Xa7528fFizwl8CzZhT\r\n/QC9qPdHGRnFz3S5SU9u7X4PRKgHH22Hws/VT2DX44VK2xW7uL7tmlLVmxqG\r\noMj8MNrNXDCnSFXgHgm6Gfo96A1oEZxk5h4yjEYVIRpGcHur0+4u7aPln5lQ\r\nz/vqjvAoWyO7vzhVO4470K8zWZ6NOq3OBYJ8v0B3ktr1kRiQ9I87Yj3jiNrR\r\nNtWm6NrL2zoHCi9TnedbjstiWxwtcSpHlioZBWJ37U9moMP+LWqOkt001zZT\r\nsfa+x82uCDAacsbv86o/wy0cNleTCnnGOwmsVOpCFNz4NABg9LYN1G978Pec\r\n/fpKr4ORCi54uQEkp2TLUUGqrzKW8tNDONk=\r\n=gbIw\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.b94c36_1649668721910_0.8052915061075165"},"_hasShrinkwrap":false},"4.0.0-alpha.16":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.16","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.1"},"devDependencies":{"ganache":"^7.0.3"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","gitHead":"3e41a2ad0efba3dd8820f0d9445ce43434c723f4","_id":"@ethereum-waffle/ens@4.0.0-alpha.16","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-M7ZbrOajLWg86FS1z6AsymCbVSKuE16liEM/48Lb41aEzjbBQzl8S+qPgjqY5YOkVpB8tQusoolQK5QL6WJ3Mw==","shasum":"1c6bc109fe34f3be28144a4621e506a7592b17ba","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.16.tgz","fileCount":29,"unpackedSize":43290,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFrSnKGXvyz52YiAMSA/KcTtGz1B/pwhzK8n4IdDJ8DXAiAxdBXRyOrOUDRSt8VjNScySoDtBOPNgj4tYnnc4AcjGw=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiVAqOACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpsDQ//cGSgFY8WZE/sVXxZZKWJ/IamCvIXPzd76v6YqdCC2XczXM7Y\r\nR+j5lumIb2DkxjOk2ldNRvtoiYMKgAFcI+pRahRLD5vY5Q/jKnpje1Pmq3YV\r\n2RV/0IiGuTry5oPrvqA+bpe32Vr56ChpHa3IKLG3KRNd44bXt9eXo9b7dtoK\r\nQDPUOfGIUrP2XYTP0ddxW2atw6eIGso59JG8RUKPxsO5HdbAZSQfXQo502Cb\r\nMWDkBa9X8A4Rm4bYbn+uY+RKM6i7V3+iSllHK8aHxHMfHl411kvjlxpSC+0Q\r\nRH6CNWmB25pvrDVB6D4mN4NiIy1taJsODxFB09r0IXZJ0SighDkeE5ohC2t9\r\nMH1/DyHil+geZIqh9fLRaTnEXdwpCdxF1wbcmLusAEST8whWm7+UF7ceOHTp\r\nelVbL1aXxyE9f0b+n8JC+oV8NCMjiLsz4nB3ylZ5z4iFZas0E8iBDF91ivwE\r\neWYLvZok+sk2Lis6eDqYNQ1vU3M3y571S6id+R2CfupAXkdNAccgYQach2zz\r\n4aHU5ya73GmGQqKrSQDPMNE+GT7F+C/h5owIEV63UFOYDdbkxZNJF03F3uLc\r\nnTMQ32zbekG43qLIGFfLdbaBoB8xQbHQ3qAZ9Ah5A1GnrHejf3U1m3OuhfQN\r\nogQrui1dWSfWWEbb+KXGsAjIOeuEhWiw4r4=\r\n=GK5g\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.16_1649674894059_0.22284688254767304"},"_hasShrinkwrap":false},"4.0.0-alpha.17":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.17","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.1"},"devDependencies":{"ganache":"^7.0.3"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","gitHead":"ffb59e3d7e2f00643a41a0c746b3a5bcd1dc0828","_id":"@ethereum-waffle/ens@4.0.0-alpha.17","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-TtiK8DVfS6CkK1x92y9Ks9EROuImc33VePxyUpJHYOZ2lCagtkhSAu/1iggvB9MwMALqMcprcByYBQQsJx0AdA==","shasum":"fb828aa17ff028781c9eb0ed30e67648731bf1de","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.17.tgz","fileCount":29,"unpackedSize":43290,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIE6RWzhdJ31xTdAVewDEtOa/iTW9eZaTtjCMKima7w1nAiAy7TSVNdEg4p9LlY35s2JPyBKn2klk4hUxdK/ARmQ88w=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiVBVGACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo8aw//XTUemllSx1yaHLCGyK5lWTslbKrtyJQrT6eqrSgynOaSXiso\r\ntgdWDDoUtjS5ow5kfskHQrCWJfA18g8UGuAfyA0jIb+TBIEc3Jq7ifP2wKb8\r\neIqLBIVlTol27rqerpZcZWs3glFgQ08KFFNq5QFUjECCKbEg1J/5EufyU/nd\r\n+0eQ/iTuBV5a55pHu8C8Ngi+LjCBmx1kJi0kDiyDE8vNxUl0qBkkccgZh5kz\r\niH/8fCC+sB8mVIa0igrlGTl8+mOoZ31G3YoDpot+BfVSmWSBTVKI6GFnP82c\r\niPmnfl7ZKV5topyXZpPPPxiA4o2dlzXZkimrh/aOZCFICvW8tQvwW0TveWf+\r\ns/2DrqPDdkQfY0TCG3ei5Bb24gozp+qFt0JCP6eJSe9q2C+Y9e6ZvW2+Hbt8\r\nZjb4mY1mHHTdI2ko7qqc54Sk13yHUSsdtfTD30SL2Bw8g5eBRHp+34MOsefL\r\nUF/KL6Qj0OeshXqc4kMVS0/nA8tpu/KuYLxok1zYJVeVUjVc+m53GLJrdHTC\r\ndDygB8FiElhZS/HYFS8Zw0Uio3j+LkomoFojlZ96zv9d6l7f0ku6ztQLo2G2\r\n37ExIB4gpKZW7/ACx/rfCFgBYaMhFgfwKFTecHLcLZKdgmcuIIdzfqWInkFB\r\nEauzPt9f+0GUnwn2fVAQ7A0i7bseU8b87pY=\r\n=utij\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.17_1649677637723_0.23456995779528533"},"_hasShrinkwrap":false},"4.0.0-alpha.17.4":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.17.4","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.1"},"devDependencies":{"ganache":"^7.0.3"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","gitHead":"7efc91f090bdc0170667653e969eb9d41cdd775d","_id":"@ethereum-waffle/ens@4.0.0-alpha.17.4","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-S+vxFo7c3me8jf1dJT/fFNACQyioeSRdCYZWGkJT8/63U8l8Jt0KtAFqEAXVHvAA1HFm95GKq3x1llmwsxhlBA==","shasum":"e5c8e3b7529c6d227b5aa9ae9be5e5af23c2fc3b","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.17.4.tgz","fileCount":29,"unpackedSize":43295,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDYTNJmFMkGp2LNY4hIemo7d0tHiqcGQoct4e7k6SG5hgIhAI4bCYKUWJ366T7nElmfaNDV7qpWesbSX6foFwKQK34B"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiVYpgACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpOrhAAlk1dFto7z9kHbEIDxaf3XTIjmBqxDTjW9cPCPZ+/6Uip1mFi\r\nkbTdR67S3xYLwIPUOdv0jKIWdnmfzXX7Jw+6ecHkE1ozvnDWaYiJfkAiAVLz\r\nYrOHVnswNdIK5kBjYu3iZEK+GGzRdCPb1KzAyEiKi5geHaLHXKJB1Bg5NCKM\r\njlQe+ci9/97x5cg+3vAOKECi06hVsxNY2FMqW3BOvUttJN1I3KquCi2pP/AR\r\ndg2T3IRJWePrLmc/siT3bp/XtHAWccRMxOaFYGVQkW4LXZYUNqXnFM9eHiBW\r\ndNzK3bC4C9gfOjKTIUegy0DGnRDH7Wnv7mpjNngF0U5fXitUImYOdiA4wO3s\r\nY1bX/kD16bRmcAFfvR509Zw4AjIITNvKUSecAL0Uk2k5L0+hgI0b4lo+OgQf\r\ny7iwKEwYvrTKWuaXEj8hsgpdnyz9L959/Lf5Bc8N6SD+VrMTEvlAYkqEj/V1\r\n64gsugWSwPx9bm6T0+AFLaCKwWXoPfZzA7NxKO1o3c0KCRq+k3+Qi319jcdx\r\n0vSmGpEvXgU+9hPOoGNQjyc9bmAnaNFWbJDLhBmRhQPXfmUnBaThpGUkR9K0\r\ns1Em+xIYTRjjiN1qKpvdYsqso912fIWKYWbgY9QI6d8V8p4Dmhqwx3MOhk+I\r\nXADt4Boc1+oVx2y4axUYBCi2mEiWleUYM3o=\r\n=Q7rk\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.17.4_1649773151882_0.5752347098439727"},"_hasShrinkwrap":false},"4.0.0-alpha.18":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.18","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.1"},"devDependencies":{"ganache":"^7.0.3"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","gitHead":"bb64c0ab085262441f4106111a6a051e44459f49","_id":"@ethereum-waffle/ens@4.0.0-alpha.18","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-cA+tRjPJZ8XRuq2sq1vLtUnUMeV6oB0u7uW9pYzr6drucfTBT5M7a2Hj1V+0W9W0T7lOaF0VJmIKL9x1jlPRxQ==","shasum":"7fb899afea146081f6011aca2c5bab78e5c16db4","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.18.tgz","fileCount":29,"unpackedSize":43290,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAU4RWNZc3E+ujezDaKpSz5wGUh+KT2TCRNBuR0Fuc+9AiAiJtRCM9JwR8clk6XdyeC0/9lP3Cri91llq1qUJVxnvA=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiVqLsACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoG7w/+PJeVLiNqFb9r753wIaa1xBsYtYkYtn6hIz2bo/BiaHkaZvoP\r\n1raHWbQdP+Q5ebMggrpaW6M6iOqcPA8bPm7gc0FTlBqI09e3pbbixZjvNbfo\r\niZqw7nPFpwXtxKBpq50fieSR+9zdyP7/GQ+zq0OkQN6HNvCswCTmWKINeiiP\r\nFvSEBbHBZMEJCweb75UAqfWUhjssP3ZMr6NN5EoF479ZxWkur8NN1gdR9TaV\r\nD8fzojz8KoGLLMwaZ7Vvys0L6/qdhzg/7yRHYBsOvYTPZCbRy7rlU0CzwVv8\r\nIoTgt7eO8XZYbc7udbXgJUUj1N562tyDXuDadGMHxAcLnA0MLPAvpCWwcNaw\r\ndXl5BYRyFO437eYQlLvGPdQ+7v3gHCDsf6HahAcGJAlCbKDJ01COaN8Ek84b\r\nX5u+8hZn2GctVjOBFkUhu1fS5Du070emgXyQPf0mSlGqeQ28CGuWsux3BdJ4\r\nkd+saopZt3hcQLCl2d5yyBM0S0GqzAhLx7RHVt7/JQxhEYTkM3pHmnRZmJXB\r\nqNVsndJMsyhc/y0JBI47O5CTBBZM2kBF2HXRTzdbLYbULgS2sUjQS7uCE/kK\r\nn7UEl807eniC/sjaxPYMSAfshvt0SyRJO6xiwnbwhRzt2Xi01VmCHweBuzjV\r\nYUkDVaF8LT77E/1YVkmGcfNxanH35k9vb5M=\r\n=Vvm+\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.18_1649844972781_0.7974412228665191"},"_hasShrinkwrap":false},"4.0.0-alpha.19":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.19","description":"A mock ens implementation for testing.","repository":"git@github.com:EthWorks/Waffle.git","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.1"},"devDependencies":{"ganache":"^7.0.3"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-alpha.19","_integrity":"sha512-7yT4wsYo5suanKbJre7ZoOAJkQHcYVUX/QhIhxZX93tkkrfNQ3eyMun64iQ1llkH8vxEH0bR/RfCyZlSeRUsQw==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-alpha.19.tgz","_from":"file:ethereum-waffle-ens-4.0.0-alpha.19.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-7yT4wsYo5suanKbJre7ZoOAJkQHcYVUX/QhIhxZX93tkkrfNQ3eyMun64iQ1llkH8vxEH0bR/RfCyZlSeRUsQw==","shasum":"9ff2132ca539ac068810884b98131d1829d440a0","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.19.tgz","fileCount":16,"unpackedSize":21948,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC9arUsQQCVsgHAe71FMYxrSX612IJzx2BxDvDdnyuT7QIhAJt9qc8BxWuEPkiDLKaUP+d9lAgWJTDWuh8+NLa4TVzN"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiVqt0ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmouAg/9GMaalwcwvNxC1Whpq57qIGJCFECNbAG8aXFky+ghrSCKgSAn\r\n21VrZ2OlGSal15N8Q3wGL8LNanNmZJfyaAQj92yvdE+S3E9eOBetPGT8Hx/z\r\n8adWLO3TEFAViOO9qehoIpc8OI6gdmELrG4kIueQS2g9S4Hu+SMpxQkZM9vX\r\nfY7akDTrsMYu8qDerFMQEKtVMLNrc0zXt7dU3oXnT1/GZDy6wLtmLSOAsNbX\r\nLT8S3S45EtZBoPy9sowQQDs7QlKwcTbfMrSqnq9bWS3EABkDm6fAvh7tqZ5R\r\nbYW1qmkRZcMCouDRNmIh891oP5jUJZdO0e5B3m/LNe+y30Kzc4zYJ37z+Yq/\r\n5KPbAYq8yhzB+NwR8d5KqpKuAk1ZpFM2GRlDoxkwiWKdvTxrCP4Y8ciXCr6I\r\nGUgTU0tJGAM3stHDX3Cs4cdLiyO1H3+6J4vjFxSnGFqOub+MPIYNOZHsdjz3\r\nIJSWgSokoTJkqqCKkIy8sD/ye4PCQkdu2D0pGR9t8MKl2P/xsJ6UM5z50F9c\r\nqtyaALr3yYCpd2uuoMDiMNrAkTnQj4U89UK6bk4GX+64xKX67JDasTM48TXa\r\ndKypU3eSkTM5DBA15TV7kw648bcZSKwDlZrtzkLUs6fF+rtzOo56K7snfyhr\r\nJWA6nHjxzQ25sTWkPowX8cEI81cmyuL95TE=\r\n=zo36\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.19_1649847156437_0.5373420083531537"},"_hasShrinkwrap":false},"4.0.0-alpha.20":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.20","description":"A mock ens implementation for testing.","repository":"git@github.com:EthWorks/Waffle.git","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-alpha.20","_integrity":"sha512-WSTutW9uMi6zZWr5ukNE5LtzR0Bht0+ktcQBRJgU/RAPU+JfyyQRNR7eEa0IQJF24Q7wfOYqPDMT6ZJAZaW9WQ==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-alpha.20.tgz","_from":"file:ethereum-waffle-ens-4.0.0-alpha.20.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-WSTutW9uMi6zZWr5ukNE5LtzR0Bht0+ktcQBRJgU/RAPU+JfyyQRNR7eEa0IQJF24Q7wfOYqPDMT6ZJAZaW9WQ==","shasum":"bf212a2cfebef3bd1f9235efce9e9d8706a96634","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.20.tgz","fileCount":28,"unpackedSize":38391,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDcE8+ZXKNAxmaBhoYQY0gEL1wrKXihFOoiOgUVZygF2wIhAMBadJ/YVIgleaHCrnFddDvoNjvmJXUPE68SYB6kIoIP"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiVwC+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrF7Q//fLUMsHYOqrF4AGman/j6HWT6i1jk4Q/dPzI3UWNj0o/uYg/l\r\nfe5OfzesG1Zr/8tMVML+Lk0yVGf/4sXuIfYFoEL2m/LFJJq/oj+MRsFRYdf/\r\n5iMTFGeNBXjn+Xavvrf452CzZKTguhfgUFhQmO1ce5KxmzVBoKO4r2qiTOMX\r\n1LqF7FaymeMb61THliiMxwPgPmPp1rEYMlsmkW+J1Q5JKxL6FrILJ06Aub4s\r\nwa2eKEut6KsYSkcHBMjx2Znn6Bt76XDWtQ0mW6OsCdc77S0vvu/pD7kXjhHL\r\nZe7DZZh68HaNMc/UyRPFRVZewJsP9LgCvDu5KcQGJPZzAU+Hq++tR8OMjyuW\r\nZu4d5YsMEO8RWmkhXN+sfKHeaeF2rsXJk9wvluIC1dT9+7CKcbN33tfAa6iM\r\nc3xj3hfGey2YLZxHwRr8gcPKD1Yv5Mjq8bylvFZzYKsi51lRiz+8IVuzB+b5\r\n4iQHT3wJ/aNt27Eg4G7U6sFGIToTnXy7ODuDCl7FdrTHfWrRKK4tWlOWU36X\r\nnFKGy5UTwhihVdB876Wa1g7m3Kdpski9mLXWl3Ow+angK/B2pDiOgPNHyAx6\r\n/Eh8NZppMEydvNqMjkQmt0mPeAw/fodosfFjzUolF8U7aij/afx4ZnOaNZt1\r\nAgpkr3DYa2pxQqYK4gCp4/8AGtVilfUcax4=\r\n=kF3V\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.20_1649868990468_0.27367624058859197"},"_hasShrinkwrap":false},"4.0.0-dev.b82389f":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.b82389f","description":"A mock ens implementation for testing.","repository":"git@github.com:EthWorks/Waffle.git","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","version:dev":"../scripts/dev-version.sh"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.b82389f","_integrity":"sha512-itZTXB3DLE8L6IFpTb8m1tRX/6vElLwVD6IDu9vyFeHdEH5GuPjqpa/8dfhWAo5F2bWW7WtDRvo2eeJ9WZqtsA==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.b82389f.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.b82389f.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-itZTXB3DLE8L6IFpTb8m1tRX/6vElLwVD6IDu9vyFeHdEH5GuPjqpa/8dfhWAo5F2bWW7WtDRvo2eeJ9WZqtsA==","shasum":"b82e9f7c3954f3d909b5049fc56446dd55de922c","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.b82389f.tgz","fileCount":28,"unpackedSize":38442,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCaNnEgSGiCpBHMyVwq3BphX9KrP9ikPnFSQnMMAUauHgIhAO4VDE0dkvCwGpaGHin+fdGYK4h0Zg8CqzP6zZgGEKyM"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiYUNrACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrEExAAnVODCRyonw3Ot3Ew8bcgrkBAFXJa+tRPVzthY2ZrJWonKqTc\r\n13UJ8+SUQJmXd2zJtXVROqv6XZf1rZQkUpYh7VS46rIij9EvUWBZLEwZHhJz\r\nQD6HmItdV1r7wzOhz1Tm9OLUh/F3kmt2ofqRmjM7wQ5NKYMLJa7R9BBqmcEe\r\nLmMzrYdruls6sodSRRybKUdCWx357dmWiExW5DctS37fgjpAu+ha4CJ2gOy2\r\nKjmek0HFqeIFkv/RJK0wzd6BOFtfLow9qyN4rc4eTweuO1vwJyubGSXcoGd+\r\nij5rZ99jcQv17HaFt2gJZ9KDJFhxgPqS9ObOxWnsqFoz25kacv23BeF6+5BR\r\n4HBasf/WACKAsqCYLOoz1nKdhAwVbM72vPci/Wo2SF1sXg3kPpYVxMc0tW0K\r\n+T9+M8ficzj4SkGOdOQ28MHdDRXREf77fIrtp1kwrOsNkR8i9WUb3v/WTlYS\r\nQszdjoFYT8f4DZkfauJHQ50+s9CWyT0ZLgUcUG9F6IrQ4HTmqAbDBtzWfm19\r\nf+uOcLhzjpD5GIqScFMQKlCtiQ8qHObQZFw1rRdWxvAL+DFeQBY4lq4x4PxQ\r\nO1DBQgE/4MAvWbAATwDvGcavq2Td1E5ANyEp9RgBbV6MWBMez6Ij3OZ2F9TJ\r\nyRgN0MKMtdNJX6N/glBCr/tK7k/6NKb5OBE=\r\n=KF5n\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.b82389f_1650541419235_0.6535059327936021"},"_hasShrinkwrap":false},"4.0.0-dev.8d4934c":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.8d4934c","description":"A mock ens implementation for testing.","repository":"git@github.com:EthWorks/Waffle.git","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.8d4934c","_integrity":"sha512-q/Ry2DrU58pCgcVHbyNfg34UDtMzfY9hbZMXZSfMoVodtM7xQU3ifOak4PBX6IwqCNPpSuc5xbTGndpXfeuR5A==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.8d4934c.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.8d4934c.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-q/Ry2DrU58pCgcVHbyNfg34UDtMzfY9hbZMXZSfMoVodtM7xQU3ifOak4PBX6IwqCNPpSuc5xbTGndpXfeuR5A==","shasum":"17c62fd52173530d3729b2f0dade0f1cda60daef","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.8d4934c.tgz","fileCount":28,"unpackedSize":38392,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCGXY31zuov6DGCdOdEh3ryu9E6ap9o23mNon1ISyXzLQIgKJmECjnEnHw9t+laKe0/dmF+SPjIvKMJv6dmlS+4WCI="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiYUy4ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrbVw//b/O/JaVIyHKy1ZSqDSWlATWQsy3a3JTLqhV+zq2FKjRk3RvH\r\n3tBBqwa4iYj3fzz9iK4miM0ar13d2ZXZ0bznLgI5/iMSwtnS7vHn9GK8E5dR\r\nUO029n1O15X3BA9jgDd9BZzT5CVI7cix9jshLG+u2glkHePup4b8bJtvpHfG\r\nvkzFf/fhgofyxY+aMoQYOzdX4SmQIilM1GB9FoJ+F9qscn0kkLka6JcThMIP\r\nG7Dq56m+Tanz5E7ePfSe8iZfUQVJW7lIBqXM/RenxBtMnGwP+NFsKdpViznt\r\n7NbUwEQAb1sV00Tk7mWaXIywNknEaTF8+Dh3McOwqH6S9oKATeM5xBC+/26v\r\nYdRF2qisAn+uuwyNd3mOAcim6xz6RBcCQ102Irh0fx3T/B/C/EoHfzaPW5iK\r\nyoUsJJ7s4Z6791fFIM09JEQqSB7UPIkeTOrk/FH2+zlzKo1Dmrx+WH4pwNoN\r\nPdvp7tn2WZBO7pJRD/mYqJWzgB4NLX4rbrIvSc+O65IIdtn4aOW9rT9MEufv\r\nA6CQqOV5dtxvH9IvpxG/v1MOXnXtbtzt03zqBoZ26iqvIA3sMB/KLXcpI3XP\r\ng5J6S08Xyhq6PFPAczRbNEyQEyw/dVklQmSrPlN4qL51+jZvQ+MPiYsaRmHY\r\nT3fLHHB1IVemEJ7PUxnCMGSnp8211Q+CaAQ=\r\n=RX9r\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.8d4934c_1650543800644_0.8550964813978275"},"_hasShrinkwrap":false},"4.0.0-dev.baa1b2f":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.baa1b2f","description":"A mock ens implementation for testing.","repository":"git@github.com:EthWorks/Waffle.git","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.baa1b2f","_integrity":"sha512-avM2chw8fWZwFoGEiR2ehgpYbBvvNDpdni1vjgAcfQ4Xpqe7lbEJR1LespTwSgFR1uuKmpE3Ynw89LC3sReD2w==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.baa1b2f.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.baa1b2f.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-avM2chw8fWZwFoGEiR2ehgpYbBvvNDpdni1vjgAcfQ4Xpqe7lbEJR1LespTwSgFR1uuKmpE3Ynw89LC3sReD2w==","shasum":"0ab48a3ef60e33c20123960a646294a2fe2d10d9","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.baa1b2f.tgz","fileCount":28,"unpackedSize":38392,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDBOA7HQKjQIB5ALbIIjpppxDSll5CQUePMYuz2NQFzHQIhALqZjEzev60KAGo1CfrN1JtBM7y7C6BglgCZAO8XW4dh"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiYVKaACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqgnQ/8CghHtLumJrSg7F9/YcoaK68cLsyLMHK2u8YaXW+GjNany3vj\r\noqZVVI/ml02tu0cZZt7XVQv1mua8LU05RAACNRbK5hAHZg/lIiwjNzxoPUzW\r\nYdXRSQkY7QJEVqu4sphum3FwAbS06PtC6p5PGmlE2LOtqfsUmypy+viu+BM1\r\n4l/HJE40Soa1P+2Dnkxj869r7kGJ8Y4BCK4GOLFlj3iMEsCH6mFBWxCiFGwt\r\nB2+u9r1UCCG6/0tfX/5pHSgm+1xHHDV/0G1Mg131gZb6XOjVjipfY43JUyv4\r\nzg7wxsUNaWR9gM+2CgdQFSPjnmSL1HKUdPOmlpRiHu85zCwXQ1WUS6r2dVXZ\r\nvst1CamRtsGf2MntFGsQq6NFB3SZuiStuQ80kNvdRBvf9np8vShffDSxPiZY\r\n93T7Toj4rg3IItNuc64SobEpWP7ACmmBklfn2lgpxosnpKyApy/q5wcmZb4M\r\n6f9+/Gotw6KazShv4Leqw94g3VNN55hFL+Pe2sNsMWWdLcH/O8ZDkzkb9vmB\r\n7oOR5x8ybmO+pApISNRO56xuOGAaFhS9ZRpeXYyzH5kaglvqAK0A3rOyJ3kw\r\nyaqe88l2hDElfAIN7lG99gPgfpMsFhgBQjeewNfbYgRdsBoKpqcLTSyVLSCR\r\nK2tHROSxNtiPiLKm0OocVub7OvG42cQFVnI=\r\n=YD5i\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.baa1b2f_1650545306456_0.9407621466215119"},"_hasShrinkwrap":false},"4.0.0-dev.8f72c9c":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.8f72c9c","description":"A mock ens implementation for testing.","repository":"git@github.com:EthWorks/Waffle.git","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.8f72c9c","_integrity":"sha512-r6Unnzc76Qw2Xcc+Ik87xd5BMgbJTYy5iHxNHPG+aiZ4RwwxbXrnCz+tXnj22vtaOjxqNIcJ6ct9vH3uZK2uBg==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.8f72c9c.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.8f72c9c.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-r6Unnzc76Qw2Xcc+Ik87xd5BMgbJTYy5iHxNHPG+aiZ4RwwxbXrnCz+tXnj22vtaOjxqNIcJ6ct9vH3uZK2uBg==","shasum":"c240e25b33fd206a9de1587a85dd7d491337bc57","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.8f72c9c.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICFDYZx/KhngAjg1nZmAaFfXPOOiL0/VjQ1EWJkOlg/mAiEAnx/t/ufPITb9bkbcQgfa9pUvSnmhbp4hT+zFmug1ebY="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiYV/8ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpuQw/+PpLoYGtv6G1Wu7UbQBWxhfxU+wpCL/MwgWzWRBfI8XPvkwAH\r\nBriEFFlJTRWvfkJ+9bHNTXNd+0b2ZCEadk8H6XVZI8IU1GMHobqdg67tiWm8\r\nMah6uFGvBahQAPx6bwDf5NLCLfxrJVlWN7ZzNohtCjikTjkZFr2lAUhZoGUu\r\ngqIey/d4sDywfLlpF1K0DNkJ8iaLRj8ldBYpL49kvV6FbjWdTjik9ngPJ3oR\r\nhIoH/abx591UFxn8Ay7hjscwn7bgjEGIFhmjZp0msTLmbhMLsFNdcAWHPltS\r\nmDgVij8FGmxJaBE0SBmzZoAf8im5uwHEEdouWz7NydRkAdzxT6JT4zdRiE59\r\nH2mx5pcFqffOvyjychDwTNNDIbYggJYwiOxwXOuMWcaI4B6tygTiCr8T5RU4\r\nGLnk18DOSSsSo9pQ0GkgTH/qwZ2kUCq2T/loR/PuYl5vLL/B6A0DT3OnFo5+\r\nGa5UomOk3PkmbNXRyf5b0fxXlfnyU0QTkD+cxzRBzEM7OG33Ln4UOS4y0A4Y\r\nJnRt/SvRFeXbsC8DC5rppraGjuxF4JYW7L/Swffxh25PvVpoOMIl4vTfMgOf\r\nZxutSnBS1OocBKogUDr/dQugBh4Gons13T1Naz5XYxXuY3J+soLLIkz/r8Er\r\nIxBdVp7n0htJWgSEa3RuxdNaRFtH5EgH4J0=\r\n=+fWI\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.8f72c9c_1650548731893_0.6076383793325242"},"_hasShrinkwrap":false},"4.0.0-alpha.21":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.21","description":"A mock ens implementation for testing.","repository":"git@github.com:EthWorks/Waffle.git","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-alpha.21","_integrity":"sha512-DHmiyI+2zwwsOjzbCdR1l45tP+FhB5QC0EVNNR+fRDg29NVObKvynfM9FFVAUx6eOnR6cwVUpUuB0KKVPdrgUg==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-alpha.21.tgz","_from":"file:ethereum-waffle-ens-4.0.0-alpha.21.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-DHmiyI+2zwwsOjzbCdR1l45tP+FhB5QC0EVNNR+fRDg29NVObKvynfM9FFVAUx6eOnR6cwVUpUuB0KKVPdrgUg==","shasum":"a89713d9f56e75612148125fe7f67a74d30b7eaf","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.21.tgz","fileCount":20,"unpackedSize":30492,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIB951m0vfM+J5mTRS5L9bU+QWlBhlxVrKcKU7ka4ot+nAiBla/8n2UC2EXPMs0bKcMuUbaUoruWRdn7jR2vONDrALg=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiYWLXACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrcGQ//QSVxjQ3t9R9EhH9SzTqTU5N0gapsH7nq2zjxB4txf8hKiAtd\r\neGtVUmBV9aVaYJ1V413UjnCTZUZ/IToxWW9MPEATWz5QliDEy39YQtx6Bcxn\r\nUKMRbNFKfSOObe71UbhZRBG4dd6kymhnELpE9GlMZy4Q0HWhd07M+AECy2dG\r\nR2iI/YxH4cb0a5D/ieHU/X9oVQY/+Gn755aA7iNJy+x68qH2bd+taOm2XHSv\r\n7aA7vkkJjGeu2AWrFNhodLYttS6AzxvVqdisvt7E3qWMEmhukT97fc2bjZxo\r\nNK6dvyz3EutkJuoLKa8dSszM0AeAF23B2OSRsrmtk1bNIk8RRx+o1WyBinl0\r\nAPwqF6RJPYmhDiUQhlG7EkjjNhkK4HekIXrZHfYQi0KrpUgv85bBDUswIF2N\r\n33hYO/HKQQVX073sQ4ybIe+UFFYAVxjqvpoXY2S6eoKDdpJhCN0/iN4AKe+f\r\nFOp8YF6N17PbO/RiVZIQvI4FozUMVns8tAzHepxp2c0skfO81JhdANEYGi6o\r\nUTAFyvctgTvvF3qzXWv9CggZQuJh8YJqaD0QorGBpyOq0uzZqfYoKwPO0Ffq\r\nf90fRTjfgxAsP4oiUTA47sUyyOYfjs7Wm8f6mtCUpMgXpKvrBrZFGZGNNDx3\r\nsZ+QdqCKLgsxP2bTC5gIW79t/ZPzK8a93G0=\r\n=3jlJ\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.21_1650549463056_0.7738400123618818"},"_hasShrinkwrap":false},"4.0.0-dev.51e05d8":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.51e05d8","description":"A mock ens implementation for testing.","repository":"git@github.com:EthWorks/Waffle.git","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.51e05d8","_integrity":"sha512-wyrlQLn9lOc+IyUBhtDe6d7wZ7Bifj2tDFfVtJIHi4rQ1wItmIsvFTi/4UlS2EgKm0pLgiChqPlNNXr691luRw==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.51e05d8.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.51e05d8.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-wyrlQLn9lOc+IyUBhtDe6d7wZ7Bifj2tDFfVtJIHi4rQ1wItmIsvFTi/4UlS2EgKm0pLgiChqPlNNXr691luRw==","shasum":"92b6eb651607efe597976a189eab645d8b137ece","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.51e05d8.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCbCE1dy+5jFc2fs29mYlF5+4eUBPuJCMaFEFBDuLSGmgIgB4snMmL/KaiNkbGDgx48VGintVxgC8wjVefy6fZRk28="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiYWNmACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrVMA//TkcDInvFBtLhOekSocw9a0KG+/QES9gdvnCjMoLK41SzbYB4\r\ndRuau1+NX3xvLHnDbaQUSZeai3B5M0wxK+p7ZDYP4QuGzjPFdtxSpOWuFgAQ\r\nMwXO6Sdk3W2bMTppn7Ro9M9tjphj1x2Njg0CERBCmhLHudClUlMFcF2VHknQ\r\nj07BQcSEBuVDnUIalMYajV7ZAuWtM87hwtM8/9Y1E7vqXI5OZxSl3KZrJe37\r\n933s6UoQJpiK9icgtoJTG0xQCJdd+RctWJn/eBmWPhOeExjhotI5uLpsg7RH\r\n5NBPKJxFsrzW2pgvtRodlQRJ9t1x3k0HVlksMIPQdv49y7ynliLzJGH/QI23\r\nylAg/HP9Mj4U7NmjgKVkKy2/HhFRopPJrlgpj89JdnjphBzrVE+noA4R7uUe\r\n25Z3vm3b0xDUXwaV4OVAYVtv6E8zGaQ5qDT28gEGe2Zr0EzNbCPR9HJb4Kk8\r\nkDlgiCpy4coyB268U2Vcp8RKcz7W+jkEhtObe/8KVOBmLMheHPOyTFiXTSJC\r\n5pnjeFsv+vzG1+DPGzTVQIoZfJXL1OJ8CTA3pz5X9Jzr9hB2ORUWCgz+nl3/\r\nY0P+MvOoC15uooI4DHlgmDjMUhDbYrcpP155w3FcBDmP5JDTsNMYp1hHKsqi\r\n4u5D1UlpZhORzfzapJUQQeBxQP97QTs2P4M=\r\n=FIu4\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.51e05d8_1650549606291_0.9224103175369036"},"_hasShrinkwrap":false},"4.0.0-dev.498bffb":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.498bffb","description":"A mock ens implementation for testing.","repository":"git@github.com:EthWorks/Waffle.git","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.498bffb","_integrity":"sha512-xIfTxExWrwQs20YPwRoNFviDlp9QjfiQ8NWIdcF6kYU9053HLaj7ESULxvhEcdexKsSAixhZ30BXUHrpQgV34g==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.498bffb.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.498bffb.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-xIfTxExWrwQs20YPwRoNFviDlp9QjfiQ8NWIdcF6kYU9053HLaj7ESULxvhEcdexKsSAixhZ30BXUHrpQgV34g==","shasum":"1609cb350d1a3e32963d0ae1334a8fe02231b8cd","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.498bffb.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICmgNT+sYWDbxNHFXpJXSDFv9MZT6Ba5ks7PGMzBxU6tAiAFqN8BjvJWs7be71i/tUL/zkZWwYYteiRySWPJ2C1nKQ=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiaVOPACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpmDA//ZKN/p0A5x9BSeUwngX49qFnD6GavGkuL3mP3dkP5neW6m/ql\r\nuISw9EI2cTux62JxKBy9wN1OqMMlStUESsKCs87zBNnYVTonGk/NnHHslivr\r\nSoe91gGbHT+Mfu9WJsqeHZ5QcqcnSKpgSMFcBA+OeoZLEGeEYdNn1CMk+STX\r\n0O3KOF7WRtEIXRsGM/CT97KuCFw1+7c8B0dETsxfGmVJR4SK4BhBqgWWFkoa\r\n1ojHyXDvyeHsiQYBFSZiLhhsxoUfXuDw1BrYhn9jpkNjBqdMhFv/pRGNNuJ5\r\nikiCG1xwYeHfEwdepr9I3FAmsmqz4c+gvW7IKugI8UeclrPovM3OJKYYf6z7\r\nA1QWVglnfalIgZqBSTG60DWh2IvuYEW8sR9aCPYn+jjmCAM/HK7pI2B4BXn5\r\nkjS7Igt1NfRHz8vWPFsKbdEFYNqz1a7AjOMm8Sc0F6HONlNK6VAwUqujDNXQ\r\nKK0aBmv5n1DsKW7Yjk4L6Yacoq3iyAqVddEkJMcbBkWyrxCsmzuYo+7gAki0\r\nalHDmJlHCSIouRjgiL97EVi3lNbx3TvK0i4N8VNytAbXMJElgBXqxBvuyhvn\r\nR7P9fNyalJ8vINcYwgYLlAyBOR8IF3Rz8T0j1OEFKNEv7JjMAfW5m+YX14vt\r\nvMhuZ0DiK+feaFQO6cUeZWyPyieZ61tg7ZA=\r\n=f6Rj\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.498bffb_1651069839751_0.7632521132820174"},"_hasShrinkwrap":false},"4.0.0-dev.de3905f":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.de3905f","description":"A mock ens implementation for testing.","repository":"git@github.com:EthWorks/Waffle.git","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.de3905f","_integrity":"sha512-BXUNtfcXKEk15yczPDDjHzfiISV6Ey69foH4CTb6LwZwwK/TXr4nYZ023ga+mS+ukdThN/MiwbBuKKkj0rAErw==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.de3905f.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.de3905f.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-BXUNtfcXKEk15yczPDDjHzfiISV6Ey69foH4CTb6LwZwwK/TXr4nYZ023ga+mS+ukdThN/MiwbBuKKkj0rAErw==","shasum":"0208221a23fe10682f053ce00431787af99c931f","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.de3905f.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD9a2DnHbTeflKhptW1FklePxCGLKcWcgsDV5t4W9rKGgIgTW4saSUzJlGTWv9vA0NJrtqyq+w+Tz5YVZrxOmts0e0="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiaVZqACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpE4A/9EPptuddEioO/5JB2pC5VwttgQ2ged++VNCzyijbmZbnFgm2u\r\n2s7MCugzgc4y0RiaHoXNVjcSRc1k0e6tQ+JnBYwOPdHpgrosP6LikSLoCLrh\r\nKLEDMNFAy7WTTIHnRSsYJfdXUuHJQiZJOJ18Hr14/HoA/eogTjs6lx6kQg7p\r\ngLKX9CxmJAsWsZTsfidNDHkYvhwWuAiM0t+5Du1On+DnIDHSLSDjx6AMDep4\r\npWuxoD0XsRhsWHghJuiCQU/LjaRF35t8JVkBhOEhuqpl2h2sxyxZGFVeGqTL\r\niI97EGeynFkYoT2XA4ULuIyLolM9+sY2F3hnGQR12VEqBGAhwMXjNjuGYa5f\r\n0V6WixKIkGyRDGemgajsEoHe7PwW4AKtUbasrQdKnJClMiRl/wCacex3m2pF\r\nwgNQ8QOD9CmnkVFGAkK2M9LWozYFR2WmX7iC9Ao9BvHChohuRAs+i/QS3Yld\r\n9uOmQnAAho8XiCWti01ynINOKN2siTtjy01gRJxs+b1mGNiIcjaL9HL9YliA\r\nI3SqxK9spGM4Rt1VWU0hCVnXf6UPZDc9pb1kR219J+Fu53k/MG4Og3N8g4NE\r\neAD0hnZvnS+XbTii43QCqoZmoBapU2b2dr7RBwDI3/dVp/q85osJUv1MJIXu\r\nqzcHO149/euKWOGYfzW6yMA/b0Kg9CSKPic=\r\n=IXFt\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.de3905f_1651070570840_0.03269260882567293"},"_hasShrinkwrap":false},"4.0.0-dev.0e1e2e5":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.0e1e2e5","description":"A mock ens implementation for testing.","repository":"git@github.com:EthWorks/Waffle.git","author":"Marek Kirejczyk <account@ethworks.io> (http://ethworks.io)","private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.0e1e2e5","_integrity":"sha512-77URMx9ccIZDQQVfLWjHhsUsQMC34PTqDO9L0YGP3TRH651z7SLDl6+Tnfm/NIcLd+WlccPtRSnzF0+sPHZlCQ==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.0e1e2e5.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.0e1e2e5.tgz","_nodeVersion":"16.14.2","_npmVersion":"8.5.0","dist":{"integrity":"sha512-77URMx9ccIZDQQVfLWjHhsUsQMC34PTqDO9L0YGP3TRH651z7SLDl6+Tnfm/NIcLd+WlccPtRSnzF0+sPHZlCQ==","shasum":"f60a9a2f23a43dd429c1c93f864e8038dc7688cc","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.0e1e2e5.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCw/2dnGDn87W91ygccqlU16uDBdBtedP6jBxMT+MgiVwIgM1xqWZfF0IQdmCCFnGCM3Yk1K5LXhxS9rYm+G5MaM/w="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiclI3ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpRTA/9EsY0eEtMcCpml99j9N4HeaLS7zElt9Z75LoSOL+gm2IHuzOe\r\nzoBi1kCT0w4mRnGiXJIxG6SC7zr0Dz8HQCMKgNGAixyrB+6CrMITeZYgvh82\r\nf+ahWYEqCKauBwlMfvfKKnXvYKhIwMPD3fP0xSWuOFmmO7V+fpG4yQa/Bt5F\r\nbLAkkc24UOl7FtpvyjO6ZxPBlmVmTN7l/ukGyunt58hi0JgQIPMMXXqyDE+v\r\n/BTfhWzM8RHyPyrxEaRGy5zqakyAZaPTh8/qimYRLmxLTmJNImS5K/Y3xmnK\r\n/KWMDWzAuzrXU4cwy3GjxxyT5CtNJKfoZmkDDQPBQuQxvRtMU5pyNdZDtfxl\r\na9suBhWr93UxNwHmeBDS2LfuTuLMfJrV+qoHvtLlPifbNsPibg4UI9ztCHbD\r\n2Y06bdckAy1AfTh5EG5cZSwoo3opZ43+WFTBMtVsQ+Ge+fBrlN+xRJ28zX60\r\nIJhL/2+YtwdeNeGgUXLRr+2ByVP2AAwp7idQC47Dqyg0UfJx+QXB0uIcYprH\r\na2USZr011Trc+sMyJDuFHDSC0yHEhYPXUe/kgILbDm3Vk9jBCEkKRfy1JEig\r\nyjcOf2CHKssCIgjXxfQmezECvQIHcs/7lUMsEOLPpsafYdOt6pdOmReppCpe\r\nGNCGDpSudpWCIA1/0HP8QLdN0UYgl8uSspc=\r\n=JUwn\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.0e1e2e5_1651659319642_0.9615014307193539"},"_hasShrinkwrap":false},"4.0.0-dev.b7bb3ba":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.b7bb3ba","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.b7bb3ba","_integrity":"sha512-VolY4pIJdlOQvjjqfnN4cM1DA/8cxM3fCGR1R/TlRKmYCRXUsW6RS+DdT2fWdDL+zb3a+WOSq5rVqsAx0/vN4g==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.b7bb3ba.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.b7bb3ba.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-VolY4pIJdlOQvjjqfnN4cM1DA/8cxM3fCGR1R/TlRKmYCRXUsW6RS+DdT2fWdDL+zb3a+WOSq5rVqsAx0/vN4g==","shasum":"7fd3acf3f75e1cf7f3e7f04e6dc760e7f7602463","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.b7bb3ba.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCsU/D6tIy4TCqIXwHiTwCBJrzQcRqpjIBDR+DBf2hKUQIhALqoAzQszgCLwYvKhvoo/+x+FBGfIhjrD3qMeoabOdzw"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJic7RuACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmro1Q/5ARJHsL7OlXqsWQ7Be1QIwi0xYBZKnAGR3BKm2sQUM7iLB6JC\r\nB0R+d1Bn6lw4MLQfMFQV9z0IajRi2kwHanMbMy0+Grf7KuJyyQ3w2phybdob\r\nfEibSgnPQqoyHDG4B3QuMa2+XnrvQzqGNWcgHL9UgFGTwcqd0jBrUF+r0eTa\r\nm6BDhh97cLyOP/ngL0PgK/Io9pSw99dD5PfkIZYbJOXGT2BzQyszA3L1YC7T\r\nG0Bb1S1AoDUsqvRccv8RQxfkpMEQaqJw0LfQqguXtNdnFrmg+/VRT0ZZu5T4\r\nnQBnP0nF8xOUzVEJ8vid2JrBKLlDmKfIacjAGIi1jg9qTgapl3xVeY7t9ug9\r\niQwB3F3uNVpTyDZE0JZFKzgEEEeib707AnBgUy84XNTIFFPv9B3xAsuzLbHR\r\nA33CDdBG+iV9YcROIYIyFgYGynS5e8NjGA3URyG+JoOptElWAT+ouPV1p+Yt\r\nz65pfye+gaQarCx/D2hK/EHJzVw4Oak7jj1acz/Uyegd+YJGZ5++yduS74Xt\r\nZ/5/92Me145bbdv9AHoW57HfKDH795AeHxZYW+0jDJBCJyCJ7TaJC/631kp8\r\nLRN949FrddsyzFF+lOGR56gKgTHYtU0FqQJ7hDDtxjDAczrpAoZCgFEQcYRc\r\nUu5NxdJMGbTKBWeVi6zJZiJox/5cgZzMtNs=\r\n=EAZE\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.b7bb3ba_1651749998600_0.22568199210593054"},"_hasShrinkwrap":false},"4.0.0-dev.c694a2a":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.c694a2a","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.c694a2a","_integrity":"sha512-eQN1Thlbl0LDv7AiNkocrfeEBOkCkSs4TQx/8sLUEbKoMl/QTNLD2+nHGg/3ia1FCBo/kr3Mari9jQ2kWdWd4A==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.c694a2a.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.c694a2a.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-eQN1Thlbl0LDv7AiNkocrfeEBOkCkSs4TQx/8sLUEbKoMl/QTNLD2+nHGg/3ia1FCBo/kr3Mari9jQ2kWdWd4A==","shasum":"6b42b0f3996a74dfdeaa312ac2365a2640fd7103","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.c694a2a.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHLJOJVeL+7rc/uFwAlRitVC+udCCoxiciYo7EgzD+TJAiEAr3h58NU9DEjyl0h00B4Pdd2IIC3WEWCD4y+E3QIZeis="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJidOOJACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqJbA//TmEK+f2OF+Q4CNJi2BBTbrGu8okeyEUDDmgMVETLT7/v+DCK\r\nJlcm2yNZufeT4eA2bBa2Y88qBJ/m9kCcQlnPDvh96drSTFHFJgJH73Tgz9YV\r\nwslBXgYqEVadhKgTotlQ/oDLT3ANTQc6o5ZHCfBVDViz/fEyooqYThZLQwJ5\r\nyRd7k0+xjHML6Nn/W4URxdrMIGkOVdBKemEsoQCfx0N7HCjbIcGlCxXw2f9Z\r\n64oc0+C/Ognup4MwaBMA5gv5hj1wnDFdKqvUANU5hosIPtCf7tPNML75v0TD\r\nUGwK5mPZtCFbSws10eRytmBkEqUpIngRjOCW5/v37fD9tCuAUAQdHcd2ncV+\r\n0ty8T/OIXBPWD5hn5rZA+AobTiEGUiDy+NTtIhD89XHTGSxxz6FejgzRfCYU\r\nk7L8qYWjWhSf2OlQMKf2Fzq+OHfEfXDrAC6+/ZWui2xSxThaYx7cMFCVH8jT\r\nrA8UovDy2c0wB5jhAK+Z5p/C+9y7vJaLziLjGuUy0+iDUWz5YMwOOibTCq+H\r\nnwXGd0tJx0kPrgD9Yz8tSBx7ymhkBj4y6CopNMVuhCpxEDk95fHwp9I68z+o\r\nAMvyRkEioLIsLLDC7mzntf5gMIGFNxD08iNepKEqM6OrWXHwbadJUJuPbM/D\r\nGIfXsKY3uzshS/s3/dlZ2nXU+23vwXAwrkk=\r\n=uFp7\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.c694a2a_1651827593662_0.7904227412515619"},"_hasShrinkwrap":false},"4.0.0-dev.ba7033f":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.ba7033f","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.ba7033f","_integrity":"sha512-4ajoKr4ZNVzQL68uWtj2WdjhDSeFNU59WdP5sJJMTE7kJIPWYPdc4wUX+NIrJXdZ/FSEZ5xyAUFaJVT4AI+EvA==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.ba7033f.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.ba7033f.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-4ajoKr4ZNVzQL68uWtj2WdjhDSeFNU59WdP5sJJMTE7kJIPWYPdc4wUX+NIrJXdZ/FSEZ5xyAUFaJVT4AI+EvA==","shasum":"71809e70d4d517abaf290001ca2f4557e798da3c","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.ba7033f.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCIDI12RBM0Gtia1WSOP6VSYBI+w+dM0SgFhyTG2uRl7gIhAJfUoA7bDy88+Tz5jsaKpeoy7NgGxpdgZQEOeqi/uvWa"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJidOgZACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoTkBAAhejkq/FXJRuP7jUKCaEWbVVzuTvsfxYSPHuuCHScXgbITJqv\r\n0ng8NYtwZAtMC89tyukInWdhZIzBcc/eQAL7rpSjxaZ14xpTcnLD6DdZfGI0\r\ni6dsyHJN9oD4506tk31Q0aX1bwWlAKqbTz3ZrjkLr3cjfT9vCiTPpy/EEeYZ\r\nc2MijFPYXyT9g22uEjz95wJ+3pNxISGcP8PS3sJxi4ISDK4qmLPm6ClLqc5Z\r\nHcrZ1/Za5k179DUGCRUSPNJjtoz3Td5/8y0DC9MGgI/H747YMX/SF0uUpNZO\r\nrrboBay8Qxt6Oadt33NGJ9jKRMz5YDuuhk685PWkkDlmz0yqYHYPsrg99MlN\r\nbGilthLf3iQf/8Ag2DsuSeyjOnzGq1vJJyBb7WSwhQ9FcEa6BwMy+xAS/Bmo\r\n0YaTPNHLg5/F+q1v32+GMzSNMeRJCX47aFessA4N2T5KOqzfZHE+5eqkjXxT\r\n/G4tprd6B1EO8Eo8TyCz2VQSTfYEH0Zd4YUhr1sG6T65OWSjSiFDFFcYPgBi\r\nDwAZ9okChvnixa8A/4wXlUoEn6GhxLMPClM6U1g3oJwQo8VD146Gkfm+Brfw\r\nYip9R8vyYSZVNQ7O6TDFGoqh8yzb/tB4us9Nre2mE88cQFHVMRfKVTMHWiQM\r\nIwxdGmWlZt3yCU44C4tng0n3zPIfTF3NRFg=\r\n=+SfD\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.ba7033f_1651828760988_0.7990163316144943"},"_hasShrinkwrap":false},"4.0.0-dev.bc0a5b5":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.bc0a5b5","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.bc0a5b5","_integrity":"sha512-BenHF236WCgMIF7O9J84MOzXFHFobcD0mru64C/ukuXgsmmUIzuDsIJoq3yeGFn6yCukIRstL6FI9ep8crbtqw==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.bc0a5b5.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.bc0a5b5.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-BenHF236WCgMIF7O9J84MOzXFHFobcD0mru64C/ukuXgsmmUIzuDsIJoq3yeGFn6yCukIRstL6FI9ep8crbtqw==","shasum":"af921496c1407ac732b467ae7cd0ab23404515e8","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.bc0a5b5.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD/lfwpr0iO8jDoaAk7JiT4Tre4HrgALdFicJY3YjOjxgIgeW/unJikYbdUmdAhpCueFhE+uBc65yjETgGyPL+fDFc="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJidRYXACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoxkA//SCT/71jmNNbK4NMixgYJonzJUpMgUkJz0E2RObiP1UQiHeMo\r\npHkHjzecA2lXAV/GdsczfKeHUN9IberUE+nakEofWvv7uzydJAXhcmzgclD5\r\nqVSLart067Nl7sutiA4/eo0afA1+6hrpGupyWdcuOvkwt5mJHSyn/acRJFU5\r\n7FC3h00KjeLg79PK2ZdNuVi0X2db8mjNcRKYEfrSsFXzCMH6d80mSOTGvaS/\r\nnBGpYpzckB2pwwGUDQvpG0eEIcO37kUUrz+QJFxKZEK/W07vI+dJZUv4YCNZ\r\nh1hpKtDXhknfIzQh6TUEsU/1DWAKPCjgOwOAvRVs8zTbUKezfrmuAjmmQzdB\r\nbX7dvJjmpeIem59kaFprGtk/SY7DlbytiOYL3qs0VROYJWfC2XLiLWayMoZj\r\nGwy2TeF3AB0mAe781QvhcWmLkJU1NIzNK2uYO5dAsB+ef8mHXRrIWiOj/d80\r\nNQL/RwkWbqNkMHMsNyYiIhq4U2KgkNawbOXZNOIUvZTUx+aBlhT/2+x6M6vZ\r\nVmLaZ4//ZWANCMWUqZ9+1EY4drabk93PPlnnz9uRitKQwM/6mjP7lSVyE2cE\r\nSnyTo7VahfyNKYe2Qbg/yCQQ1D2etVcUqg/adKPbIEfT4g7Ni8BRViTOT7kf\r\ncptpbY9P6U5mx6PyDc6CYUinsEGVguedrgs=\r\n=XSVX\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.bc0a5b5_1651840535174_0.44846415172818244"},"_hasShrinkwrap":false},"4.0.0-dev.900b71d":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.900b71d","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.900b71d","_integrity":"sha512-IMpyjEmysu0b/Sd5o1ZnAqTVuz1lOx0c7NABKOuaxvTcNIxCZVqflOm1DWbRbTNnE5SId6KrqWj2b/n77cjpNA==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.900b71d.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.900b71d.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-IMpyjEmysu0b/Sd5o1ZnAqTVuz1lOx0c7NABKOuaxvTcNIxCZVqflOm1DWbRbTNnE5SId6KrqWj2b/n77cjpNA==","shasum":"9ae2dd7462be97be7d795e25fb72812302ad2c29","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.900b71d.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCID5jbzv4Vz+CwNr+D07y+jHZC2o0mGOB7Xoyy0q6wZ2OAiBdynDG+k1Jwt4pOk+sEvhakVLJeCc3pvuVUjJPBydT3A=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJidSu3ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpRdA/+NlA4Bzioexkednhj9KPCIrh2842iQCNOAOzUhfWD5Dj+5Mgu\r\n0gFCboQlBuoZbhXaVos8ExqP6X2u5tpFnc8EOj7weipFgvPN/HDjJ8k7hBkv\r\nO6WN8981f1ey19SQSZ6mUYW8OET76wgb1eyFvQlsjTyIeWv85GWKU7/fMYZm\r\n3uBl3f0NfcdpHvIT+2V0/TcKXi5sxTyvsH4Joadx0mk4KY6eq8bcajXP21PL\r\nybp4UMTWookF9TEcldnjrUPK/OfPVlTTktqVHvswKnuGym3aKHFPzuZuFi6y\r\nWuRQ3kH7vtne+sWSt79VfljoJ4B6hITyjhWws4mjdKfnV4Vk+M9HTsXYNroR\r\nAnlgwosrg+lOQsP0vEJtG/JlNTbWt65jjhCWsdQ74llyCSsnw8Lj6C4EqUPV\r\niZ/dqBAzef/z89KwgoqrznZ3OSDGL0Tcj3wdthsSmJVtDquP5yVWNRqkqFc7\r\nl2IagOLB6dHtY/LZeCK0EryIWmR2g06j/NpgJ/u8WIp4WH9rBqIFTDJyJ8pb\r\n+HxF7TNJnFWffsIUay+grLuYeo0AVzLhbFZR36SyhELAwqfAYu2sast6L0/W\r\nDHHUXKbDYCvvVI4a0X9GGzzWINi0ztlb+VppxR8GobXxowOeVynDozazGc/C\r\nEAvcZsfulA3jjDCOcflF8aVu64GHf5ZjnPw=\r\n=oQUS\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.900b71d_1651846071655_0.16992120419492784"},"_hasShrinkwrap":false},"4.0.0-dev.ba8cde5":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.ba8cde5","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.ba8cde5","_integrity":"sha512-fVAYllqA7MFlb/WCPZZ/2lWbvTL3ePTV7ZMJyo74HRgu84m6fjwKkEqEyaw6aG6pxpDbL60WyWillpVmTqyb1w==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.ba8cde5.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.ba8cde5.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-fVAYllqA7MFlb/WCPZZ/2lWbvTL3ePTV7ZMJyo74HRgu84m6fjwKkEqEyaw6aG6pxpDbL60WyWillpVmTqyb1w==","shasum":"558c46570867a0c7249d13ba8d9c2cc05fea5e6d","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.ba8cde5.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICITe/Ye2amfBdChdf7mHLFOA1dJ94xAuShixClPTS1ZAiEA9fl8xr+gdaP3s1dFxlNwxMLTgj3JmQKhiGYAbbQfq9Q="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJifh9PACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq8qRAAouMlmOay+r0Ap6DL5yf9H5piaYF3x6RRVHyEfQloYzHHk74W\r\nKTvNghVm2O3tH1JNMHBg4Bm/ogpNIefi/7qt1iZ1em9n+BE9cNa686OLngDn\r\nIwqs6x4LvQyTE+th5nbgwP0z+IBlzc/Pf7qzgkQxQwtxfmxsxW7ijO3EtOY4\r\nIgRr9a3d7gb/nr1wgwJboFsQhAf98NGw/rosw+MeOmsUKc0fi+1TPiPGfR6C\r\nBNduCM3MGXyngE7ggMZLlXIk/o+rcwUdAiNeMGcNacK0F0r+H9naetdFeuZV\r\nZKLuaZDv8kQ8quHn3OZ3sn6EE45jOvrly7XpDXLBIaDpseZM4F/66l5d1gA9\r\nibD8D1JFBvAnWBSxlqMGqrgYLHMjw7Af9i/yJFyFBjoxowx/Em0lNnw/MA8W\r\nyuoAcpAKpc4inQUMICwjL6SihYuB0U6D0Mc8SEjGHm5LeBVWeshlndR42av9\r\nyxxzZmKAyFdy6onSvZtXBG6x68elUYbD7v3yOSy7b/HBytHKo3D71205qxNF\r\no2ttpyx9kzX2eYdhifLkHCHoHVMEhhrx1VEQRx+nqfpK4/RzLNwKq6FzdZ4v\r\nZ3G1i9Gg39JykvVn/TUbIX22zCVCuUL/6HyMt54Tkw8lpc+JpNiTE1ZxZCm1\r\nIc9Gpam22pRpMMvfiTxmE+ilGXoRVu6Nv+Y=\r\n=Lszz\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.ba8cde5_1652432719064_0.3386604312966648"},"_hasShrinkwrap":false},"4.0.0-dev.104f4a3":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.104f4a3","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.104f4a3","_integrity":"sha512-n9A4EKarveY7nnhW2Kl116s0YXlsU13kxV7UFOPoFABTpp3FaM+fMdmPTQ/Zse3A4d/BGr4MAzeYd/dJ03jljQ==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.104f4a3.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.104f4a3.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-n9A4EKarveY7nnhW2Kl116s0YXlsU13kxV7UFOPoFABTpp3FaM+fMdmPTQ/Zse3A4d/BGr4MAzeYd/dJ03jljQ==","shasum":"b9c769f5b1a11fe43da3a21ed916b902153d27f5","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.104f4a3.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDL24YGiffxCkmKiSNhZy5SdPgui8cx9uOAYUBXj3RibQIhAPOR6Y4ZoPXAJDBFWV8zTIL3AvNvu+ZYLiuANEKT1Vs5"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJignjZACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrXtg/+KoFR0QpMj1GBNcvtu04oXD9RIaY/m5IoPzph3AMbPlYE0Ef0\r\nIhu4Oh6JPCeoMfmiyU7EgzalTbeXTlGHxUGC3oS68qv5btc0MoxYIEC3cMuq\r\nil1I83KBrvmFwZJv+q5U1DDbdWPVtqmqguZLSR7fu0m534yGah520IQw5TVp\r\nLCDXgq77YFOHRBxOEafLUMbPIw2YsEgjpgOTdvTplhQjUKoaCVSqWgoVO0RN\r\nbevbQf12h6HzNEpg01SFn3X15b1n+cdSA9RjCKdUd4bRUS2ql1XgNke5GVM7\r\ne2hvUHiN9zIWUVKyd8lNjpu+lX6MqFiHYepx4pV9LXrd01UZ0DwhSSmMLjuz\r\n9UTAznMjRWykfVle1Pq+bTWdjQJYuJ8ElHJ3q8Unng1nEArQ+QuLAbk5SJ4G\r\nKdGO208GW/J+BQ5exOibbA7mZ1fAQI407Z2WWu3eszCSTtOec5c5Fwaq7kyc\r\nocFU7RsLAjGzpyDDa5oCjabUFv1i6zE27dR3IxpkrGxLglC2UuqKryFqxjug\r\nClZ1iNViAwOnFpiJ2La7NzCiIEZAXs0vl28HQMmDtwuExWTq2oH4g8e9nCjQ\r\nniGyCflfeLcWKOVMTONR43tj5NZdbxbX05s22osI7wTouLmo8AM4XLAKttiG\r\nr3HC/TysOLcewT4z+eYnNvVaLyNk1+kbd6U=\r\n=B+Hn\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.104f4a3_1652717785699_0.7559386726346442"},"_hasShrinkwrap":false},"4.0.0-dev.e3fa452":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.e3fa452","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.e3fa452","_integrity":"sha512-3kdcNBaib4+1+FFRtmMXc8D/VqZFbdBTovYxIdGXPmfbWphAattzBubci5ni3x80B3uyiaJMCudFOB1ZXk1yzg==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.e3fa452.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.e3fa452.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-3kdcNBaib4+1+FFRtmMXc8D/VqZFbdBTovYxIdGXPmfbWphAattzBubci5ni3x80B3uyiaJMCudFOB1ZXk1yzg==","shasum":"921faf92ba6b280986200d82138da4c8180fbf59","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.e3fa452.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAVPPVBcNMW1WmNHaxh53KMD50zgvuft/AgKPVuyBxnwAiEAl2mniarK2D1bKxR/2pk0fAHVupBybMEveQBcnRFMxJ0="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJign0KACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpccA//ZFf0oJgVxtd55UGCQgPlAsuCJPAqV6DotvE3KBRH+cBKkAqy\r\nJCJOvdrn6mYGV+HNHkMZsvEtxkMPqLUpMle5ZbglNDeFGUtEcW8s9ni8ifB2\r\nil19aoO1/CyEU6ijln3E6HnV5qsApynJzCdWN+dvC8aHgxX5NelRkfjraHVz\r\ndw9KutcJpZ0j0RQ+FgfDTkWSHcbaIacWJQp8ViZYiXqTgze+DRru9wowsuPL\r\ndUfhLljcrWRH7m6i+8nGa69RlMqb/O6Iz+I06uVTdb7Yi4ahn6sBCr8KOCxX\r\nbY089fycVLhrhHYprcFXJBAM9hLgtOywOf+ndLMmXPMMPj9/vCL9z1MLY4uY\r\n9AT//e1lD/dXmemnGcJhOjXzztY7IXtCFBu+3d+7blpHFu8n5G8DUsSIK5EG\r\nY5Z/3kmYcYD8ZnsqHhc+mx/T+SDQM0LqG9UsXN0LNhP7RzSuoKVhzmhbNCGk\r\nNtsQXdYzBCBrmg5Es+Kzi5QqFX68pvT0HfugV4iis5vBm0xFr/uhDV4YZnIq\r\nGVSWx7xWH+4Blq2fAt8Vk3fbn1qSRDgTs6Ny6ZdRDfJub9++RqmvyS1z4n+Z\r\nmnY48eJbj2THZfZ+l39RhVK6pHpAID02iFX12qdUy/bxkQ/HlhpZYLdR8Tsq\r\n7lnHtpEoN8m6KWzp09uL5SvH4jNuzADfFs8=\r\n=Lb1k\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.e3fa452_1652718858151_0.13537345247113075"},"_hasShrinkwrap":false},"4.0.0-dev.9e7c3d6":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.9e7c3d6","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.9e7c3d6","_integrity":"sha512-zC2WNgJkQLUc4UFxKy9mvfAt1KtAlrYeBtpO5zNngiGavr3ODNnMJKPJLndpQlTSIEOvg2UPBi37FrrTVp4IrA==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.9e7c3d6.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.9e7c3d6.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-zC2WNgJkQLUc4UFxKy9mvfAt1KtAlrYeBtpO5zNngiGavr3ODNnMJKPJLndpQlTSIEOvg2UPBi37FrrTVp4IrA==","shasum":"189240449aa0f218afa9139edb9821b832a43018","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.9e7c3d6.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGztdldeu0D4yX70UuD7msv2lNRNGNUKw+fslC+6JgM5AiEAqOAzAaI1sOqjy7KLHXUYShnFo2Pz8BihNscGW9htujE="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJig5rjACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqR1g//UJ7iGb2leEDbyjIDEMACVjKGpyOSQubxARyipjuDBFxISaFY\r\noLxGK5l7VK5c0byjHwCgSswv+ieUPkWetWdBkwjTw1SNx4Z9GyL8zlH5aHHk\r\neaR+Z/3YBDArWvkHjuZ1e9Mj+5OKSY2HooYusrThjwJ05M80/PIgI0D9AD+/\r\nMU3YJ5wqWiW46O0VOUN9HKa4l3LD10zSJVgQkSKJ4Pl8yQFsMxLuW6jyjxld\r\nXcjlOh9T9+GSTYHkEQr6sC9AZrynipUNfmjjnTNujj466Q0iAlDLvFdOQ0te\r\nDjiXdgKmvwLIrQksJwBYAX/9NzF6OvibwJ8MtjnEiRrPcKkOLl0Kr3Ie2ov/\r\nI29RkcAQPCHACiPvtsvONIjVXSQCcEO9qsX76kPEWi5I13iIerJTNcZKqXnK\r\nvuu6lFdbKMM07czd9jP9+00K2RxgFkfB29TuOby/m6Vm9SbXY87O/JznRTM9\r\nIA6OlcgjObc3BaM4ACGZ135KRn/8Zfzc4HelKIiKKYm3FDBDY5H2U3VDTPff\r\nqUwvEKIs3aiE3ezmNS30p3Q6lAtckLJAIG6fmOKxJHrUSVuxCkDq68X7b3rB\r\n8ZhhZoyeTRwNe+TEWpmXlb0KBhmCl8Pm0nWawd5sw3HDjEVmIpYxZsaLRWNe\r\n6OojdYV2iE2UWW+jFENAgFbfkMQQT0x0Iy4=\r\n=qHlh\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.9e7c3d6_1652792035713_0.599277129272678"},"_hasShrinkwrap":false},"4.0.0-dev.d9a8ab2":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.d9a8ab2","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.d9a8ab2","_integrity":"sha512-Rz3QL/raCRUk714mex4av5K+ox/FYF73oHL34A+L5CJc/9doHzDvCmwzM0zO/41AiJjjPWrN/xbNSXxhJg8ZpA==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.d9a8ab2.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.d9a8ab2.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-Rz3QL/raCRUk714mex4av5K+ox/FYF73oHL34A+L5CJc/9doHzDvCmwzM0zO/41AiJjjPWrN/xbNSXxhJg8ZpA==","shasum":"7062bb18f6e0fc0d5f58d1a06ad3cd4febfbefa0","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.d9a8ab2.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCOxajBPhfpP4Qo/uuoft0b9iYSoV99MtX9Be33AMKJTwIgc0QGqp+XLhukF3sVRMqm+5e+fIyCG6a1xn8cibvsK1E="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJig52PACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmphxQ/9FcHpUiLAfIzxrAkNZiUFS8cdZbcSROmQoAZUzZcwK/g9HeKz\r\nDlrfkqO1FrPzTbuUHeOfKi+Mp/U5G1ejocvHUr8u3eTpwXDyhoGQpAxNbJlk\r\nVTcEdKATuSEF5HjAJPCuJGrzqKkStkDJoZYS/1WnyGTNu0JRha6nBOQ/jpuO\r\nUF5RzEG8bdZFJ1QrdfLr4gN5LoH5EaSnX9i7n2mTpsJbTqWU/L3xl0yEZcoJ\r\nsckGvtgmbL0VmWt3WH1kTnCgkkV67asaZG7F150shHtSthgUoPDQ79crCG1S\r\n03bRYW+y6E3W5e1ZpQZDvoi3SuaU0Qi2oQ+xdvQdILWdTc8glg7V7dLX9L+X\r\ndD0U+mmtgvuSkHGDckE2QhOvu40AbI8HOQL0QTXaNkQZ7Jm++dIflO03/tTn\r\n00HAbSDVbNgURLACbWh0TM2snc5SfiHSRcE+qEKvGyvS9LsChiq/j1oKQrc+\r\ntsGa/N5+i2Iu2XpjnA0QhBr7oDLlBYGTlwZOz98EyJFl/UKZbyiOjzyvP8NX\r\n4irpExwjHosjD2GudlI75AHUHJ2D+CJcl1H7zIFKCY+2+lUhUHON/7SWiT5i\r\nabixBR8npBAmQlVFCABSGY4pe2oyLCWieK+nNb2IIGd+PULO8QgrvCaowA9V\r\nwOZSAhg6gjjJ8ezYWWqgsjyu9osAf4snqMM=\r\n=eIwU\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.d9a8ab2_1652792719730_0.659333517821084"},"_hasShrinkwrap":false},"4.0.0-dev.e275a26":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.e275a26","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.e275a26","_integrity":"sha512-/LH0HUNeJQE5EfBs+190we1benb95JPdx7iDnsTxpscfg9RgWyefeuq6aFtWBxNcWoaiUlq+mERxPTaKtXHelQ==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.e275a26.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.e275a26.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-/LH0HUNeJQE5EfBs+190we1benb95JPdx7iDnsTxpscfg9RgWyefeuq6aFtWBxNcWoaiUlq+mERxPTaKtXHelQ==","shasum":"9a5a77946d8af29433ff277c08d75f52c4a2a23d","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.e275a26.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIA0tmQyMvA8AJnBnnIQ+h1Tk5+zfgZCmGTrnkgmltZRoAiEAuUOPDx7NV835/gWzbDtf7K5QAsXdefrSPvAxqpTYvAE="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJig55sACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqNhBAAjv/y5tAu+Q2Ex3J+XL8NPx0xQeufCD3tQuOX2GWpouM2NwDg\r\nw7Z6zfBkuWVqIRds5vfY8AR8jYisJZiS/gm/Wnzz9orQWaTFNUf6/082IFYp\r\nPNIV1qR5C4fOCSKfObJ1G3Gb5t9RXN7ngBVA/B2/UYJDkcI+kWbb+/YDWg8h\r\nf6mGgrPb3QM1bEcJZ5Hll4XGcq2k5fK6uBI7Qu7i13macYrXDIx8wbroYMBI\r\n7XUAkLkW1pUEIDT4seWmyBd7ni6ovVgezoGUyi1IuflxDfiKo/repUQ7f0mo\r\nhfxYNOqK0bHMClLZ+dgKVhq/GPVDA4lyYYeA5wSLTrj3iDxCILKhaZI+ZFpO\r\niZsIahxNi5z3ZEjDqOOUzG/rnSVV7eah8RdhT/JVcTj7YqKayc+DodIFcKOj\r\njsuVrugG60BVKAeP4kZy8zHOFmTGbAQgeA+ajQ4rMClmUQ0Vvq7C0b/tcme+\r\nHkufsQFRnvu6qdkzD12vT0/xOICOfIz7sz9JOI2IyjjCbAueSi3tYIlHTX8/\r\nB41lU65no/7Jos8g8s5FzSTrZLHuwBfmZH+pRM9TtfIrVJze90m27Jy2ubIW\r\n3Yu4yzBRW3M0kHqyjgN+TlaM1RatPHEAQ+4jLTvjspRKx9NvBIJVIo6he7Gk\r\n0mWaNCulo+3WxAkFMsZmsTOgKpsfPCMUkP4=\r\n=2oSl\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.e275a26_1652792940347_0.057825794848059386"},"_hasShrinkwrap":false},"4.0.0-dev.8aa0bc2":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.8aa0bc2","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.8aa0bc2","_integrity":"sha512-F06m+7Cf0ibij/+u0WBqSo5R5Ay07AHGIIEYM2uH/KUaQMqOnPEZe6vodp/Cm7aLzbPa7YdCWOtuziVVTOh2dQ==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.8aa0bc2.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.8aa0bc2.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-F06m+7Cf0ibij/+u0WBqSo5R5Ay07AHGIIEYM2uH/KUaQMqOnPEZe6vodp/Cm7aLzbPa7YdCWOtuziVVTOh2dQ==","shasum":"9cd6a88c3b2de5c2218f63a1f4670407a6cb865d","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.8aa0bc2.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDUO/zCnf76MCpMrzs2tTxHozQM8rnjvwa2qZgCtaOGrgIhAJFXjaITJA04wFXZoGhRcU/f6S9mwRat7xR+Dpqq0Usw"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJig6CCACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmovxQ//Xi0at//p6eWR7RGYNBKCrqUpD5eRlef738kIVpYzztZ+cnB4\r\nd5H3z0vT4mlImRskafw4geFvwSDD4ZNYnQ6IYnKIEV1uQqKkOp/vjr1VZ7/F\r\ndMsHJfCbo7v/n9mookpgek3Oq9E4RIkS0Tf+SoUaXzr1CF9W8I2zJQhvys3x\r\nV8eqi1fCkQfiY0Zmi35Z7jRp4qhg737MD4ry88qh88KTHDST8Y37ccwU38JQ\r\nbcUHvNK3lIpGNisO3C4C0NGdDBSumVWnmn4BAQ/ZTBOPScp7v1hgQnei3HYZ\r\nYVyWm1gTA0Qx0i8lcMfEbwU9HgTdem3KuxQQmOV1nJI2IfJ3AGpTPMcYvjU+\r\nUkM9bW5xeme6w0IUTLIbiUHY+VeO0VCD5mlZ1r2sdaP6wgqC+ecjCNJ7nISR\r\nT+J62Y8/zaqTkGL4Un5nX1klZc5G5WLuaPZPW5F9XbZVSx5W8nDKMADDivuw\r\ntGpvvOmcGq7IEVAFvvv2Gj6vW7YLUqQepIOHFTYUsdB346jr3u+iecDcQsjF\r\n9n6G2+EPR61EThgythIJ4yU5HBma6ZgChXluN5iWmYDx9mZK3Vd7w3TF9pBn\r\nrb+nGxcgTbmBDkRVlLWDpGgCyeLZm5G+McBlZ/pF6uwNYWMS/WLK8kA7bMgi\r\nhzT39yrOznsQDaIXRCkTOOmbvUTIfbjhG9Q=\r\n=1Kuc\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.8aa0bc2_1652793474226_0.31231062906767804"},"_hasShrinkwrap":false},"4.0.0-dev.219fe4f":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.219fe4f","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.219fe4f","_integrity":"sha512-LoCvrom0umFK+3Jhpav1CKnyRyxVcZ4yqTD7fKvkfJKFssip1Py0D6qdKGdQLow9EPd5DmooRp8LL6dX0GzrzQ==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.219fe4f.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.219fe4f.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-LoCvrom0umFK+3Jhpav1CKnyRyxVcZ4yqTD7fKvkfJKFssip1Py0D6qdKGdQLow9EPd5DmooRp8LL6dX0GzrzQ==","shasum":"f35afdad076448864256f44e81376794fe81c0c2","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.219fe4f.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDW9watnS/weppo4QUJxV+TYUiQo+N4JxfmrpckJbGJCAIgDds1nfuazb+AFNOdCjylo1EK5XITwnZMRdFtIKzGxN0="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJig6UYACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq/yRAAmSKIqB1aTqQSxFcsD873EERlaWlfnKXPCyRlRQUNsUu8msLt\r\nIzYuLcHp2dIed8x6u18XcH1U1HygOVJ31EC8zcY81UqNEbP7STnhWTEa3liy\r\nFcMWtMSUoygpCFBGVplLewXeWLNMP/TCZJ8M7JAvxTmr6LBANxsV5quEJ4Hf\r\nmcYaW1bdzN12Gqt5qwRRT622nbnIcOISKdh1YUE+OWUXtKp/gqOMNlfshIFn\r\n9jmkRZxivOKN4zmOxX5xshY3iFiqtPsIinsiQuBWarmlWVAlD42WA5GaZww2\r\nMU9e5Vrej9u8NXafzMh4fFIEXg8HB0x/Ot4aq1pYFn4tA36+SlNPxHZ4Z2RV\r\niRgBZNyfkIrbR1p9VbFGtVSk39b4S/Tn1mACvm4Vv0vgPiBOj0YYyUWOcsON\r\nixi4lRnEYqFACPUyZ73QgaC8QNtFgjQLRftZ/iuZF650DG+IXdxIbwYUTIY8\r\nWuqoFkKp3mAQ1nkpDe6ETgfyqg3uLzI8NKU5XPyZm0cFCN6Q3ISAQ98uwoVp\r\nTRBpyNWI4Ao1PEq7/kzPl7wKuJaQRoBLi5uNF9pvR+Z9On+bG9KctM0aNnx7\r\n6zOGo8W+zH0Ow10ZiJN5CdapZZ21Gg9NNy2cLcDKccsBxTWUoJZkwQ0tXvOx\r\nzl8HfL2p2H845E/ciC//yu3Cc2JtDxeBR+U=\r\n=JcMP\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.219fe4f_1652794648290_0.4397697646105625"},"_hasShrinkwrap":false},"4.0.0-dev.7e092e8":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.7e092e8","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.7e092e8","_integrity":"sha512-ufFQf7Y5269eRRhU4gy5DCt0GCBWzteQ9XqOhvVKuDghoqg2A0vczSs+ITuH+HPb8oDf4MKIqLq9xm6ULgcK2w==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.7e092e8.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.7e092e8.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-ufFQf7Y5269eRRhU4gy5DCt0GCBWzteQ9XqOhvVKuDghoqg2A0vczSs+ITuH+HPb8oDf4MKIqLq9xm6ULgcK2w==","shasum":"074d6184cd1543e15df9f4c250247cb1e4da8ad1","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.7e092e8.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIExZpSRLbFRBhEoKYfrIqBaT6GDhGFoOrebZKyD7/420AiEAxfvQpmsPjMhNs9ziQ9zA6yBHVlYmQ6StnOpdhn1GN0A="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJig7F+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpRqxAAkWNgGxJYe6H116vI/9wqCP6kwPji4jPBoPWZxrms3A+ieuta\r\nzfalFRR9277OmbpxNviuwzWrzPGT+8iE+x1fbGDisUQqwB8wQybFNqswmuOw\r\n/XMZQhi/cXdD32jzz2eJMXvnDs71+1zP3bZGKQKWl6tOgaZm+r1R+TY8VDml\r\noICM9hlVm+9DWAdBoxgJqbZKp6BnLFhY83XHNFpt7a2ODi7gOIMbqocmsDCz\r\nQmOK0g70UK608OdNZHdH9B7+LKCsVJftGIj7N7JTBPcuVINuaHSSauUYuN7L\r\n7uo/1AG9W9GnXQ83PuroG0on9tet1mVilk6TKt1txbCKRL2p2L48byusIqWU\r\n1I7nToWQIRRkkO7AapejAHO+nGdxXLyEN6QCyjfsTqfGyLjn/XCjod48L+41\r\n2EFu42P9owiCCBmKkpDzGrfB+avejIY9VVwrHAvTswouWCPYni0lbSTtWkcu\r\ncdCW1PGJo1TKrfkfR6Mfbp8KDj/H8yBEBomKVMGi+TMGwJwNDeL7EQ1qUURJ\r\ntApjPr7ru0kNqbmJI4JNWwYhVF6Y1tKwaqV96gAbiffT4HFsODswj7wysNn6\r\nr+Dm6rr6a/3bbIBE3iJ9M3U6ZSuh57J2mGRx8BlKsKXyC8V9ERyancmyaO/3\r\nmynF9WziAUlW4MIxEYP4JH28k3hTz0ynp4g=\r\n=fK1i\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.7e092e8_1652797822223_0.3280188031890987"},"_hasShrinkwrap":false},"4.0.0-dev.2ef3d81":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.2ef3d81","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.2ef3d81","_integrity":"sha512-0KNMWmALJ+7+4uzH3MHp4Ihfam/2cWeTJYqvWuL0GJvfoqhlQj4SCD3ESO8In+tVkOxilhMqt36Al2D0S0mTsQ==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.2ef3d81.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.2ef3d81.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-0KNMWmALJ+7+4uzH3MHp4Ihfam/2cWeTJYqvWuL0GJvfoqhlQj4SCD3ESO8In+tVkOxilhMqt36Al2D0S0mTsQ==","shasum":"ecf1a39e42ecc64c2f5fac9e556f61be21be3ae7","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.2ef3d81.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC3A1l/f4mtkVXvhFdFHeUJGbRLrUP8kokQE0pHY5Q6EwIhAL2qZ8Z1UCrX1gjM3kdqPNypOZMRIRgei7fDcZNiNj+j"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJig7TPACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmouEw//dKKJcU3FYcOfFDr5eTwzx9Y47kgTvD/Rjl5MD+Kd6Nslu3Mk\r\nbN6icyu8rSqMvxnNUtfzU+0BEuIzVt8DHrKgnnLg76/3hWqTiRYfJ9EB1Z5b\r\nNaQhpNSA1+vY+y8WqfYbBwssznLwM5Ws8/W6kERJuqFnxY2trSb+3b4c202E\r\ntS7teDasWDDlwgsf5q8dm94F+V7EWZM6IU/VUKIFjLYcjAUe+/Cb58x8S/8T\r\nrZ2zx/pnqQW6LNlS0W3HeR1W6k/NItTNOoXYZW3am5IhpLcpQAL6dJ3tT7zz\r\n8Gi0xX8NdPpkUJohu/s9+APkSuH3UtPbSoL7errYs43zVfs26mljk2SM1h26\r\ndipZUhVNWbm65ZAwl2sxCMOxdB0WDl3oJdCdSUIvvf47pVAsyAPu7+hTUEHW\r\nQ9claBPwUyEQOGM+sulyIj4NIPhDUQW04PNp27mFnlnaZ6ywp6Ii9iPtO/Sv\r\nqsmcvBcLS/1bC474OpdMGYn75If/98Cl/o+hILSV4khxcWx6E6xlwGnbe46g\r\n44beYHHsvbBR+oz4HmWHypfAezjufLGNkzh4nzbEqefwj92PcN4o9RqZvLR8\r\nheMCXzmwBOngq+oFzFt2UOjbAxSwqoEqAJ2hSvBYWC0ThS15nYRyuDAW3tGH\r\nauPzYzmTxjdVjxg/knA+GGqd4RgGA6+9jwA=\r\n=jGmT\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.2ef3d81_1652798671041_0.23405130510398697"},"_hasShrinkwrap":false},"4.0.0-dev.539c432":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.539c432","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.539c432","_integrity":"sha512-WGa3n+bJJC+zq4r9M7/UdhM47Btn5d1iEXePqg0Z7lMydBHZ6GFKHIGt4KlFv5gqH97p2oxVk9JYg1s4F2jwoQ==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.539c432.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.539c432.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-WGa3n+bJJC+zq4r9M7/UdhM47Btn5d1iEXePqg0Z7lMydBHZ6GFKHIGt4KlFv5gqH97p2oxVk9JYg1s4F2jwoQ==","shasum":"f782ba4980ebe3bc93070a6ed95a594e11b84ab8","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.539c432.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICMpBu8Ed4H3olp9QGIXu0C+f27cizjwD6+HnWk2z8VSAiANQJJncXbhYe+QrlITbV8PLA5igt7t6Wr+YO0bdr/tEw=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJinvfyACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoHTg//SWKcyVfy44EYkQH+Yxvhiqc9MPBcG2+L5bdnS28n3nv/F97q\r\nklHQhs/yH9p6go0pz6/PPXdtDnKlio+HlmhQuTy7nw90Eig5ArZEP+f+9PdL\r\nFIZetRIuuBn3GZhii8/4/mw1DgwFMy5lUvmL/ix/sfHCmFVVVis9rQq99Evb\r\n9CnRhEvCy6K1D9kj4ZvY4G0xk9RfXCIhnsBiQCFZlF1bTEWTQF3ln8Q9CoRZ\r\nV5Uu3j5KOfIqwYKIt/VvJIUKHvx8wzt6INdTFXe7JCEVTx7zB+70ASwUcpQB\r\n8lHVvJBRr+eeohFchrJhiQ4j+3TUw4AtFapAqVyy1YMkiiseke8Jld/LaRxU\r\nPPPSae2C/JkOOcxeHuDqlwMdK6fyfi5A4Q/xoySMxxaNRD8tWXjSzwtmubfN\r\nqoPm5riZn/fL3vs5Adrru+lAB0Gw5tFzvZdaVfzNdwjYNK0UPupytEk5Lgj/\r\nMwP5QdR/Q7Q16qh9AMznP0RohUisIcLOroIDkKsxKYhKpCthXdgCJbEix7eu\r\nq5R+Ls6ZhVOcgePIiks3STjCHeb4HRYw8qKZcwwVm+E2CgDk30IwMnmTEXbq\r\nuvFG+kU1Bbyhe8SvEglw5JVNGhYXedOJ1NIv3oDwGb4aDS2cTyGEKc2GY4VB\r\nl/rvDnoGDgF+b0D2eDFnKu0XqOVEUuharwY=\r\n=TfIx\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.539c432_1654585330128_0.2693757980111726"},"_hasShrinkwrap":false},"4.0.0-dev.2fe3f15":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.2fe3f15","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.2fe3f15","_integrity":"sha512-fnEpfgF/U1W9HruXftc//ZU3tahwQIAdXB98us6FjHH52BGIBFjdly7/Ho08k3gISvxa5xb9+ge+76IeOSJM/Q==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.2fe3f15.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.2fe3f15.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-fnEpfgF/U1W9HruXftc//ZU3tahwQIAdXB98us6FjHH52BGIBFjdly7/Ho08k3gISvxa5xb9+ge+76IeOSJM/Q==","shasum":"316111aa34cdeb72b97fb2f7431c18e18548471e","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.2fe3f15.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHpehd29BxZYztWdnErrbo5Tfyvt6DbmT5LNqN9ajjOgAiAwwGCcqUP2RDhWbPSM74d7G5258/aQbSw+8nO8SOFF2A=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJinx4+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo7lw//THj3tkw/YvIqdZpDxLM+xCqFAr+y1Vm5+rdufOVsmDy96wYC\r\nJCi/wlXRh1wok7v01gnQZqbkDeFb+nH6OrplniWfTMtmLlecLCTV5O4Kl5a4\r\noJ0QqVANA4bJpuAlbIuZ8z69YcmoAEo21DWAmpyLsPYAQcOXIWZ38vtgPB6Q\r\nv3tUwAyueVAPXYT3qTfnDlH8H4KCgHRbxshyvfpTEMTpvh5xJqWgNBfSqqC4\r\nt9oic50VS9Bmi4RWd/omlTdTklIJkKPvVDFu3HJL+g73M3VXo0tXDWAEvlIM\r\nRtLw8Z7vVqvoQEwJJfrKilnFHasavCuhoNiUaGpbBw59XoIGNZYFgm29ho+2\r\n3IVA5LyL1JeDnKwCGi2bw0v1ZemUZVkKo1umJmkaQ+rhjbLO1+VwWLT3OJ9N\r\nPKomN81G+KfweLB3XCLlifPA4Kwq7q9d3+910fS89H8CN1/Oatv2Vcy3egBS\r\nDbPcccy4UobQgO0G1oF3cBQSlw6v13wavpEjYX3YvIzQtHugAc9wIy+u0kqz\r\n4hQfkJ2k8s9nIfM7CwtzBctNeyqfSD8eXNhBFB2gM4SKypKLK5J8PQt8mu8s\r\nKJFbGUbaQ7qkZQ3ZaThwjTeoe6B5VM2W+VdO9kjcoX+de6s0U4XFn4Pj/xWC\r\ni271SShcx9nVvtnFeKjhVAU/G6MJuLr+0f4=\r\n=AayM\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.2fe3f15_1654595134742_0.06366050940265278"},"_hasShrinkwrap":false},"4.0.0-dev.b2ee4d0":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.b2ee4d0","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.b2ee4d0","_integrity":"sha512-UWPOMoby4c60SaWrBG1G0v7dJDQrd9qKv21Ct7Jwwh0pbWV+k2h1BE0C3ZKQjXzRF5dDvjzq73BQhAEYPqyAnQ==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.b2ee4d0.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.b2ee4d0.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-UWPOMoby4c60SaWrBG1G0v7dJDQrd9qKv21Ct7Jwwh0pbWV+k2h1BE0C3ZKQjXzRF5dDvjzq73BQhAEYPqyAnQ==","shasum":"e53c3bdd8c4f51d47e508f35f2a679e2cffdc3fb","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.b2ee4d0.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDl3dGTiX/wlUp6MQhHFTh6RqalGPyP93S7VDfjiFNsnAIgIlz8APF5Cj5d36FCmEkr2phrDueeZMI97oUb8ZsrLY8="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJinyFPACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoV7w//byFpJ08ZjzVPw0nI10LhV0E+Zx/5mhsKQKhfdB0LQtTdeXRy\r\nI+8RJbtStTbU4hJyteRzbJMC7cpW3Zr2adoG7Prjx1a8rdX899VHzLWr74X3\r\nki4V1wzXb7HbAWr5/8buEGipPveSxzcwTy7CsMdLmdmbBqxk+SKeDmnRmDCB\r\nVi+jbocZi4zWFgCjih5kR9VeoPNiLyb45nRFPrV0wb8Evtcc91NNBWjbpkpG\r\nqdnVofgg6kVevDJMGa0PipxU92i0QDYuywSjOfYnBklFd3HTAYonWWBu94SI\r\nqSeAEfp4QRFHcIJxkoqyhhBPmVpwR9XbtjmBD/qeHjm4ceTLps6WpnX+wM8m\r\nMBoDNw8kOAodZlm3Nh9QB3f78eU2U+kmSLif55E7Iulsi565Pln/pfeFkPI/\r\nOi5H76BbrGyYSGxh6kq/L0/Lqnq2DxeRIEC5qFY82FTCYnE1mik+JkKJI8ok\r\nPon+4pZ7H9ZsRQgCOAMUTcm6bJIRCutr4APZFOItcI9licY6iVD+4ccdo1PD\r\nOgm9+9yONBHlG3Bytoa8lg2Dwz7D1fVYGJhPbLcCAMFkZAZJC5uutjgmMEWk\r\ntW82HRf0HZVlIPiyBoP85ohqtElSlM6R8axMM45Yh19WzFXjb4p9yjVQSdkk\r\nZdcTqGD+zX1CakNktKfAQnWlpR7uufJXKGI=\r\n=etRb\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.b2ee4d0_1654595919693_0.1640655276168299"},"_hasShrinkwrap":false},"4.0.0-dev.4fd670d":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.4fd670d","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.4fd670d","_integrity":"sha512-tXTPmWFGiT2EZimHPmL2Zt0cmxAHzDQ2UXOx0k30S7XFT4o23qGjNoUNtxbRpI0/1lHZGj/K9i16KwQVJ55NpQ==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.4fd670d.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.4fd670d.tgz","_nodeVersion":"16.15.1","_npmVersion":"8.11.0","dist":{"integrity":"sha512-tXTPmWFGiT2EZimHPmL2Zt0cmxAHzDQ2UXOx0k30S7XFT4o23qGjNoUNtxbRpI0/1lHZGj/K9i16KwQVJ55NpQ==","shasum":"db5b11222f884f92c7b29ed0f33074ad4576a218","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.4fd670d.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIA15F3tySU4w8Hvj87Pn06U4g54JpNpqJ65I/HmId1FmAiEAv3Qq+ng5pHo8o79msuJYInucgc3MILx5LgnSTEdl+tw="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJinzYFACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpm1A//RQTbtrKHlINcX95mzC2327l205ff5EXSLQQ/UchYlgUpipWQ\r\noZH9s9TJc2/aYyVs+uwCkMRU3Mnr8p6JDKypY7UNHYvJNObk96gL94KSGS88\r\nAnIMb1k9gmHZ3MUwr0cJ2DV4BvxPvm6ydHA3tsDeocT645ktkGWwiV1ZDSSS\r\nGqN8o1m8RinzoiChtIg8IS5j/wXVMFQyynYKOgter7SO1iDLjS0BrJF+6Jyz\r\nEypi/HwJ/LPW6cFxLrLlhEWHxYEsQHrVojQSQI/m79PPGkfg6fY+bEcQ2Iem\r\n1D8apiFedUjfRHUp5niViCTYKKn3ZItwc9vzmt3fHf6at92lwAf2rrQ5I2Jv\r\n3seFLj/8JTWamM+ROBK+zDxDT61u1c9p2kfLLLifiOqqRWRxtvTJimDpZ01l\r\n7N8pQeO660aKCAowj3SRioSNTH8R5jiEHkaodLCmwNYHaQuE+Xgcu18XHwjg\r\nxEtSu2Z52VeSHdAAr++EOPj0jx5NhQMX3wCJKuimboqilFGtbFOglhkaoykx\r\n958n1x+2vTaVqLgBaDQp4700K+vaZL20qsJL1e6nLSSDCqfKn0AJbZHVYtwx\r\nAplyMvHttcuwwGYiIvUPl8gTtaKUYJZmdv4bX2WzNem6R0dIaoaB4Ey3tbF9\r\n5jPFDMvkXijRdWnQ99Hya+bE/vVfAAV9g7U=\r\n=DASx\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.4fd670d_1654601221347_0.04127975882280355"},"_hasShrinkwrap":false},"4.0.0-dev.0f1b253":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.0f1b253","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","_id":"@ethereum-waffle/ens@4.0.0-dev.0f1b253","_integrity":"sha512-GRPjaTZ5wXLPgp0VBvCbZ/NYLuoBPoeM7FjifEUKVFHu1iCZjpYXNwAyI+GRiVRXIgD3WQcdBtTsF2Li2/MDGA==","_resolved":"/home/runner/work/Waffle/Waffle/waffle-ens/ethereum-waffle-ens-4.0.0-dev.0f1b253.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.0f1b253.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-GRPjaTZ5wXLPgp0VBvCbZ/NYLuoBPoeM7FjifEUKVFHu1iCZjpYXNwAyI+GRiVRXIgD3WQcdBtTsF2Li2/MDGA==","shasum":"a90b4cbb4d7150fcd359e5cfde457395164d4bc6","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.0f1b253.tgz","fileCount":20,"unpackedSize":30493,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD7zBOuucdfcGrle4Zw/n4I9hUkgNxbxyzoDmjDb1zUmgIgBI8OCKkWphgA9hYxqv5qzQIAEOw0vZ9OAc3a7n44/6o="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJinzjiACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqQEQ//V2a660f2reHJwy4E8C8vvS0RN67jM3NG0G3iSbSrB2xG6Eyb\r\nBYG+xU8S7oy1vO0gNbHwyxMP6WJVORfQH5hMms/42qslrqJL57wzY30QKHvi\r\n7QEpKagYdCgw2lW8b/RxLtpceh1xojs7nvij2XIKUQuwLeOPZemUcaFznOJ4\r\nctR9sAIciBAppkjEfquYxOIQcAS440DbqTm5SVbsncX0OgAusDHNT0/Dgl9u\r\ndre753sZZDolOvwY69ydPYodPpAQsqVzuv1cUi5n1avkNKhqXZypNZqkGraV\r\nyQPNctvgebjCpDFHe9nuy4LsV7Mk4WQkOUxFuj7jf2zHTnl5H9B366NIlcmt\r\nVgNRqqxSrl8Xlbsrt4Q9bCk3Wg8Ur57A0rSpSP240dcKik1rjElloN17Qugs\r\nsr4Nd3EJde4+wKU/E+pum5LdD706TJmj43fwwNoDssAH+IgIyelp5kR8/Ey3\r\nvUY1f0IZSemWiFCB+oMt57L/hIs051hCDtQhXkP7I4YPcYZQH3M86/nF/I6E\r\n/PXjVjFwI59ahYMtQcYY25Ay5lCYzqO+REF2FMcGj1CdWFBjbnrjDs2FsJ9C\r\n7ExJ0iDIKS1cfq9rDvbn2SE3NicVAm4s9g2A1JEiqejouSxxVFcGAh30we5A\r\n5207CuqBzw2HyokuTE8/GmEb5PmOyEfFA5Y=\r\n=AHHJ\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.0f1b253_1654601954209_0.47501540999927006"},"_hasShrinkwrap":false},"4.0.0-dev.b21809a":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.b21809a","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.0-dev.b21809a","_integrity":"sha512-ueXxGmsDAHOfU/B+whuBGz5EMRi2GijiwjH0o8wtBPA55o2TSifxRd9kLVy1GBf0fvItvtzPwlSPZe8Mq+jXNA==","_resolved":"/tmp/463455784901b5e5e9403a788f36edee/ethereum-waffle-ens-4.0.0-dev.b21809a.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.b21809a.tgz","_nodeVersion":"16.15.0","_npmVersion":"8.5.5","dist":{"integrity":"sha512-ueXxGmsDAHOfU/B+whuBGz5EMRi2GijiwjH0o8wtBPA55o2TSifxRd9kLVy1GBf0fvItvtzPwlSPZe8Mq+jXNA==","shasum":"f0d6ca791f4eb3b78f4e54d1b1eec65821c852ea","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.b21809a.tgz","fileCount":20,"unpackedSize":27863,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGrfunsunYEM5VP1y0A3wAJPwcNJO7+8l0EGctOwpx7MAiAS0vQ62alDXU6S6oS8iidt3LdhRytKwxdKxSM6t0DPbw=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJioMT9ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqBew//dFrmE7dzWd+FgDJtqZc5FkGs9fIzKlTbML2QymCuIu03LBOo\r\neo6NYJKPMwTTEbdZtZOJ1ZLBvToA96LXotNU51XAoFgPOkhaAi/XtF76chf0\r\nSXYmucw8AWMgEGXinlPz7O5fkt4OFkhnsDppweBWWBBonWwMjV9dVpuLuAIu\r\nKDM9ijQl5fNdOVQ7q1L+vh4xrEbgOSP08cYA8Qa7EXqTB/E+kXVE30arOYEE\r\nUTmuOBUfF8WO1P7kqVI7EMoZ0nrBz216Ezp78peHtbgl3AMAKshugwbWTtE+\r\nD+E6sQjtoqASG6a7MMwPU1ZcmRbBZhgfkBWm1izA/7p7uW6Cvl84vHhcgXgv\r\nWAZifiD98MgwUJZtuiVhcoO1Z0TWGT+6K3q/fz7Tv0OZwFJHe6LZE8gMDA4P\r\n1r2vRAosgGLA67W8G5B00yFgmP9sv6FXLiFg3XOVr4y5jx1FQfe2HH7FV2Pi\r\nvTXlU36alyUxHtijPItZW4RIhvscT+W73mcboKDis6sJgB2cBpVugt0m0C8R\r\n26eGPVFjFgbeEo/sIvs8/0rlu96sE82aOKdYiX1ZUNLe58fo14MCWYM5YSrH\r\neUjb5XxwQGOlL0+Pe4lPHWJi2jsvH++zpIp+XzWLJ7MWRptM3qEj/7UZimNe\r\nixwyHyY4ihbD3zUS2b+LoRFO2GkkaVKyHkI=\r\n=oEfx\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"account@ethworks.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"account@ethworks.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.b21809a_1654703357460_0.1516138006303649"},"_hasShrinkwrap":false},"4.0.0-dev.1c384e6":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.1c384e6","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.0-dev.1c384e6","_integrity":"sha512-29xKX6uGXQelYHWpYfPMQyUuQqUYWgppL24Bv9/bvh98yW9GGQVqINRfos2aTfjDltI94pvyjcIipu9cIc/hAg==","_resolved":"/tmp/e7d0f70cd16d4c3039122b371cda6fca/ethereum-waffle-ens-4.0.0-dev.1c384e6.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.1c384e6.tgz","_nodeVersion":"16.15.1","_npmVersion":"8.11.0","dist":{"integrity":"sha512-29xKX6uGXQelYHWpYfPMQyUuQqUYWgppL24Bv9/bvh98yW9GGQVqINRfos2aTfjDltI94pvyjcIipu9cIc/hAg==","shasum":"86fb7fbdb38e2fbcec1cd5a7b95a5db060238ca3","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.1c384e6.tgz","fileCount":20,"unpackedSize":27863,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAVtyRrtp3AesfCmOiUV0fvvVtQZb/RJItcNl0UaWK/YAiEAv2pK5cQTwhH6WVV9jyC90C/e/YRWQ014tQz7UmmRFFk="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiqcMwACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo16g/+PZ130xnKQ/F7oSjuQNzROOoLkfKjATAOf8dMZ1AKqkhMG+Jz\r\noIAubhjmPbkZqWp++9tDX4Nz7gPT5ZB55eiKjtusSI8ZjKvCYqY++Bdji2rK\r\noxdpUqlMoHiwp3yPBeCPW6qRn+sg75N4Qv+LED41k/dK9ysdUj3QVzz5A4e/\r\n0L1zS59r/R8XJEvRQ4QEP+iQOqDxFSxrMQWDzo5mvE5f2fllEKlFeHxGw6EZ\r\nBizESkzRKU8c4yEA+IMlsSZLeOjEsqb8cJ32jFxBswrdIxa6TTO0VFvJrpNl\r\n+c9SuFKSHxzU605h6wMB9xlHejgiNP6RoCv5N5Zk9dfWUY98eAiijkZZnjhe\r\nv+KS3PdERgGmZvugKcvB/Neb2LaGFk5pCU1Ib3uY61Y2DUJpgc1uN6h1tsHv\r\nRbKxBcsvk1uOz7FRnm8MIGjUrXOmNUdze+ezyTeBJ3MdmvXwSngNK/N0cnZm\r\nOptpI5B4gbDdxBoUiTdheSLZVTFfpd0ZSCVqyciCZtdpurNY9jv2glFNrcV0\r\njciOrhGK0/NmjHV/tP/QkZgDlYSqfEi4I1pjkyZNniTpAcr9fbxbap/ihZ9N\r\nexibFCwkpeEO4WYSlvckE2ueU0xyY/ejKcy0xKVRY9W2exPbc0EjPzwGntfW\r\nen9/h/ymIma55fZ3Oq9Tq8KDlQxBN63yyVQ=\r\n=wvdl\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.1c384e6_1655292720421_0.723952394423486"},"_hasShrinkwrap":false},"4.0.0-dev.d8521e6":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.d8521e6","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ethers":"5.6.2"},"devDependencies":{"ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && yarn build:esm && yarn build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.0-dev.d8521e6","_integrity":"sha512-PPmHxJSHWMbD7D1fjHbMi5p28cFusCJy8e52VW/2Im/TZ07GPmSCtdKND/iXcEYo2XDd7ABwKH45IS7KmhGxNQ==","_resolved":"/tmp/972bf0d6e6c4b52180b77ebe2f96a45a/ethereum-waffle-ens-4.0.0-dev.d8521e6.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.d8521e6.tgz","_nodeVersion":"16.15.1","_npmVersion":"8.11.0","dist":{"integrity":"sha512-PPmHxJSHWMbD7D1fjHbMi5p28cFusCJy8e52VW/2Im/TZ07GPmSCtdKND/iXcEYo2XDd7ABwKH45IS7KmhGxNQ==","shasum":"64e97cff15adb1746f7832b963acc3777f9dc208","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.d8521e6.tgz","fileCount":20,"unpackedSize":27863,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIE2Q+OqILppiIkxYALxNkAzbMrzsYSwuGoE3PkvmkmOeAiBteQgEBAiRhkiqdAciVp4aeTHD/lhB1pMyzfq8F2mrLg=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJivZA/ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpHyg//U9lrRmf6VXQddlwOY5qwcGvh0QHlJhGN/cC77U1lGbGDJZ2u\r\nBeU2EvBbVFC5CrOxzin70Ybpc2v/KUqAStqgPFRnbAy9LgkVheFwuCcDyshJ\r\ni7qcGbTeFmiAdT3GgCERqgH/cIzuW7n/k9eqEChyGhKlgEg+e7hH++8djFsL\r\n3dV0M7+7tLj9mt2DSF85iAIS/TKj22HP17UG8fJk8HO8/qLifFQOexR6Tkmr\r\nyAJkUpYP9bpZWrD+C/IA0hT+Ws8WOfYtIaQtt1u3whjK6nzPPFqMhwaUA57+\r\nSd5IJ+eiog9VUUNQA8TlXTBHBtzOyEqu3nfwbiQCSXnS9omQmTs99T5xviNB\r\nH53uDupYfejwwJew5Hi9XHbrhk4/KNl6NeSdm7YoJZ+1ag/YsJ99AL9NVwcX\r\nSj3RMlj58uqQnx5JYnsQPk28I6iQrLTO7nTZNPu2V4IiK2V4Gw6v3Og4hm7T\r\notYu5k/kfyWjTZI5arTiuETHq6+WBlLSTr3LDvAfOvNehs+hNbiENPrb16Tx\r\nZJqTfXyH+tUflBMrVmdNXmAtFBjfY2OaedSFKnJsaLj1b/pBy2z7yvRQx1Cw\r\nqbrjU+OxHbgEmfFVoGMVFLDdHewRJJmTHLH37DDx3OZ5xWVFenDPigQvFiKE\r\nA/Kxz/WiVGlTvhM09cZIlObn0fgdsI0qH48=\r\n=RiK6\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.d8521e6_1656590398810_0.7054715061811971"},"_hasShrinkwrap":false},"4.0.0-dev.4867133":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.4867133","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.0-dev.4867133","_integrity":"sha512-7HbUreZbdVqxo+zIqN+3Fb47VsIHczvVEv7JXglkmyTCQvI9GbryvLQ4jqE9GyFy1SxGNBbVQhqov1bp8CJhDQ==","_resolved":"/tmp/cc82856b9089edc87a6585465647d247/ethereum-waffle-ens-4.0.0-dev.4867133.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.4867133.tgz","_nodeVersion":"16.15.1","_npmVersion":"8.11.0","dist":{"integrity":"sha512-7HbUreZbdVqxo+zIqN+3Fb47VsIHczvVEv7JXglkmyTCQvI9GbryvLQ4jqE9GyFy1SxGNBbVQhqov1bp8CJhDQ==","shasum":"f731766a65d9a7381f633d08c7fc18b7163c756e","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.4867133.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDZI2YIu6Wlh/WInTcMfQEQLXsqp8eu0muR7mgY+U4vYwIgUREtDOFCpx+jQl2+YBzK7/F5yL9kkIGV4i5fBbCxW9c="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJixuIlACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmocSg//QxpjevgIVJVoSCwtG5VwDosbrfvwnAO8K99TKpfsL/d4JSCO\r\nfoahKM8ByQ9SdOtCVf7cK6N2+cUniGd5vMWgllyQH0Gl65VSNjN6YGo1K5r+\r\n6LpEqcLC3p1Z3q79rOrbWnLi9Hz6ka5WDqek7PaXIpid5DJ02N6PYKvi3ql9\r\nyruEXFB4qab7UbxjM6IPEUwMBKYRvZ/wcDtB3Vg9QTJaTtXWcY7dJodXpgXS\r\nRA+ggUPxgoOFY9SCLlCiKs/QC/QU8EU7gMBwakbGsj+dcWDELNhBzfo821L3\r\ng1gJ3HglteJCMGmi47dx436da7mKg+Qpfhis7j7mkCbB7fAUmU39tFoR8aos\r\nlfzcKrpPmn8TBBRaDmwmThbJu+S2slNJtkshhh+Gprmp4CmDGOu55JFgT3FD\r\nJQxfgXiL6Imsu8cqHjfU9LTp+vK4AHrcp1lnVifa8CIegyPwszwbl1DI9lT1\r\nBqt54LKAdXCnbeDFQTwKAl1Dhpf5D2WuC24PgAp8NavXGwqiS/yn6Rouv8Ob\r\nJWQfRYF5bcSmqaK3ONV0vJSP+d1gvPPkRwT6IlgzRGQkPMkJHjhTdEKeVYKS\r\nnfbrt4M4BUpa0mcs/RjyMDrTBhvuGouNksQNQUB/+umjrhG1aYxEBQQFSIdQ\r\nMn+RJqio0Wernr+n6xnZg/Q+VGsjSI9zqIs=\r\n=2Yo6\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.4867133_1657201188985_0.5666733771620096"},"_hasShrinkwrap":false},"4.0.0-dev.838cf4d":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.838cf4d","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.0-dev.838cf4d","_integrity":"sha512-J3wkgsTTQTNxbw+UUsHCJfY0AbNTDU+ieA2zAB9XpfXdgBU+nWiFqAle3RAVB4Ab6LUUCtgPpOK6yjL2Ifq6TQ==","_resolved":"/tmp/4f91de1224241ba9948bcaa0a8149d76/ethereum-waffle-ens-4.0.0-dev.838cf4d.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.838cf4d.tgz","_nodeVersion":"16.15.1","_npmVersion":"8.11.0","dist":{"integrity":"sha512-J3wkgsTTQTNxbw+UUsHCJfY0AbNTDU+ieA2zAB9XpfXdgBU+nWiFqAle3RAVB4Ab6LUUCtgPpOK6yjL2Ifq6TQ==","shasum":"28c1ea3eb976283a2b933eeedee77c2c47789b89","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.838cf4d.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCICVOtoMKTCCmk3q7pihfZoVnJNKWjvlS9fBmFSCbcdrQAiAHgZ4Y6pJyZbA4Fj5HTySLCYI2+i2uDPrYYPydYRpGtQ=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiyAFuACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrMwQ//btC3wUnJG0cfqPHgRBRuzz2DIXDJWFmUDyiGThq0IqWWj+73\r\nNnyJrBOP/mHGZJakVt2P6MQsaUaW4X2TMD2udz+kK71vnr8zYwBOCnwx1nzq\r\nq/6nS5CW60P7H601HGGP+y7MXEZxCaztvKp3UJnjQUW6PWGHzHksqLardPa/\r\nUlqHN+1onyvEeVvcCnG9+dPIyMqf9z8xbBVtQ8MpgBrhTmY1pbnM1gGtxiWF\r\nMpZfKlEtpYx0GsR8uipisNsD2jR5ZfjVMN6rGEkOJ/HTenade2EANqvIQFeO\r\nmaHPwSnoKko5z4BLn+FCe16pr/Yvj/utEI5GX61KxHprkh8gxPIcHVpfJDd9\r\nnaVI6VWYMQcmCAg2vYYpqlXSKwh697RnYos001iJtgwiLDWsA2+4aU+hVfMI\r\np53RSSRUI1yrtadP+yzbqMtS4RF4AhS81+A2VcutaS3+BY0q04c45CtMqVih\r\nCsDMFlIkjNqqo3PqjWLAM1JL1XK4EyglwbH51dBmNLN/IgtVSJZwd2THSnie\r\nGcLQQ3kCrqnvN15byK2x4bmGEcTrwHwcN8tEIdCCcs6FfEsE88egvDLbp8eF\r\n++0W1Tp4eHDQbhrRZViwi/+cqJTjWj2QMJ4R/amAYkmba6EPC9tlg0jAva0U\r\noKJhjs3PpItJqKPudWKyKOPMkT9/YBHpI3Q=\r\n=icLj\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.838cf4d_1657274734468_0.17340246796391146"},"_hasShrinkwrap":false},"4.0.0-dev.06401c4":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.06401c4","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.0-dev.06401c4","_integrity":"sha512-Euz0ZlpkMPFYLqXl5WibQhFgD1xGaOXvEesFlk6VloBsfLMfrOSYM/NfMRSz7NlP9Ab8pKuvj/kwlTcSk2exRw==","_resolved":"/tmp/a03d711e75f75396026dfe78978cfdb4/ethereum-waffle-ens-4.0.0-dev.06401c4.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.06401c4.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-Euz0ZlpkMPFYLqXl5WibQhFgD1xGaOXvEesFlk6VloBsfLMfrOSYM/NfMRSz7NlP9Ab8pKuvj/kwlTcSk2exRw==","shasum":"e2de9ed30a7284ef16f4ebe7ca70de2d50cf2bd2","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.06401c4.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDJ+uffmJyKH7ewSUbAx2RSeYgesMwm3m8vmbUSnA9oyQIhANJKamMN7TikeYctxFpw2Y6AS+2a4TV0Yha/617mZxXj"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJizYCxACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmoj9RAAn25SnwFoh1b28dq9qpvMvKqUY+0iTSaGbvpPlh1q8tUnEcvF\r\n3bSu/dQqd5pjkWx0OVMDO6F8+SoiXmhRuc28eZb5qPFKcQdJz16NUTd/G//W\r\neD1vLpBmvqq+68J+jpTuDzk4wRJRPYMW9nW4zt48cvnr4VyREn/77fUpP1aE\r\nCMZ6JLiJtoCdfj8Vune8EzH93WPM6CyJPCOQdIJjz/yg8IpriA2LcWqky+tP\r\nplANWRkM1l6j5LniZ/KOZpD4dZKc2PurZRIc6Q4wdzRJtIUiwijQueSv1UOd\r\nvyNLxOGTJu4T8dihycQFwckDPIpIAIXktnXcD+36zLpIcLe1+JxYIEXXSFUR\r\nLZeOA8AxrwJhrm1q1L8mWcfYC/PyLekY8ebnAb7qJAkUmYgZyWFd5eh+2rAD\r\nQi2zvtKwS+7nCvSk7CCQCXIUS6cqD+m8Q8bHExzbIXUNwxM817fN8lf+VPgi\r\nWtI9Hrwfc0MubPuVHpRCESPv4gP2VgrWnDivr16JUfh0NoAhK2Rl5Dav9JEp\r\nbDTtvfD7kziPJGhYWbHJlHo+R5P0Unm7YMdypK8+eLDweqQzhcap2vjo0jvI\r\nhOeDacMaGxaik3DKu4u+27CcUoQetUnmagm8mmmpRWr/o5b7q8/WG8AOcWHo\r\nWKkKE/lggB5TKL/2ohbIewjmSBD8Y9AH9Z0=\r\n=nHY+\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.06401c4_1657634993547_0.2200721592129684"},"_hasShrinkwrap":false},"4.0.0-dev.79d1c7b":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.79d1c7b","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.0-dev.79d1c7b","_integrity":"sha512-PT1tFRUzDzrewHVXUy12upIuL8OzpNpHvIcl3ErjyD4s/iqLGZb+fzqwmyeUlC62mpcHps0maW8z/S8zxvef0w==","_resolved":"/tmp/80139140ec9382d245c43f520c11620b/ethereum-waffle-ens-4.0.0-dev.79d1c7b.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.79d1c7b.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-PT1tFRUzDzrewHVXUy12upIuL8OzpNpHvIcl3ErjyD4s/iqLGZb+fzqwmyeUlC62mpcHps0maW8z/S8zxvef0w==","shasum":"de47c1abd3621c8f3e1edcd6cf13fb7ce671cbec","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.79d1c7b.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC6GCul2ZbgWuCG9i8Bu0Na4SHe5evhJioSyBZOuYyJoQIhAOHDFGG83xCyZelFMhv6j2htxK+2pdEvGk4FiB/aqB9z"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiztPQACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoSMhAApEAwfxTNkwLZGW0eb/eDbiNfWoK5eVxI733YbsXQEPF5cROO\r\nMAjTPhv4CecBrgfY6gX9rp9a7VD4fK+dzj739XGBKDLfN152SIFTq+O/Oxqx\r\n0cyc6B77Rf2S2kKDEITfwQIbAhziWlftyT5jLrzD+TOUOP6TEfNhRAUHnVBy\r\ni8Wb2k/DTbr+vRrVJcwkq20AcOMyEU5xvUNUV9o9K13TU4A1NMXZQ/HtULmK\r\n1sripNCzT2v4i4W5bLnOmO7COH9Ig4eU8REprQ1BvCxKJTU7Kz5ZwIcAdOgw\r\n16V4E+No8Jd0RH6HT8/soKe3SjyQWGN5I2+9QWSG+rcT+mwQ3ISlW6l6CKGj\r\nGvpX+Db7KZ/IfncS0ilQwsrMlpfsJzZNk4b1w8lUVfndVeT8GfAPfseE5p4S\r\nGpcN3ffEwtq56buRmsv1EWuX6nCX/hNx5UE9mJdvFn/8iAqxm+hdUmZjO+5Q\r\n7f9icAxXLGc3z6bHfeOCkQi/U8aRr2wj9F0SdHMX+F6oNOj9JKRAQqbmOFqs\r\nnTsNjxjdmh6AwL7HdCQKlt+irvv47nA3qLWBLSHiDLRtSpxmOX4hvzrKm15u\r\neDsm3fCh6/QpHpJ3WZK8pec9izTgXdjMXNeYM78lG6Mxavct8thARQZgIvH+\r\nx2RQtCbATL3KdK2ho7yNkD66otZyCgg8MwA=\r\n=LZ+G\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.79d1c7b_1657721808006_0.08818278733736884"},"_hasShrinkwrap":false},"4.0.0-dev.5587e09":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.5587e09","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.0-dev.5587e09","_integrity":"sha512-9aLzT/rSxr2//XdoCLEd9kJKfpljS79Fwz0O2HoiSkH1LRcRA1thktjCYcnaIdBMyBEzusi0hU1kUeNkcLKHEQ==","_resolved":"/tmp/0456ae1b7a1afd3b8930f385781b3559/ethereum-waffle-ens-4.0.0-dev.5587e09.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.5587e09.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-9aLzT/rSxr2//XdoCLEd9kJKfpljS79Fwz0O2HoiSkH1LRcRA1thktjCYcnaIdBMyBEzusi0hU1kUeNkcLKHEQ==","shasum":"0d9308d59fd1e75627aa131f3f05e46ab486e541","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.5587e09.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFAlymNFyuuisKpu7qT0jgqUfq5PwVklb9JYZ9sS9snrAiEAjC1dDLG3JIrNJVSbdKTzhEyTVhH5XtnlFx7izI1tPFg="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi1oJZACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqvng/9FHxXNhKvwBOfXfu+mWTULJBx6Y5Xd7n/qGh4meGR3s3YGmxe\r\nAcwvoVwanQKvK2FQhQS4lSs9JiFa6c6MwDa+0+/b2DE/kn0yK6lc2PTkjNxM\r\nv+BY0sC//nOHMfrDOXwCfFOHWSwtffS6oEox7yZZxYRJDkvbPnNQc4IS1/X9\r\nQZ1m4MCaFiGyhqMfgiL/yTIXO6bo/e67e1asmJM1iwIa7N4pdQkeDB5bvoyX\r\nDB03GNiOUwozSZOUH+03Cf5qgk47INrfXHoB7SpuoDiu70PiwEes4AVBzOIH\r\n3AD6hNhgalRAskOkOtBeXgkHsFzLnPCrtyo1kWtkNcd32KwD/IvfhSNFg9as\r\n/QzE+kBJpTqDly15dXCllN/oh9AN36nEeQYIx0ff2jzd1mhzmF76x8jHbJPO\r\nZYmgr5Nr1CGrdPU2QOfy2OzmRlvIwIaNoQJv+D8JVsBAR7KIjEhlzmOMynBR\r\nSlBghFPF4FE25gSjbLxhV2EPXaJw/0p8xPouVZHjjYkqJpL2rY05FKqsUcU0\r\nhxIQ6xV53+9G4bH+E9XglEK4O0SDQriKtmUXWkLgzxFWY/nf4hhdRLgD9gKf\r\nVjJYiHhU8LJm5WjSiDZJECNRt0j4uXb2rhtHBKlEVpdRJx73irv22AVaQ6E/\r\nj5CcFw2+QHSG+gefE2fVWNMFUTSEHYlWtOo=\r\n=fvoO\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.5587e09_1658225241754_0.38845185413986694"},"_hasShrinkwrap":false},"4.0.0-alpha.22":{"name":"@ethereum-waffle/ens","version":"4.0.0-alpha.22","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.0-alpha.22","_integrity":"sha512-+kzLoTwuPqjDvaWjpN+avkRk1TGag9QGw5hmGffB8NB6f4GHlHTbCq2A/rj10ERBN9SW+IROM3I+ygdAOPeqGQ==","_resolved":"/tmp/061377aaabd7c050064be9c370b97eea/ethereum-waffle-ens-4.0.0-alpha.22.tgz","_from":"file:ethereum-waffle-ens-4.0.0-alpha.22.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-+kzLoTwuPqjDvaWjpN+avkRk1TGag9QGw5hmGffB8NB6f4GHlHTbCq2A/rj10ERBN9SW+IROM3I+ygdAOPeqGQ==","shasum":"f1577c2872d05955c8ca1d7e9a028e2f41511666","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-alpha.22.tgz","fileCount":39,"unpackedSize":2302844,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAzKRWCejx6FvNDIRT5X9lEQeQkuhM2zgD+2ba9cRK1CAiA8asyQwTkM3v3/ZHC/Mpkf7PAs1mXFQPFjr77O7rqbMg=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi1oWpACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmoa0A/9Gy1aXi8aIOX046uceE8dW52Q//M/s3jK2LlWnx/mtmig95xE\r\nVV7r+LPzqpjKGwBHomwd5Z6/kwWA4xT/FXG/BN90scmV1w/oP2YdA6vHjWWr\r\nwsKjf/SrEQ43dow2REx07Rs3aKyD25ezrVfdbyWgVkQM+OGhVXwvW6DrnX2H\r\nc5g6Awv35OfsY7ynQPOlwvItjLdcSrKzDvTEyHs9HyIrEPw1d1yRFyMwMbpX\r\nZonWR5rJa7GGVrikJBYk5OIeVzv/EM0h4+C0QP3IvMn30BypN+MQf3AuaPKY\r\n3wQcFo79phPW5CcWEelZscX/50mFmkxOD+lBIPDCflS7usa1OC9V+nYYgmuh\r\nDtfF09J9dgquQpPFz+sCpz2nfvUaVt7DiY5tszqApBoRGJjvF8Ag4Xd3sJIh\r\nSSzvV1V/JAPRCXfl+TmHFWMB32BG6CE+ctFMbM0HaG16H+eHGGoI2Ufo47FD\r\nwONtvHrBmwwNmYtpjj8j5VvF/5ddpRWR0ruqv4lR+qNkgv+oYJjk8jJwUxIY\r\nzKEXb3CimzGb2M366viDBb9yrZbt/JyN+BdUF3eTHqhdQR/99c+7v+qZBkVe\r\nhU3/vjwPfRmzkjdrJxI1hQ6vjNOZGnkrSjH9JzKspToxN2MH5WQuG4qF/ZPX\r\nBkXvL1ZVi+iXK/h+jutYeK7yQbNVVxZZfCQ=\r\n=oF82\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-alpha.22_1658226089159_0.018703337959376398"},"_hasShrinkwrap":false},"4.0.0-dev.5c29ca4":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.5c29ca4","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.0-dev.5c29ca4","_integrity":"sha512-nFM0QTClqlmQAHVxyJc/rbRo5sr98f5G13CsqVKpJp239FPeeQ0y2Vt3xKBuxprq0UnZzRTvFWvyPNQHnXYqyQ==","_resolved":"/tmp/8015cb6cfc0012e3da84fc2e655481ad/ethereum-waffle-ens-4.0.0-dev.5c29ca4.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.5c29ca4.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-nFM0QTClqlmQAHVxyJc/rbRo5sr98f5G13CsqVKpJp239FPeeQ0y2Vt3xKBuxprq0UnZzRTvFWvyPNQHnXYqyQ==","shasum":"4bcda86886a51300d55cdb3eab3b3a503eeb3b84","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.5c29ca4.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBZtodwogs6pi5fcqHkHT1RHJcC4iimeN3KlmYyD7Pl1AiEAh+maqKMN6kSNBzu8/F/4uX/c2TKgmQJs0vEqMaKoiNs="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi1oZCACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpYDg//SGHUq8LqQ092mB8CXlOPY2KTBTj2+h4h6jvkgJzQtYosYGFy\r\ndqcR/RknSL7ALqSO0G1lLEqvw78ZoiNLm67eL5VNegrEb5doUMyIJ+eDGx1z\r\nX4aGlHqtzDLZlLbV1GSvGUfJZgA5M/LXklryH6Kc7QQjz2rfSq0mmH981GOP\r\nvxioWsCm9aEUlcQiv7b/ieExrMcX3n+6IN8yx3/gc4skG8xPWHLRGg//vNtM\r\n68sF1kdPdFNxpNdZc+c7I5blTix989zdsiMIWl/5e011hU+mbqRBPOxcd65K\r\nJD5M31KN9Qxen+G1mFjVkk6b1wzfXGEo32JnYaBTeDFBSI60D2tjRtcI/wgk\r\nZ7nwe+Ijc1k5zxSvGIJ5dnW28pTw+asGj2D5e+WHZsi0qXBTvWJ+DHm4YQ9e\r\nhe3zhYT7kwWPUQl7/D3c4qXs1A8krpMALtLNCmho8pWGKWNOB2VDbOjtlNPe\r\n3nPUrOBQpEuTiWScspHq4nb6tqSs+ujhhd08jX1flT46NSffTCaTePopuL10\r\nQ+2I4QKRknMWx/kfqE6cb2TCEOBkoOGGIhqUsd0d60ptcYwmfAYOuDR5ydb1\r\nFn9zQlgkxA7f93o8Wig0UlFHM/XH7U6QEXtlo0M631sm/H/jYuAI8A3MQZWi\r\ngrJkuW1/SaGH0Pyvn86Khpy4JXHHlplYtG4=\r\n=rpVe\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.5c29ca4_1658226242239_0.38458623385972546"},"_hasShrinkwrap":false},"4.0.0-dev.4ce739d":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.4ce739d","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.0-dev.4ce739d","_integrity":"sha512-nIHsjuhZ10g4JfRTfpC0ckJi+LP9sIk78isCfb/Qz11AOM/aSnk4s9SAYYWtpaASD4StyYatDsRmThpauxN7qQ==","_resolved":"/tmp/2c45ff78bd94fbb356b52dcb411ccc59/ethereum-waffle-ens-4.0.0-dev.4ce739d.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.4ce739d.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-nIHsjuhZ10g4JfRTfpC0ckJi+LP9sIk78isCfb/Qz11AOM/aSnk4s9SAYYWtpaASD4StyYatDsRmThpauxN7qQ==","shasum":"a8d2e6f503b6d6ec5998d149bba2a19eec66a070","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.4ce739d.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDLGCLrSMcSQezKzpOPCYST37wkHn9bpPPdBw/WRYOB3wIhAP7ZVU+SL0uZJczEftWwhMdjtHIIVyzZ7mEKcx4cSNoL"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi2VJ8ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmraDQ/9E4LpNSMc1EFXIhAVe1Ih6onRsxDnUeXpYIDwEojsPouZv1GI\r\nGbe9nGEWGBLujzKmKBD237o9dLs/GPdEPpmTbNuTXDPEjz5vE08YfySixht3\r\nBEVmO2YmZPymua+79YyA8UwyoZPn6JmYsfZWHyTeZmT8xzh1jzGBrqVoAItt\r\nRPyeMvWplok4fQtbi2Fdv0JMpBpOQ2kvni9cTeF11nvWAgkfkoo9i91miDXy\r\n38o6aH7MH7nnP3vP2IAXQMe9Tz2kjhjnNNEGq0lT/MRCndR17byuNYCvvg/Z\r\n6EVWF+6r/plhmytPWVZ1iTQPNCBV5GzMxe2NLmOLxtJ0nnfYTKoGLtHTCkx7\r\nFV25Qe8hklTTOJR1cZWfiHbTMMWPD+SwuuJKs0vjJ7wQr7UfMyfrywhoCngs\r\nb9iCdUsp4UbT8Li47v38fzxeoYQbWAMeHjKrl9I7CyPCEbrwTXg5yH2ZAIl1\r\n4/dxxBz7/8nhswzAKQ4tb+Fwr3IxU/ucqAvq09yhdVRZ8Cdh0UlJF7y9ckhb\r\nFVgfOp0JEXWp9T8y7Jf6TgzoS2LXibBhsAim6Y1uzw3Wpg5eA3VI6ojHo457\r\n0COu+n25Daai/xzw+zGRVDioBr1TfsQ2jBH9IdERutB0X2BUX7i6noe9ifOo\r\n/Di38NHu0K5L0sIi6Ub2S52pGzlmn31KmIE=\r\n=AsKv\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.4ce739d_1658409596534_0.5192679010433459"},"_hasShrinkwrap":false},"4.0.0-dev.c98112a":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.c98112a","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.0-dev.c98112a","_integrity":"sha512-o+qehe1Uuc324wXvYdsXY38aC5vQoU8b3YbGUcHK5MYELot8UijbxIyKltoZwD8prjUFzP6Sqf7ii6leeyxITA==","_resolved":"/tmp/328c53a51396dd967e871cf01e29233b/ethereum-waffle-ens-4.0.0-dev.c98112a.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.c98112a.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-o+qehe1Uuc324wXvYdsXY38aC5vQoU8b3YbGUcHK5MYELot8UijbxIyKltoZwD8prjUFzP6Sqf7ii6leeyxITA==","shasum":"5c63f5f1b048e9f6fe171995dabde0e4c796528b","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.c98112a.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDOuhLv2xWH+PSqx+eaO+b/gVR1bcGZ4bm2ahRbOHhFzwIhAOoECIcYCWVk0hFI5A76/wBy1bPVjOquJwpxRFlQMc2x"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi2WAsACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpopw/+JXLAcqTkFCAw1Ppd5NYEVU9tDCc9Ji+Y09DIyrjPccVfT+e0\r\nF+UoHy/BZwp5i8fGOhTNauinQA3Rsve/FWOuZx4OQrYHMwERRIB7b+S2g6fz\r\n28Ju/W3v2beA2jvu00MFnAEK7dpn7Rga2W+vZg/hCMKaS4uL6eGeYlmbER5u\r\nz+b1RarJ3t5152ZHnIrhZ+R0H7RnGfxQm6gP45+qGcpCpyMpNjBWvJ7mzF1u\r\nSYKoengDCohT0D1gS62ChsyxMLvfDfPD7IayMGd56GBLn0wflsP1kFSzl8hX\r\n5mfff/5MmKcEqDn0gbEYvVt2ERTPezSDht7ErgYy2ZDy/NhIH+mBJy5e1uiz\r\nnHJS1hWLYESZB9XFRqKaaSHR3Gr5qV13OuyRwX41Is/7eY+nFqSBhv5Im44E\r\nsD/veugg/sRt/Yi5NAurwo0cnP2Y97TfBR+8x+pi2JABPX536ZyTqP7G7kph\r\n0e1WkH1j7Rn4FysmYx3xNJQM1wVzHJXGwexDovxxiz0/QCyGFMWldue2XfRJ\r\nWbbjF93Uup+cH/naS4E96VZ8GS0eCl3o3e/28jE9nfJLLFRNcjAtcZqtMhG6\r\nbTitmPRSqRhic9HMuP6maOW/RoZtH59m+8h22aWL6WciTnXG+8bp1ag3CbNz\r\nWEnN092QfZnxPI/Qyw6KZkGKAjsuQ6+T4ak=\r\n=2Rax\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.c98112a_1658413100615_0.7506603354341705"},"_hasShrinkwrap":false},"4.0.0-dev.b028d7f":{"name":"@ethereum-waffle/ens","version":"4.0.0-dev.b028d7f","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.0-dev.b028d7f","_integrity":"sha512-oagbQ2w7whrEa66R8HmfrlmYeBcPnSrz6leV5yPvjJa1zQbQYkEnLXYXu2lK5aFHgbcDEzEreIQ6ffBdaNhj7g==","_resolved":"/tmp/b3eddce5a98fc1b186fc068d9edd87ec/ethereum-waffle-ens-4.0.0-dev.b028d7f.tgz","_from":"file:ethereum-waffle-ens-4.0.0-dev.b028d7f.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-oagbQ2w7whrEa66R8HmfrlmYeBcPnSrz6leV5yPvjJa1zQbQYkEnLXYXu2lK5aFHgbcDEzEreIQ6ffBdaNhj7g==","shasum":"b895837e9b2c434ca097f6fa93a89ed730a09b3e","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.0-dev.b028d7f.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDZ7Ux6yupNOfwXyvDWaOSzDJpH7NQOcEpYEoH2muc98QIgH+IbXrytDCAT5PY5bQOjXHKcEbSo7aF3GJ9qpX4ZOmA="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi2XiHACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrXfBAAmaIKHdBMnA6Mb3d1JAsgr+sCzSKsNNuxQyq5sYNlb2+U1hai\r\ndfRzo0zl85vO5KQRG5f4Nz0PIcWprRNZyILfojGUYXfxydouQTm7vS3XHTPY\r\niukS6ONZvvA4mkUnJcR2CE0azRW2TMq/KnA8ooh5LdYBudZIDibSuvUetIPN\r\nWKR/XCLuqVkY3gMeDIyi0GVTVQOQFvPMPi6QebiF9XmDkLg1UVBanPHgt+Fg\r\n+aFRyci8UgM2KQuMyBSW+SbjHnpfaf81VckjG833zwcEIdegT8Fg7l1/3tkt\r\naDt2YZgg+dvvx01Gad3JnwrXxazkjXvRcl7EnByRWeKgtjSYXeSiIwg1nlbb\r\nDefOX+uyCOrJHeJrdC8OSBQDvRGQzxlVJu4WuPzVmUbUKwXzgHv6lH6zitpm\r\nMf4ewQIx6T1chWtDQcM/BjECEbbhcM+hkVSh8yfHLsBPHOX6ZyVekyEM4EB0\r\nhvNn6J4iazrL7XWrpnpFVh2tmRcdHATfZnncEaqOLQh2xSGVOcJ8ZL0JDzX8\r\nx+P3XFxGXGV/8QvPGnL+C4O1Cgkjwde3PKtxQfGsahWZvlCvhA8sQCwCi3Ch\r\nRdp1BUMIyKqv2cJMw/nfA7KPoriqURQ0QCtNx0FZoMMq7vAXK1r++6G7GPZ4\r\n8PLEeBwDMHP8BseMbB077epy5sqFbhto6U0=\r\n=GI8x\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.0-dev.b028d7f_1658419335070_0.3942687419969364"},"_hasShrinkwrap":false},"4.0.1":{"name":"@ethereum-waffle/ens","version":"4.0.1","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.1","_integrity":"sha512-mdML2uvz/Owcb3VWu+rC45NPbk68avykkV7qgIEtyqzO5PcIhCyx6mULFEhqG9LK5vaGDm4HIQ/UyEH9lneOKQ==","_resolved":"/tmp/4705528bb6f052f8eceaa78130fb4ccc/ethereum-waffle-ens-4.0.1.tgz","_from":"file:ethereum-waffle-ens-4.0.1.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-mdML2uvz/Owcb3VWu+rC45NPbk68avykkV7qgIEtyqzO5PcIhCyx6mULFEhqG9LK5vaGDm4HIQ/UyEH9lneOKQ==","shasum":"2d2b1457f16673bb4701b01b9caca2e3ba50e05c","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.1.tgz","fileCount":39,"unpackedSize":2302835,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCOuq4bBJ2PH95LVZL4XhbGaI0h8x+w/QmeEg5fLWJvZgIhANsaIYO2BmbuCvAge0ceovUHxRO7eZAV8YzJoBMjffYa"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi2m2uACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmohNg//cOfOyl/E99cnCcAJ0H7UO26SKjBG2CMH3Ww+llYZGVlyhuuy\r\nSw+JfOqXNIoPKaBbGxetuBMDKbW7+KaRwffyEXRCNaIs62kUCfYGeLcvPoKF\r\nUwbW6ZHJ57J1ilCGjhBkBS5nUmmqrwvAPTl//2NRxR1BhONsi70Q0UURDRYk\r\nbkCW6Fi+sm3vmcrwTP6HLz4tFgJD7OPoVp/DfGgJF+QtQxW3rZYqhJ6Ro2SJ\r\n453+jCwm2ZJj7wx5Ivg+5eONOzpx5Pip55JaD445Ycx7flmdflRbmO4v698L\r\n1LauDupZwexB06WAYPsh87YsSvfopE192H/yO/HeA/o1oM1vgI/kTxT9xrTW\r\nttkgPSA0ExXe7z4drrfuJ8+5v41lCiEoaNyVhAvA98S4iWYZglJYE+3P3sH7\r\ny97KgZfKGMSsfw3qxzZFn8iwlnXVvZKkwJPNOQSR6yWt1RNO0Cjq2FUTFESK\r\nf6jndwi65VVveopCb7TrFfUqD84Z8dHoCg3vQYjSY9WaPlea5nc47UIrMKOs\r\nbXTCb2c7McX1qEivlFElg+ytonGA5L3DEzLrACxyWJ2L6vTWqWEjHTIJG5ud\r\nyJh7823XdYHlacozmPR1F5svdtn8RW0h3Ra1sD+y8VJ/r/ZKdjkcRLP1DIda\r\nA5pZDhP5lxlWITDNyh2BFeR03vUjHYId6pU=\r\n=YYS9\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.1_1658482094517_0.6386687582442372"},"_hasShrinkwrap":false},"4.0.1-dev.37f589d":{"name":"@ethereum-waffle/ens","version":"4.0.1-dev.37f589d","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.1-dev.37f589d","_integrity":"sha512-FeEPFZ3KFdrqCekUfIieCex3nS7Pnxx0oKh8qmwnZ2PV+0no8sb9SVla7yMigbPTVVkME9u1Iu2svN5Ib4Ugsw==","_resolved":"/tmp/91a6c71c8032ef916098e5cb0f82ff08/ethereum-waffle-ens-4.0.1-dev.37f589d.tgz","_from":"file:ethereum-waffle-ens-4.0.1-dev.37f589d.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-FeEPFZ3KFdrqCekUfIieCex3nS7Pnxx0oKh8qmwnZ2PV+0no8sb9SVla7yMigbPTVVkME9u1Iu2svN5Ib4Ugsw==","shasum":"c6790b2b0fc2d24d32794544de76e175550c5c4c","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.1-dev.37f589d.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDpCy8Vm9pxY69FtVXfsS6AhEZccAAX/9iSaBR0AtsFWAiEA6LCwK7HoVCPy/9O+Axi9CgYLdA0/uPLaOIvJbNTgrU8="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi2m48ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrbJA//dw5V4ioWsLr2Pkiph+HD3cojX1cvwPacpRsqWJLe6BPGFbRG\r\nDEj/TrZCdb8bXEPFJnEJyC8j6D7dNKTETNWm7pNK2Ko+iz2gNQtBjrMhtTJa\r\nKgLOgasswgiLmcTAhaO5BpKG5uzWOyznCovU4Dw43IziA9Nj7fWDf/Oiv6xu\r\nPx+1jjzdS+KCG/6+L9G4eOAMHEr+zZjrjhDcdBqOIilU8KEfPRyn8xs0fZwg\r\nN0z2Do0SMTYdu2OhzjYGVK4eB6nEcS4UpC4ZDHJ9X5ssDvhU4Q+X3S8bWRdT\r\ngVneKLF1n0DNkDuRGSDirQ5inYOEIqFSZ7/Eh+cEzez1bYP6gftbaZ7n2qBN\r\nMejXsg0ri/wnUo4y2318FIle9CCGkJOSxUTHe4kJqybFXGVWrhKylioYrOj6\r\n5jSdFPEeWlfA0ESNjzK7SpdsBtf4mtc3seFb2JeF0ERqN2SsNhh4bWxuMCdM\r\nW2bOQv49bsM4c/6jHWjBjC+OQcrUnWsgDGBkSIZ8DVevI6tt8Ftd8wV0AC/i\r\n+uCgsdVbWgaIfOV9NGRcxehMOHG27QtsIG2Uc7Oq75wAdzSps1elwJalpsQN\r\nUgyMopn2JVuen16lzyYcHKf1wUZ9jvR2V4SbgTAzJOGGEjCxics62wZuo/zG\r\nJgPcDqt0IsWz+aqmEDdHyLR5bwUd/FtPggM=\r\n=DFzR\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.1-dev.37f589d_1658482236254_0.6059012925722291"},"_hasShrinkwrap":false},"4.0.1-dev.2e1837c":{"name":"@ethereum-waffle/ens","version":"4.0.1-dev.2e1837c","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.1-dev.2e1837c","_integrity":"sha512-Dj5GRLgA4uI+M7NYqM8gjKwnhjBvMWhl9FCddlsx4SQ7l3/K3q5rWbhnoobTxfDkria4NsJQt2w/2S3cYxZKag==","_resolved":"/tmp/4d35c71d2dbd0c214328e95adf0db555/ethereum-waffle-ens-4.0.1-dev.2e1837c.tgz","_from":"file:ethereum-waffle-ens-4.0.1-dev.2e1837c.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-Dj5GRLgA4uI+M7NYqM8gjKwnhjBvMWhl9FCddlsx4SQ7l3/K3q5rWbhnoobTxfDkria4NsJQt2w/2S3cYxZKag==","shasum":"6b5de888587b557826693edeb2f57c0fb5d5fcb2","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.1-dev.2e1837c.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD0AomUPnZ8Zt3J0gMY4BpTP+GyFwSxmRSgPAUM83kKDgIgZh4EuwZVGilLcL1aBWsrPhGi67rkgcz0dyZHmINZ26Y="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi3pgTACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoCjg/7Bx1CCpsjgPs4pfLeSwICVFZ7wmEYGRca5+3w2CfXB6WVB0pO\r\npew5FPIkSTb0aPlArJ8YcFc253+9ayEtYXepXRNGPwRk4k6GvF/FuaZfq6ne\r\noew6E77sel5alkhfXY7xIzRabaJq0/cB9ljYAPrO6MJKRg2B7UJo55w/RHcA\r\n1kS+Fw9TqsYmvT+Ko1EQT3OF0xQJnObSD3B5b3R4ZpfQoBhOavs5RPFlDO/0\r\n1fqydXBw5xzW39Z4Tf3XU1CSYBCgjTGUqOnazFuQWete4amddavUG9nROuJd\r\nwTGondjom/UTtB3C1y43ohXugdQujHMV9TBZ64crZ+7Iq3sDpPS3ctfw/09X\r\norogHjYFQhz7Liw/1gxzQhtJN46d0oQphCXbGsz0VdOB5IdhkxHcHYG3lUzp\r\nO/rJA9BHMg58P694xcTsfSzm9e73vXF3iIHJU472xVu/pzO5M9GdOihSWExr\r\ncS/cK/9lWn8BoywtGmVnfrW/7IZHvEHdnDou3pd18Gay3uf/qnfij/9jQW+K\r\nPF63+BVeN1kFWgmWbCGNJH2bE9ckX/BJeWwrWUQj7piP2xsUuOVxHj5gvPxC\r\nOK3r+bExuHucdWKDq+Sw5dpfSimG5o0boqkyX+DtBTTFOExIiWJx9sH3TRIN\r\ntwSqxoPobk4Iq2fNVneZM8+Axc0Ylwd9rSc=\r\n=gqeQ\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.1-dev.2e1837c_1658755091369_0.6770635348076339"},"_hasShrinkwrap":false},"4.0.1-dev.0a87072":{"name":"@ethereum-waffle/ens","version":"4.0.1-dev.0a87072","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.1-dev.0a87072","_integrity":"sha512-pifzrocn9SLT1kvfuRQcMMeswRAluGF4hp9J2jSXHlKrEltgO8MbX3JaDi4yF78+9Llcd2I0xqD1cA7h7vhVrg==","_resolved":"/tmp/4c1bafa28b4756fc01e710a2eef8b126/ethereum-waffle-ens-4.0.1-dev.0a87072.tgz","_from":"file:ethereum-waffle-ens-4.0.1-dev.0a87072.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-pifzrocn9SLT1kvfuRQcMMeswRAluGF4hp9J2jSXHlKrEltgO8MbX3JaDi4yF78+9Llcd2I0xqD1cA7h7vhVrg==","shasum":"f197952513ebbb5f67a71414db5d4d455bc44fc4","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.1-dev.0a87072.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIEI62kSv5FlqrkYLW83vG6V5Rdy4SlKDN/Z51P6BVHChAiEAq4wsxE94y3E2DO43bFRUAivxu2dj3/NrL0pfT1oJoSg="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi3/AtACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr+gQ/9F9O3zXnpQMQUKFXQWWaTe62JIs5jFA1eC08DhlVxYa14rQSQ\r\nwRRjzgaLjBiegJj936/kKCmKk61oGd8U5A4eOFnoy1gZ9m2y3ARZrYJR9D45\r\naGcZRB/lMW9Bd4nV6Ngk6yZg9LHAdmTDI4RrNyw8E5rEYrcOax/38BqR/uPO\r\nX8pGDLUyAY6I5rvclrAHWup9X1Q/Q1YgzAwQRXKd/YVZ0N9NabOaygPgXiYP\r\n0759/+vbG5BooMYxqMFU7f8s3GPQCQRFi+lLZ4CXRjBtA7VQ5dbd5FqX2VlI\r\nBhcFxyg2TdnTJ6ZIB/6+PMI99XPQX8Fd3F1VKXuNZMM/MAXYft15KW5WyhfB\r\nnHNPqMtmBHMzDKBsJpDSbgXuo5iZBsbs48cKVixYAkqgq4KQjm9zVRNJ/2Iv\r\nFfxGuy9TkdSX1/fMGCbWNEVKAxjifFliOgOsSZJRgycx0VE+Hw/iXIdBP5HH\r\nVz5JNyBUJ8lu1dgbC7+jnbzOlaBaGt6rYbmxkQbE9D743Vc0dJ9uo665TWoX\r\nFNcpaPcI+siBm2C5s8wuFtS66gwJm5st59vz2oLRzRCwUiMSxrqidW44dzXK\r\nDaGriHil7d7a9qrIQ+cc35a1YcIeoDabX0QUQAQj0rYHZn7DRFxFh5w2xf+F\r\n/Cyy58lkFrCyk1gKiObJk9710Fn56CUeZVc=\r\n=52dK\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.1-dev.0a87072_1658843180813_0.7905436892514208"},"_hasShrinkwrap":false},"4.0.1-dev.b329845":{"name":"@ethereum-waffle/ens","version":"4.0.1-dev.b329845","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.1-dev.b329845","_integrity":"sha512-Wv8DAFasK9Mp6x4ZgswIF1Q0kxCw/wbHd102VnGtCjllEhzFI7dgQlNOlguQJ4NJDYgnmZiEigw/krrU0Km1SA==","_resolved":"/tmp/03fbf763105bf5835a4f988eda06d50c/ethereum-waffle-ens-4.0.1-dev.b329845.tgz","_from":"file:ethereum-waffle-ens-4.0.1-dev.b329845.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-Wv8DAFasK9Mp6x4ZgswIF1Q0kxCw/wbHd102VnGtCjllEhzFI7dgQlNOlguQJ4NJDYgnmZiEigw/krrU0Km1SA==","shasum":"226ee0ed3d6577608adb9bbe6211dca0aa611e1c","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.1-dev.b329845.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIH+te5J/aeBKJ72u9gssvO9hMhAfjd8XiKlXNkH1HquFAiEAnihdIbss5M/IDs8mbbWhr2RktSNV335vxvkPnByf++E="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi3/bfACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpybw//Uxopx3F8HUYV70JTIh2IZjXmzN98FVLEcd0eudEqzcaYbqiv\r\nkhwtdDmqGDuhxVXWMB8SO5hKlMGd+ATUlG4hBN280ygBCallbPzIMq/SavkV\r\nEoOow2osIGuGsNccqJISJJl2F/Wxb+BD2ddPJgLMzuKdMY2wxW2zflqCKP5I\r\nPRKG3sQWtsIEQxhHfhD1Z5Iu9pTsn6vx8947oKyeybg3qV8U/eSD3vz91mYa\r\nr7mi8ZKdxKnCgfaPiiOoVCf9LlowMc4neDFIZ7HAgzpm1ulywUditGRe/Zfv\r\n2NHYU2YM86D6ZkVxk94C5kpCN+6eGrT5Y6vOGN0LENOlTz+EKdaN5scb90Ar\r\neF/jA+Yqq+eY95aYQLHyxhINuWa1/+AZKMq9xsRxY9qe1TS/cl/td0aYkFO9\r\nRr6CjBxTz+rvQ6wQw6kJMBPR//p2/n4s2IyxiuMzke0oZzKue35EryTVDv4D\r\n51coKsN/kyVPxHJl34fpyK+0a+hlHvuw7hjfIM0Ofmg+OlaqxP+6dlLbVN//\r\ntHIU0IyqfMVGg4PQCpMI7MEtbn+Dfkf+KMZTBVm39yYRfh/7hoGNZz8b3U3F\r\nivEF64KrDStLy5Kp5BcJ8UFqdaHWPFEz5mbueSHOwl8Z7d+i8NuZ5V6Fu9SW\r\nVB+l+yNXeiTeJt5ncuotjnH2PtuRYRLwiTQ=\r\n=cSNq\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.1-dev.b329845_1658844895650_0.17198365045756092"},"_hasShrinkwrap":false},"4.0.1-dev.c513a49":{"name":"@ethereum-waffle/ens","version":"4.0.1-dev.c513a49","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.1-dev.c513a49","_integrity":"sha512-VG4aXzgANjllk4d+ZZGAhRjRcMuQN75H/jjI+WdPBEQsN7hlDyCVoG6J/tKZTcYfUI81LuB0+1gbcr2h8p3Irg==","_resolved":"/tmp/b41961e7561176b382ad2d4567778872/ethereum-waffle-ens-4.0.1-dev.c513a49.tgz","_from":"file:ethereum-waffle-ens-4.0.1-dev.c513a49.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-VG4aXzgANjllk4d+ZZGAhRjRcMuQN75H/jjI+WdPBEQsN7hlDyCVoG6J/tKZTcYfUI81LuB0+1gbcr2h8p3Irg==","shasum":"0e6f618f128c797153faf2b8cc06a242bd13bbb0","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.1-dev.c513a49.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFo9WZu5fpTugjhNkdAr56K8wGhPGsCYVjTID+uWpUE9AiA99+ZtOypOIVlZGLxpv9C9y8p1h1W8I0XX2REy0Pig4Q=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi4oMLACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo+DA/8DQJaer+ibPMg/Q14/hazzZra38stJ9fqZpADBfSzGXJV/tZF\r\nxjoZ4UOS2gNpkq7rcMIy9TYstfW2qVBOSI5xKhF0QsBZgHCm+ygrgAbfxnA/\r\nFpeLG+zQmDRPH08MijdQcpRdNyaxKmKffJxctHmhGG5EHnpzlCstTdlOB8g2\r\nF0eI7LoNGUVr1xMbyUV8hDG2C0+Gn/IBDpjY27nQRkZ7EBBcrnImnfjBFrJR\r\nX3Z7K1T8mes5M80rYyI5FetmeFLlDDrS8TX39PXBUr3l/VC8AnqlQsbYoBdW\r\n5EEw9se3fmFnwqHBU7me1KbwR5h3jX2A3Ab6C0g6+3pNMzWrmhGJcrxCjWQg\r\nEHqk0/pzQyODtyS4EKHeBMfQ821k2VEn7ciGKg/ivdERlOKWZ8bESOmHNHvF\r\nUmLN5Ozkn/1wodfu/2ScZKnIOLKIcoYp7ImAU5CXYSbDcrykAb8+4lEC/ONV\r\n0wiobiGufN8A3J8wsD1mWgaLNysHvdcO5/7GkNW1YAf5DNJ4iVZZkIpsU/Tu\r\nO8BsrNfRUHjcMurTTy75IpV6T2NN5aV1AAl2kN1c9g6joFagzCL0Z7H0L8dp\r\n21epIlxJ/OPVAE3dM+vF/L6eJG5A3tt92kFpaNE05nJhEhvHyi9pLWW6K0zU\r\nmyKDQkmSaAfd8nigEeo/uv6MHyh2UFKQ94s=\r\n=f3i+\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.1-dev.c513a49_1659011851658_0.6135497825746026"},"_hasShrinkwrap":false},"4.0.1-dev.382de5b":{"name":"@ethereum-waffle/ens","version":"4.0.1-dev.382de5b","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.1-dev.382de5b","_integrity":"sha512-GfwCUHEF2NM1Y4vofeFmc6bG7otmxugwr1Us7obpl2SbAUzyEew2cDAZkyiydCSeSK2ZXYeaeCgR9PF61XGKpg==","_resolved":"/tmp/1228c277c82ba0503d35fc0cf8f51365/ethereum-waffle-ens-4.0.1-dev.382de5b.tgz","_from":"file:ethereum-waffle-ens-4.0.1-dev.382de5b.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-GfwCUHEF2NM1Y4vofeFmc6bG7otmxugwr1Us7obpl2SbAUzyEew2cDAZkyiydCSeSK2ZXYeaeCgR9PF61XGKpg==","shasum":"2a46b2a5bb66039cfb9068e7f11712913cf780d7","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.1-dev.382de5b.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGY1MOSYuKSSSvahO5dvIbWArXNCb5IFTKOrn3EjJUOPAiEAg/ERGWnNG1kFvSk4hVNAR6x+sLjrgZ6llVh04onI400="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi4pyLACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpeIg/+M0gxNiQNKGHLuHg/0h/TyEMCLGi5fnaHZ6RAOuKylt3F5EuX\r\nn/oXt45b7+MaQQCnazQDD+E7LjhjfwB7zRyASd+SRz9thDpvmuWymkcrerUs\r\n9r2HNtY7il0oT2BLiU1xHP7ws4YyiT28SwavJh4vfp0Y3zUHIt7vRgybdGxw\r\n2oOygjiSBR78PjK7TUFcu2Ok/U05lKEqu9JAMT+B3YYY87pZ5gxbN/fz9rjD\r\n8w+a148n8uQTJ75P8vSyjAXd0wcqB1P5LqgLSQ9QQbLac0OV7x6ZPscc0CrN\r\nvmQWooCHYpL/3FdVJLRAX6NtcL98q1w91Uzs9Y6xxCSxDmwmafQkx7qU5Rj4\r\nK2ZnfMKnMZhc8K9E7pYiHqQtQdkyMwIbT6kYghN6Jg54MqzmhoJriM+5I0Q1\r\nktwZg8q7/lisOKMITbj0UaYQOq0ieo0Bz+7Px3YvlG8csiq9MLcW682RRpVW\r\nBDP2CdNwo/JDvLzxDbuGpQf80ndh5RAMOibEsNC/O2Z/sSay/6qUeFVV0Vvk\r\nRPNl1PN0bY9hiEcKnLn2Uoz3EmJHeclzXpJY+yBygFmjjieCIW3n2xC1zLuo\r\nD8/1OzKlh7Ota+udJjpMtBW7FthG3juXLA3e0xhhpQStzBNLhBrxHbryI6vt\r\nhMUnpjN8Zs0JONeEJT6PlRhuwLld5Za2kUE=\r\n=HRar\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.1-dev.382de5b_1659018379698_0.3869294775586116"},"_hasShrinkwrap":false},"4.0.1-dev.4e0598e":{"name":"@ethereum-waffle/ens","version":"4.0.1-dev.4e0598e","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.1-dev.4e0598e","_integrity":"sha512-FyppOCbXqBrczeC9Gc0nsIaHoww8SnvaR5Ol+p8wyppeTnKlswxfi38t6GY/KSMYNKlzdhBfUzbkcbKRKr76pg==","_resolved":"/tmp/c76f1815dadfdc5f24aba6f540c7cf5e/ethereum-waffle-ens-4.0.1-dev.4e0598e.tgz","_from":"file:ethereum-waffle-ens-4.0.1-dev.4e0598e.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-FyppOCbXqBrczeC9Gc0nsIaHoww8SnvaR5Ol+p8wyppeTnKlswxfi38t6GY/KSMYNKlzdhBfUzbkcbKRKr76pg==","shasum":"44475bb24cc60c8f0d4223240b4263ba1b325739","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.1-dev.4e0598e.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBgHjOTtFHFOSXkHzqLbD5YfbrbtV3q6A9aeoLoviwbyAiEA1jQo8TnUy5YCrVQZOZnXyurF0Y9pvN8187ppNY8AyMA="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi4qqyACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmrbwg//XOvDvQ7gypsr6scp7ZHlig9lwruvsjcy8r7KUf+ABAImt5bj\r\nD36yu63f4I/m5VDt8toUwrzQ++lcLG4OdIwdXOLJkQNLiTA8EMrrXB2eAiy1\r\nSMPwjQA8cz8wY2lsfrLGwZ26PlHnGos9N+kha7JfjKfDkQ59096zru5LM4Jg\r\nJqEJoZAYIC4eoTb+sjpZPckFPNV4WAmnYGFbx7Nw4wV1KZBjdUsZ0JVgQt7a\r\najiPb1C2ci+s4Vo4v7fEp+jCu3iByAfLWQ40b8jYuQ7lpHuhw81/4lbcAMaE\r\npmTiuyf51GnkExypyS6S+ihvCdVuXkxlhN7WzBLkqLEbvAJUqqpph8SK2U/G\r\n3VoCSII1aPU/HCLHucURISAuyT691IEfj7tGZYc6rEBSeNGg4gh4ATkbCGI1\r\nloKj+amoVC2KhS2noJUUqMQMborbQGq0xm1WO9ZwgVtJfgrkYjNr0BoNLn67\r\nHKL9equbuj1xnfMqcN3HPZSK/2LypzdYPr1UAgE7Rls/fMdXa7MKzBACI5eY\r\nOPOl85as5vV+h55PSdcb3hMsNF2byd4we4AIQBmwj2MVSlAd1U0KOGf0G651\r\nt87L9C38pAr9wyAY4zY6bShAGHOJfIaKd7CzsUhEeieSHdIXhqYQgOlDG/sD\r\n22nfvzmFnroSsmtQ/Jd0lF4PmFH1Ble88lA=\r\n=MR66\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.1-dev.4e0598e_1659022001917_0.8121012172195263"},"_hasShrinkwrap":false},"4.0.1-dev.1fe07bb":{"name":"@ethereum-waffle/ens","version":"4.0.1-dev.1fe07bb","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.1-dev.1fe07bb","_integrity":"sha512-mNjrL4+VlkgRQpyFubBfIEEEANN61uDAAhd4xXRF9+HlBHA1BEZxqPkdkUSm4EX9eEbvN6CcyqSEcZIaBQC/Ig==","_resolved":"/tmp/69575f5def58b13cb0dce23d0072c8a5/ethereum-waffle-ens-4.0.1-dev.1fe07bb.tgz","_from":"file:ethereum-waffle-ens-4.0.1-dev.1fe07bb.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-mNjrL4+VlkgRQpyFubBfIEEEANN61uDAAhd4xXRF9+HlBHA1BEZxqPkdkUSm4EX9eEbvN6CcyqSEcZIaBQC/Ig==","shasum":"4f7ec906e103b08789c5a5fb68ff6d46568974d2","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.1-dev.1fe07bb.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCPy3S3gT2IkW0Bi5jygx0ubgw0/bg6YRgiD+B5l4s0TgIhAIMC5zbnWwoJ8K3zMouJK2bO4o2jhPbMClwPA7SP97rL"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi48ijACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmorqQ//bnTt3m6af6Xu1UBZTH6udy37H/u8jqg+7S0Zj4C0DwhJU4AJ\r\nDKArKO1UPwvI0KTVAByZK7Cw+m8rcG+9tz8iprF6Ys/Sa8RgsEplzPK7ZfR8\r\nyQxulI/9tdH/ujMPX7KFMoHgJ50ogogbMGDuCA4/LRQ/LlBSHPLPPhUyIBCS\r\ngkPHz++/Fuyks+uVMwQPDZZE6er9icNwDX25RbwrXgIwXd5yjBTUc2Sn26GN\r\nmkogBAux+Zmq+Zz3WbT4tJ+QfxoasbljX1enmyXXpYdj9nPIg58qZFWSfYtw\r\n+S/cp8JV3z6eoDUeXrDNRcglEI0jqzgk74UIb9fVtN6S7lYbGv4GKK3Fs93j\r\nmPQehDHGaCC5qx3oDn1NtqeocKJ7Ec0jVSMYrA1rdxpEN3kewoGLyyjqp5dT\r\nfOyqSe/UNFH1IWYrClypuMr2TgRV+PRucZpMHv2MDWE+lnZSlTTlUIErXm/6\r\nKMIQWMfkmsKck1po5jfshoHmIc+5x5TE6iTnO3gfUJ5RNpPKIIymOyOl6OLv\r\n74X0kW0uKRq/SPrkifhvSRRIzfEjks+J2FaKdf1FQIGlqX8X1u7j3r+B8kD+\r\n7Wl3eSWoFk9unfdLUw+0HWO8usY1EiCDziHtxjtyrk0BGsDt0meC0CSfl11C\r\nKjDB4/3ocjK6c5fmjBv6TtKjVtSxtQuOIbc=\r\n=Tjv/\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.1-dev.1fe07bb_1659095203426_0.03278711567165282"},"_hasShrinkwrap":false},"4.0.1-dev.bd741a4":{"name":"@ethereum-waffle/ens","version":"4.0.1-dev.bd741a4","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.1-dev.bd741a4","_integrity":"sha512-FDNMJHw/tlSTkkeF7sUcHtcTEq7BLW1MFiPVDrBEXNUFOMfHc+ac3SaNOulED2KSuHSnCJyRYAEzDt53lpAN2g==","_resolved":"/tmp/e9c67f836fb00769d5f4638b72bde940/ethereum-waffle-ens-4.0.1-dev.bd741a4.tgz","_from":"file:ethereum-waffle-ens-4.0.1-dev.bd741a4.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-FDNMJHw/tlSTkkeF7sUcHtcTEq7BLW1MFiPVDrBEXNUFOMfHc+ac3SaNOulED2KSuHSnCJyRYAEzDt53lpAN2g==","shasum":"acf61d7aec48539592ca205bebb442ceb216e1f7","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.1-dev.bd741a4.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDdzonRhgtmgyWfMK533BRgsZJ7MVhzxPcXZzuIbdBmqAIgEsZ8EMgso2dRBq2G9JCKZM5Kqntc4f9hOKX/J5BwnAs="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi4+Z/ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrRUg/9G3vi5lcyyFyIpnKagEGgmzlEOGRRlqaIJq1mIzESN6iTIrKV\r\nPd/6BF7QVp1VQkzaG107KiWqGqnZuiIQAY3JuupLNQR38BehM0NrGmpUzK8N\r\n9Ezr12j+hhlaO6+lVUX7kDz9Re+uiMgCRS4PuEUi3XS2mZJTZUzl/md68wgD\r\noTt8ZAE2WS03ywAoNSEPV6/PJW484BD5nudVrT3DgVgNEbDDbstXTGD4gsUM\r\n+Q5YHoTMF6bLhysslYkjd7Du/7dHq9+kB1NpIezYVkgUoXBMPHE9csBl099+\r\nzfOK1KuedhjxzzgKvMSA5VhFGPYHJ1iPR+JgMbxnrhT62VaWUeej2VCwJhRK\r\nogK584gWkD7ok/hFO4yMwTNLeim0IIbSZoMH6eWdpWMF5beQIqeEC9iee9Ki\r\nwQBWfln14ymwg6GAFMedKAmS59tXgC2RVeoNIb7F3aHMp7/nz+gCh0Yl+7B5\r\nAPNqjooVMZ9pDfL6ELggO1B7jvjVlEAK5CDfCLyJyuRzn6rSoAEXphZfk68r\r\n4VEuqR3UjxKVC7eA+jwEJTPPAcNKE/0jV1zJhZI96TKKoBGdTvfrQYWMbayw\r\nJYAbqJDn/YvU4wq5YIMycM9+RTGcfscQT8v5R47z4kWvcQZRbJIzaCdoUo4o\r\nwJvREBELk1hX2KhOJFqsglUrddFXClfmfHA=\r\n=m5FI\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.1-dev.bd741a4_1659102846819_0.981824147400745"},"_hasShrinkwrap":false},"4.0.1-dev.3b7020d":{"name":"@ethereum-waffle/ens","version":"4.0.1-dev.3b7020d","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.1-dev.3b7020d","_integrity":"sha512-m6vehVDPoVMODPh81aHtyfeX1HT+nwidtTUFCwU2jfQr52vBZzIKKrMnv/gd4voqu1vT+etJdbxo/CRO9bJ4Rg==","_resolved":"/tmp/60b75234bc9113eb91820e8c9ef84c7d/ethereum-waffle-ens-4.0.1-dev.3b7020d.tgz","_from":"file:ethereum-waffle-ens-4.0.1-dev.3b7020d.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-m6vehVDPoVMODPh81aHtyfeX1HT+nwidtTUFCwU2jfQr52vBZzIKKrMnv/gd4voqu1vT+etJdbxo/CRO9bJ4Rg==","shasum":"e817b98f2a3df3b50a71c358f8b309bc3baa20c1","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.1-dev.3b7020d.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHWEH6Z5V82k7Xh4ETCxvSmfujyzT5Tv90OZXKJ4+BuYAiAZLNG3czfHb6+RgWG4KZ2ANZ6liW6hhj26bKh1vRyF0w=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi546FACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq4rQ/9GVsAguYYlrcZR/5KKsMD74uyc0mxrIZef15+u56QMqiIFOvG\r\npeIh2oCAm9+8nKVJjtZdeNEsoaUTj9gHJS67FJsZwLkID6HF8e71ngzHhqE/\r\nlRxDln22DKy8BBmZSCRPdb7S1zISSHmHqBK/jmWWFp2QiuDMe9AbqbvvWy/g\r\nQyC7yFcNisrFsgxan9ttFs4itWql+nz2zsN9dNvRDxbbRgjkUrqT9G1n6mYh\r\nFuN8XPv5EL86F0ezzKfr3Aeqi1fDuyWpW9gQJp2Ph9NvUsj9cyQN7hFBl1gy\r\nCeDejrXq/88FkuGfr6jrIW5f7dyQN3yDAutMFBi6unYAYgy1toiGBB+8wo71\r\n3adZV/4d7vyRlTnLdjEvLLcIUoOdcroRyGdrZLj0U5NwFT3tjoGlRXiw6A74\r\nrykRXuHhfFlYPgT5dFvZoDtgW6GdWyBAm9yYa1jzSqfplSlzOW01yrb9VBe4\r\nn8Z4NURFIH9yL9gbVUYv+/WCEXQK/q9wKXXysW/mj7HkrYa8NRz1TW2B0rwl\r\nWjgFRbikmDnVeo5XjKCHdjLfeQXW4d8+ZEr2OJ23yoi+EILJUPZsLdAPMDHV\r\nb60oycDzxIBcnBRzEhplgHR0hWjmURUvB3nqniiEZpKNE45sgAPlmDuoMb68\r\n8yMoWblZelqgmeGord2FhgYar2YSdFLP5NA=\r\n=BYRB\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.1-dev.3b7020d_1659342469736_0.14254913873037234"},"_hasShrinkwrap":false},"4.0.1-dev.0c13fb9":{"name":"@ethereum-waffle/ens","version":"4.0.1-dev.0c13fb9","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.1-dev.0c13fb9","_integrity":"sha512-M0GS8zVZnZsRryomA1gh2GAInQazAFyOikB8+qttb22Wpnp2XH7Xi/G6moXBgLeJx9610wX/viY2lCNdmUSFcg==","_resolved":"/tmp/1162ee95baa2c117df3e91114749c1ce/ethereum-waffle-ens-4.0.1-dev.0c13fb9.tgz","_from":"file:ethereum-waffle-ens-4.0.1-dev.0c13fb9.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-M0GS8zVZnZsRryomA1gh2GAInQazAFyOikB8+qttb22Wpnp2XH7Xi/G6moXBgLeJx9610wX/viY2lCNdmUSFcg==","shasum":"d99a6da895181175e4a7c8c5082d99c0ab15edc8","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.1-dev.0c13fb9.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICcH3s25fPnXw4a1YuQIGk1cHlZ8BXprK4bhZIFUVMdsAiEAuI0O9kx1klKUNnqTsoC+vbzhrnKzD5j9PkDr6jVb5U4="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi55KiACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqp3hAAgIrj4gxAv4ZxxGqrRpcWPSBjuH5YOXbSg2r0+qHEQH7H8/e5\r\nniQT8AyJdUENACM9a2c3Ye3uY1TL9EZrmT4aPVwHbZ1yRDBl+ONmDfGH5qNk\r\nnfFrN0BDjRzIhQ2Cnwfr3/XVHl5ruzX4GUyIaRIUISWOYX467hKgB8b+2cKW\r\n1EAGbSLOvp/SNrviZur4wGhiB9f7oi8qq66woViL6GsOiJFCpvIgjm5mVcsm\r\nzoj/MGYnUUJEX4nfz8jdNotd7Ekwhoaw5TycalLq0vqoXkNL9XcwKtDjfFGY\r\n32Ws2z0+UIlNZesNEsRaxLbDH2cS1S1zTpu1ma3n+bU4fU10xiZBTKTqApAz\r\nrKQvmJGBNsozt2GMlSG8au4LcDLfZjxb8j5l/rrQj/IGzQ0nav7ispycqLkY\r\n37pwe4SvEFmLO4wTO8WUywRUKW1m9DYvjcl/T8ZC3aNC/9PUhFzILjET9Bj4\r\nn7mQG46v5AWZB/dfY5pBIp8PIWa/Ug2CyrStzrZTwzT8NtoJUXANnKGxXIFn\r\nQmX/IGZi69zrVLUxFR3LQ4IekarBnzjDUZS5s/hMUfkRiIf2BDKkU5eI284O\r\n7BgH+7cTGC23mqFN7m6SJpikI4yRPH+wZEL3WJzKHLJrYB8a9zMdpFzE4osn\r\nbGZOOaTj9Q8eKWetlMDaj/RTRb92kjtlR0I=\r\n=MdiK\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.1-dev.0c13fb9_1659343522466_0.4807032166766938"},"_hasShrinkwrap":false},"4.0.1-dev.0f5af9a":{"name":"@ethereum-waffle/ens","version":"4.0.1-dev.0f5af9a","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.1-dev.0f5af9a","_integrity":"sha512-eG5J7mWA0z5aNNN5ThziPPfivqkBhyDcAUUk97sxnb+9oYdmQrmmkYpd4zEyMkxgNkTiYOpu2LwR8+WN8U8RyQ==","_resolved":"/tmp/712e27411bebdae1c8a1925a11371c7f/ethereum-waffle-ens-4.0.1-dev.0f5af9a.tgz","_from":"file:ethereum-waffle-ens-4.0.1-dev.0f5af9a.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-eG5J7mWA0z5aNNN5ThziPPfivqkBhyDcAUUk97sxnb+9oYdmQrmmkYpd4zEyMkxgNkTiYOpu2LwR8+WN8U8RyQ==","shasum":"b0b1eabbc46b0bc1ad74c6a52143a39e5bef60ca","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.1-dev.0f5af9a.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFZ7y+xwturpmPOGsCC8qONvE8TTr142CS4Yy6JP1i39AiEAyGyJS4uB6CxGSz99IEWCgZjSRT1JR9IzUngye01Bd24="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi55rCACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpiqg//WHkBGZNEYXkQ7jvMXUnL10C5iuyuwiisLH3RW81RUiGnpn3B\r\nunF5+EAtbQo75Dds7JuK9zR5XflIIuGlDm2K3ZjSOB/g79dhLpZV05Tsj6s5\r\nkMdWF8/BS2bHI5yatoNdJk1o5y+/WktE7rZrLLpLMuLc5ACYabKOkrboheDs\r\nB6Cu0hGHxqf+7Imok+3Oivxi612ZNyb7cYxIxYSUEtwbU+SJQDWDI7fyYkAK\r\nhz2B/79LQdU30KSYoHBqOi1XgpYonbwZzDxuMBreWxyQlfZwg3bFjZb1m7Ta\r\nobuq7nLmrFragf5NyJoMG+W+M2HO9UNBsZ4uRzTdhVokq0takxpbYfa1WE1B\r\nPKEQbpiev/CDdCgekHaFssqVXBo8rrAuZ2PX3KGvCYESlksrYIzql0ezoK+O\r\nQVlgBAqUlH0RzVftlqHT35EcGI00mRcG7wlVYKyw5m2cVlr+rEo4v3Y6AcQn\r\n4Ax4TDl/GqdiS0iH/YIXPfqD0Nm+wYuwcms1h3/2CK8JRn119IwIWCYtoiGV\r\npvyo8ouzstbyl5V8ECSuJ/D+r7us1UZHXHiQJ+OlsOxdMQIQBVcpDmp2bSJ1\r\nlrsjXTqs00vv8vQKiX5Gj3ZQYxx/6YyM4Es2cdnhv++lY5rYTtkyJTe4wXsS\r\nbVdCW1TYHzFOPSp6X8A0DMyJUb1dvyPfwcA=\r\n=IOZ2\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.1-dev.0f5af9a_1659345601877_0.5143733859622126"},"_hasShrinkwrap":false},"4.0.1-dev.d1f8ca7":{"name":"@ethereum-waffle/ens","version":"4.0.1-dev.d1f8ca7","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.1-dev.d1f8ca7","_integrity":"sha512-aKBNKFNEpWvrghhZTX0SyMGHKwiXyKNMlFfTJ3knGdr26+HTDKkeBrnYcc/EHaY1QplT+q6/5mpm9JEihUs8HQ==","_resolved":"/tmp/6324f9b2992b49f4965bc852f6811b93/ethereum-waffle-ens-4.0.1-dev.d1f8ca7.tgz","_from":"file:ethereum-waffle-ens-4.0.1-dev.d1f8ca7.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-aKBNKFNEpWvrghhZTX0SyMGHKwiXyKNMlFfTJ3knGdr26+HTDKkeBrnYcc/EHaY1QplT+q6/5mpm9JEihUs8HQ==","shasum":"b9e2b90c4cee991a8b5ed851a4a36871097f233e","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.1-dev.d1f8ca7.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDxvsq2rF1alsJHxCFZtGPZAF/87Q8lIcGmhzV7jMjfLwIgKbnCnabu6CFkY3EKrXKsf28WAihT8vEu3xML8M8ySlM="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi59s/ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr2pg//T9H5l0TAlfaGB6I/ih8p+zn9GwZ6FPz2wi19200KuF16O0N0\r\n04R6wmTvzdGFlq4o7qP1Ob2HLAgzq0ixVPWDJcZeJ3MRB+3tlcUQbdNiFDfC\r\nf4Cd1oM/fxGHU6b/jLuKCkETKNrj3+0834Te04JhkQ4oRM0YL4bS3Lu9YU1T\r\nV1njckKYccsR7c4YagEfATrM2wvBccfsml3VADYdvFjzegiQCC6VUu3UoUY+\r\nyXPoxjc0Ef+JxcPQs8wFiUpKX89eUkHornTcvJ9ZrBWuLmQbuWyWpl/X0GaJ\r\nqlt6VYBTFaSs94n22QZsGHNEj+fBh566//eNPnG6BjdpDUfYoF5CsfkfZoZY\r\nwHtJKkATeWvvYjPcc9HHOJ32cMhagPuTIA9zpx9Gv+zvza7ckgZ+P2i3N0lF\r\nTlQjg1vj7PUBvFbeouLfL+WFU5El1Hxc3yPeho/JxtuI7PuAMbvywj0RfL+J\r\n/OACTT0T0ZSyuh75vKcgQ6BO9gm+8F+9P8FQ7CEvp1KxvpVgmSz42eybJ+SC\r\nSNOpuYaFkYkZTqmBCtVbut0MCd2N1c/B8Do3SnOG070jCMjH0jPwrSHZa2HV\r\nI7oPLvWduNKQDB86Wwr1JnhxiS0cNz3c8boXdJa/RS9Jjb2hRmBidzaEOJDa\r\nq+08XL2Q7MGLKgdfTyAktSgbhMTU5XpNU/0=\r\n=UXgS\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.1-dev.d1f8ca7_1659362111168_0.22542908473651013"},"_hasShrinkwrap":false},"4.0.1-dev.cae5bac":{"name":"@ethereum-waffle/ens","version":"4.0.1-dev.cae5bac","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.1-dev.cae5bac","_integrity":"sha512-s8cc0f2O5xen5M9mrv1173IL8Yk7xCL7doIm3ivG2Rtu808vjQjAbzmG/hb17Js2h/59Wg5sd/x718Nlx9qUNw==","_resolved":"/tmp/1041e608c5474924b29c1d8e4a27855b/ethereum-waffle-ens-4.0.1-dev.cae5bac.tgz","_from":"file:ethereum-waffle-ens-4.0.1-dev.cae5bac.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-s8cc0f2O5xen5M9mrv1173IL8Yk7xCL7doIm3ivG2Rtu808vjQjAbzmG/hb17Js2h/59Wg5sd/x718Nlx9qUNw==","shasum":"f3d54e476bf6db7aa23c5eb8ceba439317b21e21","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.1-dev.cae5bac.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCrn//coewCqjyTRImq7MN2GbughRv1XwV2WUhXareCZAIgXKJRvAh3yHZkXlj9BGPZ4pwVZubY5jTUqG7TRscB/tU="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi6OAVACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqFaw//WyZLCCv6fBdC9X5jL7rgZ2GC+yKrZZRhzqct3tlO/JHM8+KX\r\nSnj8ejp7Kms0JnZw9WMJDJ4eJdh3cd6FGBlVEZp6vpBMZRQcdl254kiNpapx\r\n+NZ9xBi0IOBGa3TcURV8JdzRM8AC+MN4WGEkt9B10CR75odj9/VS/wTBEtZV\r\nl1CrwMckMh1dU3QSf1z/aAA5TtHbHZRyxiPlCmWngwdHUWQXodOIb+zAy7hX\r\nYuQwUsPebE6OcxExlzFoEP7fB6QOS05aXOECd/Sks8htn5sm8XQn4Vuu7Rh9\r\nS3xip1bStN6QpKuPmOpotoXoRSYsRl9sRpOiQamoXFenrgQ3aVpCQ2U3QWeC\r\nY7xrxfj8BQy1Eh733zLqY/81QdZev7l8NFArHjSWBU3vGsQyJNSt6dePKVOV\r\nrbjUXXKytsuSyg0nITcTheI2dSCDGAzGJmkJMmJwabWeBHNqjCSBTnbfR5mj\r\nPRDanSre/D1RAZNoqvdwus0N3j5TRRdGOEc+tEO+4/xBZBKUNWIgVDVPU0FU\r\nA5LaD4sJcM85+to8jci0ZjBIFrzaV3SMjKGUgmst3vIroMddl/xo1mBmNItB\r\nOrKybG9VGvIaUfd3XW8b0lBpKirtV8rbJ89CakPDjjzWf1ujCMw7XEKOU0gR\r\nMD6YOoyl2aMqgsQMCWq/PFkgn2lysRf9nE0=\r\n=c4Kg\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.1-dev.cae5bac_1659428885694_0.045443276476167416"},"_hasShrinkwrap":false},"4.0.1-dev.41bc646":{"name":"@ethereum-waffle/ens","version":"4.0.1-dev.41bc646","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.1-dev.41bc646","_integrity":"sha512-e8j0WopcchJYbb3OxP6+c8zxvMWPD1FfL9eMKCYccy5PdyFZIZDK3JpbGAvZ+F2Z18y5Hm3CgjwWQPRdaS6PSA==","_resolved":"/tmp/b3374e5a3e784b9a439d05a618d60e8c/ethereum-waffle-ens-4.0.1-dev.41bc646.tgz","_from":"file:ethereum-waffle-ens-4.0.1-dev.41bc646.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-e8j0WopcchJYbb3OxP6+c8zxvMWPD1FfL9eMKCYccy5PdyFZIZDK3JpbGAvZ+F2Z18y5Hm3CgjwWQPRdaS6PSA==","shasum":"67d400ce074c2cd45fae95aa79b99d5ed71bfc82","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.1-dev.41bc646.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFHKT1LcgPzn+6tVwVwss2LcUDHblnD6BAobgUc1JHorAiA18Us2z18S02vzZcHm8qic6Z+xMCSB7Ek4p0lFWVGQ/A=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi6kMoACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrCzw//QanA6biV7woPKnY0tZDatq0zPfVTvQNeaDn2aiou0r0SIqPr\r\nSB2SFen1tIO8wQ/6F3aaggl1kiYQ8ALclb9KNOpOiXJKDK0cdDdpU7cbrX6M\r\neSOiAW+gz0g3OIGKYqmThTeR2cjaeC9ZbGpOtNpSXy/3J677EkZ/sJEDoynU\r\n+V8QIEEyhL0txRqLXIfPkcUaU+Dam/NlHONDNPlZReBlEW6ScidiakG3YheX\r\n1zkakCEaPfO88RrDJHUCzJHdVHV1iGJlZtS9zvg3hQFsySF6m6SSVsYqHyUg\r\na8p6xHEFMLMgRmIoLsZ592RdlhrMTU5k1oXrsotDfQa0+ZuIMBBX9ROHFhtf\r\nu3wbrotaW9X2+WiU4BF9HKHja5Hw2vPgWgnN71ov0YPDqKQnUfHGbb41UsAh\r\n3cSTHqqEiLKVvLDcJ5Az+TaU6R6pMnJIqlc5QNMkOtm10x7kWRtJurLcMzsF\r\nkJtYmEXcjbFw+OVYfZzNJOyTx8KuMbo6dgmPAWun47jN9Jm766pOI8nGpOj6\r\nM1aO3fh8CKU2SIi0wlXFQ+XJzjHajDm2twVnjiuv4IhTQVbDUHfMnlvcbD90\r\nBkGOKSAfXond2vSyfAGAH1xCYUn+FCACDN31Jh5JATAZ8BeeMd+BmRxsCAD6\r\n0v9cL8dX9KUp/50sGeNxgnb2rvdmz2hfsoM=\r\n=R0hU\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.1-dev.41bc646_1659519783932_0.25060869664143914"},"_hasShrinkwrap":false},"4.0.1-dev.18b219e":{"name":"@ethereum-waffle/ens","version":"4.0.1-dev.18b219e","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.1-dev.18b219e","_integrity":"sha512-ncM/eQSiwMtZAXD7m1FU4NAFjTgclmjLab4OMA3WI2W65PjgIytR40V+3u9CY6HQ3lUX8ccg84r56lcYlls5cA==","_resolved":"/tmp/55654f324f34bae13ea9c9698243703f/ethereum-waffle-ens-4.0.1-dev.18b219e.tgz","_from":"file:ethereum-waffle-ens-4.0.1-dev.18b219e.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-ncM/eQSiwMtZAXD7m1FU4NAFjTgclmjLab4OMA3WI2W65PjgIytR40V+3u9CY6HQ3lUX8ccg84r56lcYlls5cA==","shasum":"40b5282f945c26de132edcdb00b8d29d4f08fb0a","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.1-dev.18b219e.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFwSCFeVfjj4CfKHpPui0Q/Yr5h3ysWdSY/fAEJAxIysAiEA1QMohn+TI47XyFXSnT3Mz9VjFPTSniYtt/r815iijho="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi6kRvACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpDKQ//VEgU7BViNIAd7pQSVg3q9rQbWDFWsuiMkZn7noBs2G0EkKCv\r\nNMRMcxREvWbz3vt69uOXrfb2IZnynm3RYYkDb0qgMrN7+crkCwCjMss6I3yj\r\nn4zzr2cIIckL3f0eQISVnrBqr5+tZBk8IEF2rY18F1rLtwbR9j+XdYHgSLGB\r\n5zHnBNBzJ0Gj8+01hlxiMuPCTRp8QCjb9QCDB4DirNgUaQfF8AOjMKqFj60M\r\n4DcUxMZTgUK/OS0cERSTpidZcSf4rJDTKKWWPAfhWc8qm10JBVzUADYUlvcK\r\n4ltuXF7qmsXvKtcsm+cq0SguOU7H2kyZjXAef3kBp3kewxcsELDagiQOui89\r\n7lU34vMxhdhaVy5E/hjJnPXu2YMrzTM8yzlTXIWvcQ6sxOJwuVEZ4ySc2Xy9\r\niB72z+5NnYD7PAu1H9aPS1EKI+JK6UkHoGDEjssW4m5mMCltt6WGnsQYY41i\r\nX8WopEDgy/BLhXFtKkWesetYiHB5no/vJ7RuVMmTZVrdrZd0brlDTHPMXK3o\r\nx4J2eTXsuu2mv3lsKw0NDE8yzWthRAsTZo3dXujqUUG4dPiFuUCo21Bzi5bj\r\n4UH7hbIer53LJWfZTjj/QLV7beY4+p99F0qWU4+UCnf46/+4GBFQbFFvnBE/\r\nHEH3E3LKE28op8M1/uw/RvXL0t8tB1DeedA=\r\n=Uhc8\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.1-dev.18b219e_1659520110906_0.4923786441717959"},"_hasShrinkwrap":false},"4.0.1-dev.e7e18f6":{"name":"@ethereum-waffle/ens","version":"4.0.1-dev.e7e18f6","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"^7.0.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.1-dev.e7e18f6","_integrity":"sha512-Hta7mbyBmtWvIdCQYmTKelB5JTt+F+Hc57LPq7eORhMfKfV27V/C52bqfivGFe8XRr1Kk+C5vwUQ/rB9rUGkWA==","_resolved":"/tmp/fd17a35068bfb694b0032d33b270cd74/ethereum-waffle-ens-4.0.1-dev.e7e18f6.tgz","_from":"file:ethereum-waffle-ens-4.0.1-dev.e7e18f6.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-Hta7mbyBmtWvIdCQYmTKelB5JTt+F+Hc57LPq7eORhMfKfV27V/C52bqfivGFe8XRr1Kk+C5vwUQ/rB9rUGkWA==","shasum":"98e8c97938cc0ed287397125272765fb828635ae","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.1-dev.e7e18f6.tgz","fileCount":39,"unpackedSize":2302845,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD8wfLTMm8FARlZLxPooqkFMEjGixhMLxs0PjfkmHYaJQIhAIDFsPWpWSTkWaIb91wkMPmbbo9Xv9sPsEgigFn//JKM"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi6kfaACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqv+xAAoo6XaEMOlmpnW8u8nPx6nBHd1flwjjm0DVlFe4UUh20H6eLs\r\nmEQ7/CeG4mqJoaulCE9N0DSybnEywa2aTitvlUtOYtGdJAPpJwDNRQkZuzUV\r\nmQgRM+CufGwqoOylAv2OS+PYh7hzLo+yW0Zh9onC8pnCkxlk8Uu2gMK19R87\r\ng3JKcSgMpjKc35veCbPjqHp2FluG7ioxMdwRC49fqoISLxO2HlgkYxL8kmE6\r\nlNj1O0wgvqdIer63ZnO2v+lTm6PPtVQ2GWv8WZyl6fZf7YWYNRAqTROxDIYz\r\nyYSzAhNU2h0a25e7mi1QXoSbVGj9U//oIMycsysDgUFtQy8FCImDngjO7TEo\r\n85kO+VBNLlTM0agZA/P3ucVzV0gKTX+XgO5/mKPJDhO//5oMeY3DmrDrXy1A\r\nfzF1S3zQsBJs7gxU+Mid1G2LDhHrpVtfjG1gaFPwiRLjJSNN2xhEGSxOe1a4\r\n8iZr/A6ZeTM61DMdBfxvyQn7AcjWt1XIcou6QvAJph+voecZLwHE3ZFjvzR4\r\n3+14+XFuUW/3YWZmr1zJWCo1EBD6XBdiaZAA9tkR+d3Bu93ficEL3dlF2/sa\r\nGvDx2c3bYw48wtox6hWf4UVoUjvpLeb6lky47/lQqpbjLaX+Y03xUai9fz0+\r\nulHrtIQ9y2vuji3asXfasBnNoWE/b2A3sgg=\r\n=BqWk\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.1-dev.e7e18f6_1659520985731_0.7516141564715442"},"_hasShrinkwrap":false},"4.0.2-dev.8eb1578":{"name":"@ethereum-waffle/ens","version":"4.0.2-dev.8eb1578","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"7.4.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.2-dev.8eb1578","_integrity":"sha512-JHbvrBaevkb+642NuOY7H9Bqm9fi9Ce7BOI8CNR7rPtXE0aYMehHGZTlVlRhV7Cg8OI4HtKwCyVVnDnttfG+ZA==","_resolved":"/tmp/2bebfc1c4e87f17c236329792c8a122b/ethereum-waffle-ens-4.0.2-dev.8eb1578.tgz","_from":"file:ethereum-waffle-ens-4.0.2-dev.8eb1578.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-JHbvrBaevkb+642NuOY7H9Bqm9fi9Ce7BOI8CNR7rPtXE0aYMehHGZTlVlRhV7Cg8OI4HtKwCyVVnDnttfG+ZA==","shasum":"a94dc874a2073943e77d551ab915f86358a8b4c3","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.2-dev.8eb1578.tgz","fileCount":39,"unpackedSize":2302844,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDyc29eE1CEIiOyGWnaQpojfqsaNGxhk+/85XfA/JlbQgIgJs3aN4bHUnG3WvUkZRjgLjuWe8n1NYsfCwd/vhYPj+o="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi7Pa6ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoA/g/+LPXBv8RwAE/pB3erpZmfd1EZy/DcpVbC3f9+xgHzChF7Fav1\r\nmCSVRtuuAtyg1hrhpVO1KXrQFc0QEWmwQS90YswM9mtGP25D/RbfNqAIkoHc\r\nFKYhZeR6/uc8hru7kf0lCMA0aviP4zhaO+bnSaqwmb7S/FLvmsHyAHZNI1pF\r\njSFY6Bf72vdw/ZUN3EgjQziqIKQVJndHZzc365cH7EizNJyFuZfRDklEE9gS\r\nSxrjCuVlPLnVlg3rXTXAbbbls0iAzmBZkKzyqcZJJ/IqcgpltC27TH/g6CwJ\r\nrImTVHo59dgmdwHc0PtJG+SxaQbkdOUTnUlFw6pMB4yQuJYQJb6c7q+xUVBq\r\nVY0CVq0P4i33siimg//jHcV4n8Hnv70UNcq0s1huI2J4Qfc0Db0VcufI96M+\r\naCW7lR4aSbyUIxFtdBYcEE4ipaIgKVMgic9wZGSfY5INvu3E5TzfMTh1lzoG\r\nhukA0mVgq12t3WH0/9SIU7IA4qCEpe9aEKMkRqW1P/g5zVTSLLutl/hg4wD7\r\nuL8kcq1iFxceltN7he+AYenEKx3tl0CeTjKTr2lQJ9n55RUnH4jeTf8tnJDs\r\n5QA7LHSvVK9ZpHWeRkYYO0SREV3v9HthaPHz9WLoOHjBBk/82y+68fWRf6Zb\r\nzYYQ9e9mPjTs7RPNCjXxPkco0fsv8q6PeVU=\r\n=9Iug\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.2-dev.8eb1578_1659696825811_0.5487720841682937"},"_hasShrinkwrap":false},"4.0.2-dev.e22c4e6":{"name":"@ethereum-waffle/ens","version":"4.0.2-dev.e22c4e6","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"7.4.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.2-dev.e22c4e6","_integrity":"sha512-huZx3e6kkfZuF0vgj8sHthJ4qXbHtZG8L/ZVcaOVWuiL5MuxGZ2+CJAxXI2xvFaxKmT+u1XV2f5+V/N0Gn3Fbg==","_resolved":"/tmp/583868cc4acd364d9f4560c5682588d0/ethereum-waffle-ens-4.0.2-dev.e22c4e6.tgz","_from":"file:ethereum-waffle-ens-4.0.2-dev.e22c4e6.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-huZx3e6kkfZuF0vgj8sHthJ4qXbHtZG8L/ZVcaOVWuiL5MuxGZ2+CJAxXI2xvFaxKmT+u1XV2f5+V/N0Gn3Fbg==","shasum":"4609ac35eb76584b976960310cdb7e3b48b97f56","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.2-dev.e22c4e6.tgz","fileCount":39,"unpackedSize":2302844,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDue1PLC8vWalFasQlUT1Vl8+uqk+3W3olTN4ULdvbxRAiAd3BsX5sqerzibn7QTZMXSbT8MUwqIUf73ATBd2uHoOg=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi7RXfACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrDyw//Ss9mjAZKSnfQLXappPHbTVCp52itc72/JWR72tfGNBMYk2EK\r\nvkzphm4DlDG/Y5Pvji/90AnKuj2UstHNQEd7FKDYQVNzrFe6gn9a4MhjkrKv\r\nD1Lw4FgD63j2HrFL3cWG95FixEIy86NPG6sAl7r7HAC4isIcKG46pp9cKu2u\r\nSO34jN831w+guNhbl9H+Z9+nEsRQG3Ils1XMAntekBQcNAeRAluDM6NL/E62\r\n3vVmZG7INz/qJEm9NxZWh7RZpxAlfOHdAppxa291vctOE0yKn9XqW7ftJKu9\r\nHMvoLYNL6MD6en39d5TJQzRhE4q1oii3DRHU2kkwVnRDC075IjyRM8UtWl/t\r\n+YimSYr4C6aKOKNBEV+pg21OkIMiz5cOgMYWFgH3FV4nMIaBv4AvQI2Bjs9u\r\nQZTvRMjnHVU6wf288fpIGF79mp/IOy7tRXhv2QrNTjtZeiENrqZ0NRUcxebR\r\nrA3balPuyOYGjuoDqIpJ6nDvIEIlQQDgOBvjujSFI6q35hER1mOugNbWmoR3\r\nnu9lk3UsCABkUL8vijTw6vAuKrJ7wPmg6mOFkfM5fLHMVza8PmqAZWJsnl8E\r\n6CNL1eEKkZIxFKPaB3RqwPLIzdvhYtn5NT71mqRIUPSs4n8+CO7xvTAj6bqt\r\nJamVme7DzcmcABO2KUDg7CUAx1TwXz4J7UI=\r\n=6RoK\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.2-dev.e22c4e6_1659704799614_0.41425086059429006"},"_hasShrinkwrap":false},"4.0.2-dev.89498ae":{"name":"@ethereum-waffle/ens","version":"4.0.2-dev.89498ae","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"7.4.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.2-dev.89498ae","_integrity":"sha512-f5zPqgZvKwQeODOt9SXyzcgFBN2+oQOxsYUwu5MWBEbSlM2UdbhBE5wGYTCuSa/2e4XviTUY4V2BUE5DZe1qXw==","_resolved":"/tmp/f24e8007bee2fca3305d03b94e046ea3/ethereum-waffle-ens-4.0.2-dev.89498ae.tgz","_from":"file:ethereum-waffle-ens-4.0.2-dev.89498ae.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-f5zPqgZvKwQeODOt9SXyzcgFBN2+oQOxsYUwu5MWBEbSlM2UdbhBE5wGYTCuSa/2e4XviTUY4V2BUE5DZe1qXw==","shasum":"8257152e7b008d62d00669efefd50bfd8ef0a5e5","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.2-dev.89498ae.tgz","fileCount":39,"unpackedSize":2302844,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHLxCP5tKzV+z84Qv6Gxx8rZxAs/M+LlLvAY/hZFcinVAiBV36hFJpNDimSvJF6+otMT5D+o62WjukjUMFqLAcAaHQ=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi84aTACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqlNQ//euGWgPJnbhF0XLo0/wRBrrwjvyp48xOq6TbFVTnHn56OXzJy\r\nDeAyAjF13qmA/GwwL8+ZGfBcpR7tVe2U04JGMCb40sTe7+v8yqxsYXaxzVGF\r\nCVE7ULup9+dbkJPAvDYlT1PY7toDdDe3AGvgx5tD8UMinNtXO3APKI/Ctfln\r\nUp04FB5mUQ+ywql5AuwFByHQeHQ8I3SIUbBVDJGifRGxo5WRww5GVZFNkJhm\r\nqazT1y+WoG9Pe6qFyQSvFAoa/GTcmVhdcIT0XFI0193IP9rSe7fNsZxcb4tl\r\n1BIPra2z2OExppD+UxVqe1T925q3X4eF8sQaSsUPvV0V3Z+8snPfvmhpUKsc\r\nuE2W6C+wqOAPsDNqjv4/AAsNVD776BkP0jmc0bHtlCK8RzXHX/vRVIv8HsPS\r\nQrgV0Akedc7scTmgzh6ZOQE8iBWIEsaOdD/Zn1d63D02FqLkQvEOQW0LI9Ry\r\nPorOrD1Gyu5uo5Pkw8vRuDapKv14uanNRwLIBRSRFy4vbVVjaaawfDbyyVTc\r\nb/wJtbfvB5k+DMR2/w1bdW5DS9kWDQ88qbGhgyrJ1KXN7OZiB9jsbD7rHBiV\r\n75vLZA0RNNxHyPWZ8gqujqPN5bnF9W1AQRicPUNqsMxMVgrOqP15bUsEtmfU\r\nPdDA7ajUi/RUVztud3LvYoE9asChfwBGZuQ=\r\n=11UQ\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.2-dev.89498ae_1660126867245_0.6769530157339518"},"_hasShrinkwrap":false},"4.0.2-dev.71e4b73":{"name":"@ethereum-waffle/ens","version":"4.0.2-dev.71e4b73","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"7.4.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.2-dev.71e4b73","_integrity":"sha512-Vfbb057I6hZHD6Wbd44SfUC27Tl2gOeAObB0vwxrqqaAM0roqciF6GlfZAyMx2d+p3qsDWBCfwFnreUYyUmLig==","_resolved":"/tmp/e79e9f68b928116ea312b13f91124208/ethereum-waffle-ens-4.0.2-dev.71e4b73.tgz","_from":"file:ethereum-waffle-ens-4.0.2-dev.71e4b73.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-Vfbb057I6hZHD6Wbd44SfUC27Tl2gOeAObB0vwxrqqaAM0roqciF6GlfZAyMx2d+p3qsDWBCfwFnreUYyUmLig==","shasum":"d620b560e71333ce3a3e2e301938505e8d6672b9","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.2-dev.71e4b73.tgz","fileCount":39,"unpackedSize":2302844,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDfDvRBhHO7LB715ICidRwSL/vwpmXwKFmDBKk8FGw15AIhAM/I8QweLSz6JYV6Y9TdADWWvDM5joUcY3AmLeZ/ZDa3"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi/2Z/ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpllw/9EEPceVEczQ1jBa9eB7goJ68+LTXPr3M7t8VMdALhZ4CSdz0h\r\nB3fJHf1r5tvigfu9aRzxgyfp3eBiMEciQODuaupf53szAMhHZkOxgSQ0GtkP\r\n2cKv0j8OmPdTL5gF8Eke4SJ7M8Cu2cw50YwKiOKpSAzeEimTocRjq7qlSPNo\r\n21ljPK/Kpi2XFmw6L1l8KuLpvZtEQxTvo9rbxDHG3MQnsmpfGnmfAcSzR+xl\r\nKIeCOkLmiHK3fdlgu6Wu4DklMjWX7xXW0vXi8stadSFF4eSV4YO1y9FD723N\r\nz9P5RZcB3JgbcOQNHrvRdSp8DYvFyjw2kdap5fATw8CoqXaWoHOPnNqRKw1G\r\n4bZOzU5Lx3NLA53Fyv7xPYmwkSfutWH/jorKW4vte/SbvqVCneTqm1IQ20IW\r\nCp1FMmtnerLVB5iDY9BxRd2H5IyKZ5uA8W8phcRkfYhwxHdHeaSJqI1ms/T3\r\ndM9o9rX6+xz1PQcv8GXS/b62sNFxEUdFzV70AIoqeTRj/vWe7JGYaKe6SPe2\r\nQZqo5Qr1kiPE0lbC6F9mKN8bi2LMsPVDT1nWf/Pd92kQ6gL7/twnd7HWFMrZ\r\n7pIkbUJEB4nnasQ0nX6nSlVegeva/zIp1fjiPqn9tYWvkB5G8r34cfZV9oqE\r\ndJnm8Us6+D+s40yfjWiGiTy6Sht4KE+R28c=\r\n=rtVM\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.2-dev.71e4b73_1660905086928_0.9307046011030145"},"_hasShrinkwrap":false},"4.0.2":{"name":"@ethereum-waffle/ens","version":"4.0.2","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"alpha"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"7.4.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.2","_integrity":"sha512-sjmEq/QRIyKmelu+MAue2W7vqrLoLmeIzJ7ePStGxihV9pq625vEHdhwmKoix6mx8y8B2cjhwPjV/JaTZe1O5A==","_resolved":"/tmp/6d2e3b01407e3f2488f58a901dcec72b/ethereum-waffle-ens-4.0.2.tgz","_from":"file:ethereum-waffle-ens-4.0.2.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-sjmEq/QRIyKmelu+MAue2W7vqrLoLmeIzJ7ePStGxihV9pq625vEHdhwmKoix6mx8y8B2cjhwPjV/JaTZe1O5A==","shasum":"69c6f6c53685cdb0ed20df3bb870e7dd4c47fa78","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.2.tgz","fileCount":39,"unpackedSize":2302834,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCvjuay4z3uUis9Jup9n2f2C/AW90Z7SnfTDVbbRee7HwIgczC/g+VtreXxpK1QgNU4QypffGLj4BCfWLHeb4n+buk="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi/3f5ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpGXg/+KLZQpmHmjIQzCWaAPG+Vzlhch7thzQoaq4XfeRpzSxsWXuLL\r\ne/mB022cSuVpzQQn8zkdegsX931i27flXDJMBxJ/I2TaebAytAyIu7lvcSMA\r\nDFz6WaKV+7CFwys21eGRVLu+mkOxc3Zo1XHIaU/biI5o6V7auSzJj4l955WY\r\nQZzWx3ct3pekUK5O5i6jA2hzOSLfTtk867UysRZ+PenCeroTQP5LI5BQeWYp\r\ndqlNCmLqsaouOscBG/0bjuTrv2cZnRLbEGcRzNqKoupZ0SLVqgnUkedOh47z\r\nMMycdsPK2mzNxnHp0fnpP4suZ0GPIzl0/baTvhn40Klo0a5ZCBgf+zzzaPZU\r\nUZPv1DULtj0t9VcC7gV1PgyuFBw7AcwM85AAjOYjiVRlDvhQBlMtxbCmD154\r\nUbQ0ZHRe1clSCEkUUXYdt9+K0l8u6eVM6jnP08V8lkUsiK3DqqDjd3qAffEU\r\nWlqJrCNAwkQ8VhtstU/J+MAtW1pd/u9fbvPH2kTIcWX3ThJh/KyuhatEeHES\r\nvaAHlgq+lN1HjUa1JL2ujNl+N4TkkzDWt1fsK0eTiuGPtOBoAet2NUtGYl/e\r\nJoRQeBciO89B8gzI+2x7op7EUHr64yho8o0UTZIi40sm1Mc3ESpiiqrp57J3\r\nmkaZ9/VWvpqS+4tNSfyMF9wqtCJh7twq2e8=\r\n=heX1\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.2_1660909561115_0.7096107187283089"},"_hasShrinkwrap":false},"4.0.2-dev.2f8bbd1":{"name":"@ethereum-waffle/ens","version":"4.0.2-dev.2f8bbd1","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"7.4.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.2-dev.2f8bbd1","_integrity":"sha512-F5UmG1jvFyLWWfqmf3kDcoVo1AqCFjJy0Pgv38HxQtA4tb19T7DUcfY4DpKFsnvrb7UvWVoq+sWXti8G2Qbwlw==","_resolved":"/tmp/bac5a736f09db6511863e8eb66f04e15/ethereum-waffle-ens-4.0.2-dev.2f8bbd1.tgz","_from":"file:ethereum-waffle-ens-4.0.2-dev.2f8bbd1.tgz","_nodeVersion":"16.16.0","_npmVersion":"8.11.0","dist":{"integrity":"sha512-F5UmG1jvFyLWWfqmf3kDcoVo1AqCFjJy0Pgv38HxQtA4tb19T7DUcfY4DpKFsnvrb7UvWVoq+sWXti8G2Qbwlw==","shasum":"d514980ad28dcf09cb055e87a326eb91f1457983","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.2-dev.2f8bbd1.tgz","fileCount":39,"unpackedSize":2302844,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDBuWYpDaif+UJkoovuqD+VERkcSkBxNsThBpIe0xuhWAIhAKS3OVJaFwlvs9XjV+yobCdLzqXzJgIvbwwuFWfLiua7"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi/3icACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmoegw//Rk8vgi640qZzDHMCJ9O5n2nH4e2DmI12XiqkiqF1ApJfGu7Z\r\npVgcdrmEgJstMcpQMsCCpH7InAGcIFxUXf2bTMnc4hvf29Jw99J2kq8xk3Kv\r\nsg2Q8IO8FQZDC03GHBTJxweiRhiAYcWw+kQwem4YbbsKvici6rhicz2qOOLM\r\nSJq8jQsOpcKXjwH8oL60bq6VEbavPfIS/kk+hEexyUZQl5Vo1QzTnR7zbxQg\r\nVvloiw1iZTcEB9GxGJ/GboSuJ2ZUVUzk8iM7hRrbbpjhn3kJc0sYMP3LJYL8\r\n9lptU42WMSy4ZqHLOnxSdCeDpRcdHgsooGdIFvJaewv+v9OssWMPtC8FEKXD\r\ncZ+sQgtGEqPIn4PQohWtuo2IVGci/w11N0xHyrZRXubeBxPDN2i9Cm7I6K4w\r\nYl/ztZThgX713Ru33zyr7JqbqYrIpE8i3EJbiKPLey2HYSWpBkD1Lf+4OF7t\r\n3QX6A7PLqhQf+o0i7DiuKvyJPPwFtNw/ZaycswU9ebbkvF1zatwP0AtHHVte\r\nzwoBqCnRlf8Oi6sdTZOCPIE7ne4Nsxxa+sG73FQbexJRRmEuSWGkx9hQSXtZ\r\nqJc38Xcznkp5RFJoj2nQ4sA2JbQloTWVsmvAmslqU+SmrB+QVSld7CM8fNbm\r\nNy/k0NJQLz1JoMy9+Vsf6D+RlZ5NvIXWBjE=\r\n=hS1Z\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.2-dev.2f8bbd1_1660909724045_0.7157076692736104"},"_hasShrinkwrap":false},"4.0.2-dev.b96f0af":{"name":"@ethereum-waffle/ens","version":"4.0.2-dev.b96f0af","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"7.4.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.2-dev.b96f0af","_integrity":"sha512-tI7wtQZwCb5aLrxoQXJvKIi7UeQat+P0+KDmkfq9Zh1xKn/wAQ6T2MQpqqjYjMbMjYpMLF5GGqAVXexgU4O2fQ==","_resolved":"/tmp/fae54a8c7f3d6347a0ed2c710375d224/ethereum-waffle-ens-4.0.2-dev.b96f0af.tgz","_from":"file:ethereum-waffle-ens-4.0.2-dev.b96f0af.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-tI7wtQZwCb5aLrxoQXJvKIi7UeQat+P0+KDmkfq9Zh1xKn/wAQ6T2MQpqqjYjMbMjYpMLF5GGqAVXexgU4O2fQ==","shasum":"262c9908edc9cef5b5cd343cf869d628346c9385","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.2-dev.b96f0af.tgz","fileCount":39,"unpackedSize":2302844,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDUZBbvWhS6LmeoNpsScRddROMx43Xaq8fPGdop0Nx83AIhALC3vBzrfydRX9DvH2Fr0AMJK2QAqCv4FmvYLxNa3bGT"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjDcnuACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrJMg//ebgh10HBT1VwPRHExi8M2DqZDh83W5yQES23etAdQ1d0NPAS\r\nHnRpEPhrCRx3qEaIgE5Ieu+PW1bzp0ZZkAl2R1q5fl6IfKNq3QfmiCf/J6Wa\r\nlpcYItQ1em6BNttFEoqHfbXqPMdk0gJnsAWP/7a4fDscrW38psBAlfct4t77\r\n5EjbTf3C6Fbfsl8po9twUddrwoDuWi1Bvp03VifcjC+L01JFYLrxsnEzlw/n\r\nGWf8YYAWTDolSyPqxGU/EsT5vp7f2zZ0HWDf5dpkDsLE3b0C7dkywzbKCf1U\r\n4Ymc8RBD17l7FJVFGdhhP+CMgZbMaKOFATwvsVHNCCwzTGSwQQ9Rocfcmpu1\r\nOJoVPTtjViuTji/E/eC7VQ5Yii1xs4EsTpn/qzWGmBlv95QWhOI7RZ1ww1no\r\n+SvNIsUIIKeTbqwmn5Yqz6e00+1WC9i2H44Y6g2CQTTlI8V2JKLzmp6kfG5K\r\npMD4/1rPdiuvBASwSVtzdtrZFXw65ah+NJ6ZNTocy1crMcMLaAVTDRncEwwI\r\nDtRmj+8xKs3YkB493wB8x8Hw7B7rH7cmUAslpLg6swpOGLpQfd4mLuffKYX3\r\nqzUFgsTGvAu+Z9Yy8fnoBgP34h19OKSPo20o6zpfGf8NRBfJciKyUgVE+4RH\r\n+6WTl+JFR9mDdH3IhTokPKAjriG/EHUtyb8=\r\n=h6/x\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.2-dev.b96f0af_1661848046168_0.7369930994967104"},"_hasShrinkwrap":false},"4.0.2-dev.f0bea18":{"name":"@ethereum-waffle/ens","version":"4.0.2-dev.f0bea18","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"7.4.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.2-dev.f0bea18","_integrity":"sha512-4tQIZpA4Rim4LQF6kKA0clQQ1FCHx/Y8u5tn4NJnzATQJedZq+zmd70Dj8iT4WMbZ9zrU/M2wgvK53CHIefj/A==","_resolved":"/tmp/3358ec8d0868560eabb680e5473f0793/ethereum-waffle-ens-4.0.2-dev.f0bea18.tgz","_from":"file:ethereum-waffle-ens-4.0.2-dev.f0bea18.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-4tQIZpA4Rim4LQF6kKA0clQQ1FCHx/Y8u5tn4NJnzATQJedZq+zmd70Dj8iT4WMbZ9zrU/M2wgvK53CHIefj/A==","shasum":"1c8af38ab8e2014263c71fd696853ac1590f8a0e","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.2-dev.f0bea18.tgz","fileCount":39,"unpackedSize":2302844,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCbxnBUf5hsfoG0UDJGhVmE2agQ+knK58beuujkYm7jaQIhANFY5T6XU10nZKRaWo/eEYVOr9XwJOnamYrpS5svUc2r"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjDfBlACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo9Mw/+L6cPy4hKpz0TU3x22WeBKQxFMNZCLpdAYIObiDMrXgohHbYf\r\neLJ7MCobHDeJ35HlSeVC1SLuo18TBk2ZlIKU3zTVinQhU74efP4uysO3kij0\r\noF52K/QgSnCxmQJWftEYTwf+oyuAIfPtbXm7gn4PzUx1fZuNGwDbk86m5Sa5\r\nJ8bgN7znqAq2Wt1ImIA9AxRtUfDNJeuujshSgpyNcba/w5c/a+Ex14dkBZqR\r\nKstF550lSyQx7TtKr6VoTR2QfEDAI8iMVTKNaxbOwfgG6WxvtbXCrkSMBVOC\r\nH7tv3Wx2g4mMgYLcKdii8mh1yV1n4OMpOBFabtfDN70Xa590ZJgXuhCnNAxS\r\nKfOswuavTGVl/7VkJIkUw2MJrCgfETckMfvKP/KnsKjCwNLF/kl8y31vdbK7\r\nMf7b1p+rAycCE1UxXC6u+wjarcHCfpzKDDIs6bPck+PeG/852/N+SBJ6QGr6\r\n79YAkvSeqpyDyASOdEpVUPsGtdeaF5mCodSeXXgCPl7OLsPgH0VNra4XBwvx\r\npfjnPkyQNJ9to8oqZNaIs9leY8bqAQECAfKsN6G5mw9NSp+Vq4A9m2cmspOX\r\nX1NUFrQj/5K1SEd9KVwlGF5OMwXTxBsCXpzAE2D76kWRk/n94mlGf9iDx2vR\r\njhDELKVNe4dbpZvXSciCwrcHxkuNkxscP9U=\r\n=sXph\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.2-dev.f0bea18_1661857893189_0.9620233913673151"},"_hasShrinkwrap":false},"4.0.2-dev.6f16299":{"name":"@ethereum-waffle/ens","version":"4.0.2-dev.6f16299","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"7.4.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.2-dev.6f16299","_integrity":"sha512-3FOoEO/Y3pQmYM1CHIz7bGO4qnIFyArlPyP39Kb8R6mLifQmN9h3B+gg+nKpC4Qy5dj7jUX0ysdtaIwVM7jGJw==","_resolved":"/tmp/6d539292e4b6bb19384d58e1e5df5190/ethereum-waffle-ens-4.0.2-dev.6f16299.tgz","_from":"file:ethereum-waffle-ens-4.0.2-dev.6f16299.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-3FOoEO/Y3pQmYM1CHIz7bGO4qnIFyArlPyP39Kb8R6mLifQmN9h3B+gg+nKpC4Qy5dj7jUX0ysdtaIwVM7jGJw==","shasum":"a70d18124c0a472519706ea396cb5086934335de","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.2-dev.6f16299.tgz","fileCount":39,"unpackedSize":2302844,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCtVsIwzvq+wIqYyoIBousTlg7lvGjKNtH9KAKmsaTnkwIhAIg7sJ/CiR7GIF/992FP9UJ3i+Kvd6ETxrWuc/Pc0T+Z"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjDfXMACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp1xg//YrtzY13b+kMAGidvKoPj+0cXEcC5bFgp/1R1Jwvb5EnKOxDJ\r\nzI4w0QwCMFkhn1qq+5EqCLCCoP1GfiL2STmwpBfx+KxzuR1kHc6pfq5ujBNC\r\nO1uhOL7SvAbth7h+BqPHvfrZHJGHP+o47cQVH51Sea54vLFP7JBXg8/xI+sA\r\n+0LsqaVJ3kWrqZPqjbHfD3skFGCW6R6EoDNFvC4baINzVEK8RlzGQCyLjXXq\r\n6xGuHgHtRzrxQgzWJhq1ggzsfllx0abg+YrukA/hUKqUqYoApzV+G3dE+5PC\r\nwpAGL0LJSArw1Sv9FGNqF7x5wFkrvIaJBlszyxwA2ruwrr13swaTrjLDwr0J\r\nl32tDMCxpd7Y/M5oZvAe5Y5tpP2G31la4IoP4NhH5QQfGBFF7fzyPbcOETHW\r\nTHY+MR8UcYhmaflzw9MfiNcSJZjKILGV2h3YuhhBl4eLki6OE0CfkfRfIPpL\r\nPmPiLHuq0w7V/TV/auA+NuuOO6SnRaXajhsxAjOihn3veLCc8RogM6hW7dHg\r\nVoUy8kF731uKRwKQAdzm9zPfMVFoRRvmAVd0OJTPNMV5ouRjvZXAhINjlmAB\r\nnM1cpueRExNC2TedWk9MqMOETyqHPM6+d7rO/4JMDwhvUCKSWl9uhErc8Mb3\r\nEwn6dRV4XfiEiZBLk8BANRWblsm/X8EWCWA=\r\n=/Bmk\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.2-dev.6f16299_1661859276264_0.4669570693060756"},"_hasShrinkwrap":false},"4.0.2-dev.60ae4b4":{"name":"@ethereum-waffle/ens","version":"4.0.2-dev.60ae4b4","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"7.4.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.2-dev.60ae4b4","_integrity":"sha512-OJYlfjFvMl7dgjd0wpzESjv6XdUGTgSuEKGhNO/YOGJpFYRhD/oJ3N3G4V5Xn7ziKvPxyPKrydJ0wvzNTkFUGg==","_resolved":"/tmp/c908724a9406554c4d72bbe334751024/ethereum-waffle-ens-4.0.2-dev.60ae4b4.tgz","_from":"file:ethereum-waffle-ens-4.0.2-dev.60ae4b4.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-OJYlfjFvMl7dgjd0wpzESjv6XdUGTgSuEKGhNO/YOGJpFYRhD/oJ3N3G4V5Xn7ziKvPxyPKrydJ0wvzNTkFUGg==","shasum":"0d2493d625e08ab149bd1df1c7cbf08efc396377","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.2-dev.60ae4b4.tgz","fileCount":39,"unpackedSize":2302844,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQChUlR5VdfcoPLNM7O4qhPBR4HeLdVFeGLbAwhI+rSzhAIgbSLu+7bVMIojoueHcwHnf6cSAojwnR1syAcqia+cBUI="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjJHzZACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp9lg//UYTkGgScrfF6xjM8NQGPIX4++OblEBgBw6lnObjUHwfkmTyq\r\nFfSPsXAnf9oC1l7ls3qiL2s9dACRbrYmhrw5Mk6dWPd4NHh5mVHASQHUrPNN\r\n9GJ4X/3ZoPG8HgYNz3QmJNaOOW+M58Saq5LhlDcpFx3wDR3ZRmvLSdwwjOn/\r\n01kY3xBlNw9dlOdcMJkCkQextsVFDSpIpLslRpmqtt0Dz3QCzM29nipcJ9SE\r\n1R8NZWelEujPD8PuKVma3EK0Pqtg+dxntAhFxA7bQGgNxPBf3y0CMKZRalcA\r\nxOkmlfK5Ljvq8ZAC8Ld/N5PqJGDBo/RDB8R8o6UcFMp7Z4tYlR3D4ofw9Ba3\r\n8EZx9h/2eOA2C6zml6ODpAnGev4x1OBv4rRHy/IyxkY06QAmt8KuJrZEyVsn\r\nJqSRxRyoKXTcZ/5BVgXaajRWLFwukfs/AdbjDs8CfND6OmrDLZIfAz47sKmw\r\ndV7FFzsXbZJJa2C9LPhU5gujwKVzv3EbjJWa0vejTZ5J//8A+2Byw5DTPkC4\r\noq3r8o9XImlVeK1jOdRX6hIU4MbkdKtmz+rg1u8DZM54qHnWDBlJXFR/5uQ3\r\nL2OuFFxY6qFUcSqvaCHXld1DHLdJU200OgWz/wGpCpeNr1ua3tFQZgS6Yz8N\r\n3e9EzAnVAVPFFOYYD2gH7XGbOWki3O6ApwQ=\r\n=WpEK\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.2-dev.60ae4b4_1663335640603_0.2567682143320953"},"_hasShrinkwrap":false},"4.0.2-dev.2d19dde":{"name":"@ethereum-waffle/ens","version":"4.0.2-dev.2d19dde","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"7.4.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.2-dev.2d19dde","_integrity":"sha512-d4FJoAiGGSTf/nI6hhBWTf0agrQ1K3yMtZNPI1OQjVd4Wy/B+WFwG4kAh1z9ETYmItu9h1Y0GUXCbRaD0lMnBg==","_resolved":"/tmp/22bf31413848ad76155885f35f6b16c8/ethereum-waffle-ens-4.0.2-dev.2d19dde.tgz","_from":"file:ethereum-waffle-ens-4.0.2-dev.2d19dde.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-d4FJoAiGGSTf/nI6hhBWTf0agrQ1K3yMtZNPI1OQjVd4Wy/B+WFwG4kAh1z9ETYmItu9h1Y0GUXCbRaD0lMnBg==","shasum":"38065fd6823b18e6cda0a9db8dff6d1fdd9f9c96","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.2-dev.2d19dde.tgz","fileCount":39,"unpackedSize":2302844,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCFnpsCW8Eamg88s/sufuOfVyGXzm9bZfscHNLB+7xuMAIgJ1I0twv9ut+t/GY0mtMDMO848YRyafO+06CKhq+bIsE="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjJH3oACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo0jg//Tr9mtYXnJCWRWw4QgGqhCwox9U7WEil6AQCbGCpwabeU/8bB\r\n7rkyZhTKuoYiWcXG28aZJ1FSYXHmaNURrMfGXNQo08WFSIC4eKhYKFMCg6wh\r\nUhOk2pn3JDWgWNybAnFT4WKwVbh+KFSsTcLm1v6Ac2W1MlzkpO27wFB7DCsu\r\nt2sMI08BI72bpOgZi7Y7mu1T5Z8zFwWGucrQzILRZrbgtBNSUgkKOaXmMER5\r\nBhfpvpZlSnRBgeMYqQkrV3n36S+v9i6a9k8rFilXgmvre+HU90kRGCWvVum8\r\n15M5XsAunsMHfK2juwsBm9Cfz8Suskjav2oCAnKplrYXS54i+RI+zzy9OKhU\r\nvs8GZjaKZQKgxvTUyggl5N0zmC5n7YfaUHdGNGhKMpGe8uB5Y/+A6hICnaNX\r\nfNl80P3PzsGC6cP1M9IL11QfmeMEfqSQ7ojVcqhKiVghgTszVxq67YMhqKZa\r\nwGUU1MIM4250WcjLtEvnmWgLJg/z2BObwpHi90EK4HzK5+MmT4vYNL7KElOz\r\n4ccEwGn6ka5qQ/n4XP771tamHnSNpUFZu870fvFO7HGywNVCJ9HgaFl/X5JK\r\nAwvV+U3Od4Nkgxso9lrlFiirCp10W6/mqfinxMSoI0VyLLaL4Y5peDY56bre\r\n2qLLCD3xcsYb14DQSrJVLG5lFuu3ZwUgReQ=\r\n=aLto\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.2-dev.2d19dde_1663335912422_0.6850746067201543"},"_hasShrinkwrap":false},"4.0.2-dev.dd21fb0":{"name":"@ethereum-waffle/ens","version":"4.0.2-dev.dd21fb0","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"7.4.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.2-dev.dd21fb0","_integrity":"sha512-stPIe7X6/RKhGGbN7GlVPiHXq72TTtA9DUNGTQGMd0dO+5ojne0Oyp/noYJoVJknGv8GMJQAMtP/cBEzJeC/JQ==","_resolved":"/tmp/d7fb424b5b08dfd3c30c3b301df0c45b/ethereum-waffle-ens-4.0.2-dev.dd21fb0.tgz","_from":"file:ethereum-waffle-ens-4.0.2-dev.dd21fb0.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-stPIe7X6/RKhGGbN7GlVPiHXq72TTtA9DUNGTQGMd0dO+5ojne0Oyp/noYJoVJknGv8GMJQAMtP/cBEzJeC/JQ==","shasum":"25d3a09dd4fa961aa119c70a3278184789b710a6","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.2-dev.dd21fb0.tgz","fileCount":39,"unpackedSize":2302844,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCYxkgeoAA4KbZjssUmueApqYULfw5GMdG1G9cNXRAgOQIhAOSaW2D9sfLMaKKHg7tYwFb9Fj3Qn5iaCji+gbzaFTke"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjJJeQACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrjcA//XhBu14H9Qxi9NKzdCKuKQolVlhU1h6W0KC5T6gm5wGdFO+bm\r\nasUKaJBiiYiEpsqKRqsDrhTe8jIEaSRdTFWBfMnv0P+fC7laIqkZz82GG6O0\r\n8XZsIs8/Dwuev+oIDaXIw9yz9nk9o/jx+7EU4OdTUzSgB73kFLtKRdWBezht\r\nnEH/StR+THYGkNBahWi281cA973KYcsXrHgF+GULDP35Lf35LO+izPQXX5TS\r\nqbdW5Xhj2uHT5vWvSxyzQdbpCGly2mg0bjnizH7mkyLhbkUuybXe1wfxDjau\r\nBKbCerYG+fTkTsL/w5HdN22rJm4S6FXZAgBW2Bs93nrWAGhWB+fLUs1ExyM8\r\nc72QlfFK8Br0RFKgQ4CkBk3rMVAovLH0XYnArIy9lCzQSld7UILJhus21VCc\r\n1+IvpsUaYzhs6J4F/5hQe6PcAZaihG6j90lVc3z0tt0VxZzffqFKDad7JtCj\r\nXL0X4kFxkL016xUJpnQmBkA0rlApeQMNISywYLtKQFK0SkFcxif9EO/XoksP\r\nLiQ5C6SE1MxHc1KJxAPHRX7+pOdt+LUbeLhssM5VVET2QEdu/VNTHaThV5Lj\r\nrJjKwb6dWxWFIZ2bQgAJ+9HFzXsxXYKXFtQl+dTFlEyZC7u+R7PmNaiNthBc\r\nxatNQTgnvM1Hfmq2OAhy8yNKOzMMGCkWRkA=\r\n=93n8\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.2-dev.dd21fb0_1663342480389_0.6098270018653624"},"_hasShrinkwrap":false},"4.0.2-dev.cc2dc55":{"name":"@ethereum-waffle/ens","version":"4.0.2-dev.cc2dc55","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/index.js","module":"dist/esm/index.ts","types":"dist/esm/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"7.4.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs --declaration false","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.2-dev.cc2dc55","_integrity":"sha512-H7cv9BYAGhgRi20AwK/ekL5TJ/MV5R41KStfiuv1tAk4T0vmGpdwPndwXUiYV7lIaR5zCTtRWVzeZY+aahDjvg==","_resolved":"/tmp/e1d76c402df50481c9f69e0faeddfc8c/ethereum-waffle-ens-4.0.2-dev.cc2dc55.tgz","_from":"file:ethereum-waffle-ens-4.0.2-dev.cc2dc55.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-H7cv9BYAGhgRi20AwK/ekL5TJ/MV5R41KStfiuv1tAk4T0vmGpdwPndwXUiYV7lIaR5zCTtRWVzeZY+aahDjvg==","shasum":"747c7cb1b1cc877bb5b7cef6aa2f5e7ca06efbab","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.2-dev.cc2dc55.tgz","fileCount":39,"unpackedSize":2302844,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDhgr6GbJvlSLrp4OQxRBtbuSMYux/9zXD9cni/+6q/qgIgT/ONt8oFfu2cGuN4SlV6iPkWQb0Mfioab+9MeV1GHgs="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjJJ5iACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqTdxAAowxiKVniaaUuHcYaST7R13E2hRp/OypT4NibNqq5chtUuMLR\r\njqv3vUbhL/x02sEOicga5Z7PriQ/M5dybF3BYWUHndRUCabdeRybN8Peyfzl\r\na0jPCGOyqqY92WvhA/d6CnxzK7uHcjGs4Wh2pl40+cOx/ER+RyJzfYHknypF\r\nxr4XkLBHFGrEQCWCqzBQVyKes9rFVqLfoFqV5meWPhEyZA2FYTO7TZ35VXh3\r\nul/SzFg5IqlFHrWqVbogeEUMCSSgH3KtHdWHaSWvCgLQE2W8Yj4HzBrNkMgj\r\n2xnBYdLTg4dIwD1ALlrjmCHf4lq0LOpaw2n8FasQEFd4cpQx8Uul1KGGWj/u\r\nHqHKN08Vf2eNqqUDklAca5543m82Gij+v6hqGQqCb537AhUjfxZASS9GuTB9\r\nMrREIHkEbpmYQlJygYzkY2RNkOG/gajbkJbNGaI9u/1xAc+Dx+CxKrFI6qal\r\nZjxGlHyemsmx/mVogQGkiVH9kb8DEk8+iUgVmVCj2FZxLk4C2m/8pHvVfVZ0\r\ne6/mSzRBTQJpZLoJVVU9xa1ENffdPHpN5JpofFovXYRW6G1PT8ttpmEAa5U2\r\nRt/06Nlw3vsFpwC6OK62wpFKNixyldf0HQaF7SlLKiU/SIaBMLNf6evLVs28\r\nLGDk+MnbvlwXcDPlsBCpIejQepy9eIuhrKU=\r\n=FOaG\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.2-dev.cc2dc55_1663344225789_0.6611064021063351"},"_hasShrinkwrap":false},"4.0.2-dev.cf5427e":{"name":"@ethereum-waffle/ens","version":"4.0.2-dev.cf5427e","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"dependencies":{"ethers":"5.6.2"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"7.4.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.2-dev.cf5427e","_integrity":"sha512-Q6BooRQoNM18AN1OfUlrU/N+pwNI2BlMXPF/0M41Gvz3albc/ozXEgcwvd3shFRdd+ZcAgLNRPogIh/zk17kTg==","_resolved":"/tmp/063486587d332a265f43f6629b7b34bc/ethereum-waffle-ens-4.0.2-dev.cf5427e.tgz","_from":"file:ethereum-waffle-ens-4.0.2-dev.cf5427e.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-Q6BooRQoNM18AN1OfUlrU/N+pwNI2BlMXPF/0M41Gvz3albc/ozXEgcwvd3shFRdd+ZcAgLNRPogIh/zk17kTg==","shasum":"26bdae737462718dca9d2a7a7901489050f73a90","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.2-dev.cf5427e.tgz","fileCount":66,"unpackedSize":2402851,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDW7eeiYX77nzUSBXDGCqEJhHrh9g3Up2fOuQ6vKH/7mAiEAhXhSVAtr2Df8Mo938P/GhFEyvPDpcqAelzK+zoKpN9M="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjJKnxACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp4Ig//QScaeIcRm1mig8cQARCs9bFK+iT4RyIYb9yh2UTc8oDpu+0I\r\nZQJNpWciA3vD+kP7ohPukWnpZ07fsPftsYABf+llLI/M9uNKBFPd2wyZ05rd\r\n99eiDSTWYpkQRzZ/IFCdWWJdh/Gpd9rwz1vDuC8s2RbtJizPsAoBZu3Oewq2\r\noHGGfxa3+pFCgdL4bQVDcJ+N2UtApN2pLbxvlNKWbe8P0u4K3rWp17YQa1YU\r\n2wdMVRTrogpCohp+0aUEt/+wfN5btDyrpITNRRCcOOwqm+53F97erxwQK7Ro\r\nGR+vW++ciCL7htoOH0dLlw88uY1DZYxCaydSi8F72lFZp1po0Xbja3uDmdVi\r\n8nV7JiWNFtJXM0vynsAxx4dDZ5v8QYkBufreCPdkpaqHiQpf47UV1wkpPwWt\r\nlqkPPJkZP2M18rJqRTI8s+ZVjkoV1UPpxe7jQisuzlvgv7sd0Lm4oVfrpO3r\r\nWqXS+c8bIqH3pvs634VlpD/UFvnEAIh9cJ2SNow2h2Sm+toM4z2FzpNm2rmD\r\nnnFAV+flXe3c5y77mxto2PMH6n+ukBPhbht2lHvTxqf90swnqzjx2c+N/J0n\r\nQbgmUzwiD41S9Gb/wYkUE8y65DPHUjln95krAf/ofhAiwi0FqRPT9FZHYO+L\r\ni4eLI4BzV5IqKHwlQOYB5BLRVHwH4Tku9XY=\r\n=I4A7\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.2-dev.cf5427e_1663347185406_0.38053735475984696"},"_hasShrinkwrap":false},"4.0.3-dev.d863d0a":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.d863d0a","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"ethers":"5.6.2","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","ganache":"7.4.0","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2","eslint":"^7.14.0"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.d863d0a","_integrity":"sha512-DdLBU+Xa3VGSBbOsmtiDvzl3Kfb9sj2wj/B4UeOjzlfFBEPCZwTIkAKWNg7U4/Slxf3vJb+sWEZwTHXC2wxtEg==","_resolved":"/tmp/d1c5c5ef2132de052481d046750378e0/ethereum-waffle-ens-4.0.3-dev.d863d0a.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.d863d0a.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-DdLBU+Xa3VGSBbOsmtiDvzl3Kfb9sj2wj/B4UeOjzlfFBEPCZwTIkAKWNg7U4/Slxf3vJb+sWEZwTHXC2wxtEg==","shasum":"018a55d7fec423f5c1240b1b8bfb87fa7e61b7d9","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.d863d0a.tgz","fileCount":66,"unpackedSize":2402874,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCSUrnITV6w+pSO/5s94qjwprtewTqglCyzOKoUycBAbAIgbcZBOL9ovd4s1oI9X5uFv8ZppnZGr9/SdaEjumc9kM0="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjKEevACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr6pQ/+MeAykJ9d4X06jK92fygTuZy1mckooCr4Xr8T67O1n9uOv/Ty\r\ncrN9cm4OcVU4D94VlP8m+Z9uZ8xTHh/NSPdYg2uM+Kyw1b+/ICU6Myt6PWLE\r\nCq1WkQkUPrqz+TiC+m/fhWvy7dvoNB6XoYZTSSEYUWU2/uptGLJw3Ekmmauc\r\nbB3zxud9HONgQFCJBAp4W7vg9LGw3FbhoU1T17fj6PSuQojUtdpQ9vPm55Zk\r\nKvr0pxerwmbfD0hzjWm/On1gdSl1RJYBHawKlFBbm0vR49zouLljLld5XUcX\r\nBPmpBd1gTQK6bkGqPecnYBOzpvt9O2KNQnhWgqT1Gx8OAsGAtVRBxy477Y4Z\r\nvBjbj9TqAqiw9OBoGklNIJm7LsLtD1Q64xPDL7mzcRIDeqGKT71kKZlUUySN\r\nyTw9OI+QEsIdrdZ/A7HU0eceY9tK59DV73dZFR5KKUweGwd37YxC00bUAkc8\r\naspmvHuC7jHY7sm1btp6SZ8bLwU6J/oCx64O65A0zDqtvGzWm3cg57EM8Rd7\r\nN8t8HlepLGNdEWprigLJORxK954c39BjbkwX/1hUKriB+aKLTSRj62LbLfQc\r\nL8vGZ58ROdrB45avOu/VQ2pLFxocwNpNHaKKu5SB8YGW2/9Negc6X0sUBMHy\r\nEA+p8GZcum6Mn1XDC1MeF8cZykXSPLZOawE=\r\n=ChSM\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.d863d0a_1663584175124_0.5449610827641413"},"_hasShrinkwrap":false},"4.0.3-dev.0c72c63":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.0c72c63","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.0c72c63","_integrity":"sha512-UfrqdCKutivw5WmNPaYYFq0hrPzwSNCCnC0weu44SnXII9qGD/Z47CidSxYkOrQPs7WzpOkERRoOuyC6Th9eAg==","_resolved":"/tmp/54bb243f81fa430b1c4bc8f6b83b783c/ethereum-waffle-ens-4.0.3-dev.0c72c63.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.0c72c63.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-UfrqdCKutivw5WmNPaYYFq0hrPzwSNCCnC0weu44SnXII9qGD/Z47CidSxYkOrQPs7WzpOkERRoOuyC6Th9eAg==","shasum":"8bd162a7ed7ab8b17b191baa61e90cc700621606","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.0c72c63.tgz","fileCount":66,"unpackedSize":2402874,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDrpqvPJYi3hBO+Qil5R9IMcvnVa//kUUksk8KoT0kFsQIhAJ5BOtn6ZUR+/SmH1s4C1UgzVyXd5wKUiIaPJqTkb2RO"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjMYpTACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpkUw//TcqroBUWkY5tGnhvM5KdxybkBRCBjSZZBkeHFdxd76DsPVqp\r\nvqbrbIQ/McWYLNZI0dX57DrncRYP8OPNtfbJ9gHKvkx3FEBhZr3DjOSWlT4p\r\ngguEdz7S2+LpmlA11d0wOwEKS368MKkNuKmiR5oS4fGIqr+45CXeHlMZzSVR\r\nLqgOCJKUwvqvkAvVfaw6G71ttrCofaggV04zLKHZXODUVUDQjDBu5pGune7A\r\njeJX4VZiWC1lJoo4MpDyLM5VNGedB2L1fc5h1gY+PoF17+A8mJI30Ds7Gioq\r\np7VCCwhCQpwfmi8h8Z5wSRpAB7/K+37vpXVIWOrLF6LckRsKH+tA07Aczl80\r\nTFghNW2G8QVDqOKZy/G5rNo361xXP0eO2SPlI+hQuPRu7/qwqMnLznOkzJys\r\n3ufrzYBjJJp7sLn1RDEj+hxtDAh6y+Quia8QzUvzjJaT6oGVm8PhdrYmoGOT\r\nqChoMJVweWDNI2Clydt1IR3F6fSP2XfPH59NYR+tWu4XdhOJdilNQPGLBa3j\r\n93yI2U70i3mwm0wM/pqNzzkvQKOTI4rbJx4DH+4ep/SLNylVgFSr3uXQJIhq\r\nlAy/3p4SiR5Sh9pDCE4aTFIlVSJdeAVgWfPIJVi3iiGHgFlplgDNPu/e+HnW\r\n+vLQr6Tqm7YI3J6zmyGylsSx320nGdv+X/k=\r\n=kzyk\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.0c72c63_1664191058857_0.3761309697791837"},"_hasShrinkwrap":false},"4.0.3-dev.f3d5029":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.f3d5029","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.f3d5029","_integrity":"sha512-bFtcTU0HetXeA/8EmQfisM6sCFETbzIHkeV0zplabXt7HSHMUvD50El9y0qwmjIXTrkXal9RipQ8fqj1cNlb+w==","_resolved":"/tmp/0f537e69ae758111ced9f384f1505178/ethereum-waffle-ens-4.0.3-dev.f3d5029.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.f3d5029.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-bFtcTU0HetXeA/8EmQfisM6sCFETbzIHkeV0zplabXt7HSHMUvD50El9y0qwmjIXTrkXal9RipQ8fqj1cNlb+w==","shasum":"8c49ea9294d5937408219e1e2303d0ef44f7a71d","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.f3d5029.tgz","fileCount":66,"unpackedSize":2402874,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDyCYcDS9R2+Nu2PBnLQodSW/RaUi2zfDEIeFOnLbD7IgIhAMVmGWby5tqIrq6Z+o54swl2OXqst3MW6QGIBv/qcoeJ"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjMsU5ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmri7w/8CuTRM0cXm46ge3ckruKrE+0FIj9sHarU1EuG6XRvmvT/NlS3\r\nb7z50BkWKkWTAQcXIUuOEUO5swiuDdMksMHPmpsgZwrrlogThBb4Gw59ov4s\r\nK3lIPuCqS9mgqMFN/TVpzcooJkrTiYnugQNkcxMhAVM8H+ps+2ru8bz/CanA\r\nFj7L0MHLjOdYRRLnhXMIrVmzgpqGeiHSrAcsJmloCJJBYIGq4QT5DKY9zMwP\r\ntnIX+0p4NBz8dp7KrZS2RW3eFCn2gwZX74GN5fMMwmFdyT1CglWKcmpcPQCp\r\nTtEN+UvA0fvXCs9nqMpQ5S6fC5EqHQtuZDMjsUyyERx4B+KKa+zliwxDATAZ\r\nYb4jM+jlBai/YVoKAC++pdrHm0wXZ3s3Gnc33r1r+zfN4O3xEVYNFT2T4+xZ\r\naeOeRZXtrnaWM5MdJD4ErDCWJo/sVYcYE1e0qfWEj6Q4NgrX64HAHXtL8O4H\r\nGOiWGmvo15zOKCQKHRUWRqMEfY96juB1LkU0A7Vd2kZWpmNKvImBNs2seMPW\r\na657BQHhG3G+LYPSYSfbG5mlj69Eo1eFAvIGxVX96VU+7mQwkCKSoZTWs5B0\r\nWY+SZhtHwU0gI8CGMcwfhd7vHA5HeYk2fS1aSZqC8XMhw6YBACUstHVmL0Aq\r\nxg7nuBWOZcDlCenaVTfOyPw2ysdyDg2ijlE=\r\n=4/f0\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.f3d5029_1664271673075_0.8111046274627463"},"_hasShrinkwrap":false},"4.0.3-dev.379ba2f":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.379ba2f","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.379ba2f","_integrity":"sha512-UEWJso8DhsjHYemBuMoFZpfJFWLXuwD1YqrKYbm/8Bw6++48FYwlUh9CrG5XtMutNLbQWPDEMVU97fhrS/h1CA==","_resolved":"/tmp/1875a08ae70768a675fbb2e3c7c82451/ethereum-waffle-ens-4.0.3-dev.379ba2f.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.379ba2f.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-UEWJso8DhsjHYemBuMoFZpfJFWLXuwD1YqrKYbm/8Bw6++48FYwlUh9CrG5XtMutNLbQWPDEMVU97fhrS/h1CA==","shasum":"61470e0444e9cf13bfc45ae5155758f30793775b","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.379ba2f.tgz","fileCount":66,"unpackedSize":2402874,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDahnKC06fSmvGBOok/SZMIpGzfjveNnGdYrFWfBNlQqAIgJA71sBwryX7toBy2mCyoSRSm8q8uwCBE8w+ES26ZhXA="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjMsxrACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoD+RAAjcMjaVN262cOLxh8AUvQjbn/2SPgoCxi08jkevDYZJ4Hid0n\r\ncecQiqV8MhqCEiHwbsMbZ3vfAt3khvM7ksotSRWL5DLVOsTMmxNyaE89gpgt\r\nR3+1nUENcukbIvfy8Tgz/exrvaufIndPUrdmT9F+6RqD073aNIz9xhlkAars\r\nBGy7vKGOeC+bO+ctPw+L3+UdTYBfjY0nGqYnLErvVU3HhiHlvvVwzmE0cE2i\r\n+0IVOIjeOWEDXjlPGQfcgJLa3eH3so1mgC2rw6ox1EqctDRZEUEQviIvC85S\r\n4c9vfBgsDUvEqOQjDf4/yMAwuylrBYTrdwdU62GFBg5PkWaNoVC7PRWi+jdO\r\n056z5qbIDzeRu+fU/CF1HW4f6VW12rqHOWdxrbHVfpuw/AlUlP29Pz+8bWAp\r\nOP3Ftfu5HG/ORGUphgxFh5EbLiINH83kar6BuHcV/GD2P03zqe+FRs4bmCVY\r\ny9ItTIIrRcjjgFMDfKVW46LcDJ3ox4qSSQJ9vIG2PlE+AEIAADW1Ok82s3+i\r\nIsmw68nijbRWhwcH92dzmHhddfAhvm0UgbklPjELyzDy0lGn7z0fSH+iSGVS\r\nmIfupR05+S4ixzhO+GIoPR/0hjUni2leIviypjZTYoAbjYkkezcjF31LHSU9\r\naOCeHagS85Su1gJUiVKNtklh+jprCd/N7PA=\r\n=PHdI\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.379ba2f_1664273515161_0.5212105195749628"},"_hasShrinkwrap":false},"4.0.3-dev.9bdd800":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.9bdd800","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.9bdd800","_integrity":"sha512-HfXzNXAyWbBGl8R5Q0GRbhyQzU3/9dJIfjxQvU8nGQi03RSVYjScyhJ1ialY4C76V2b7tMPoMMhrxp+HxBKJ/w==","_resolved":"/tmp/a9c047dbce390b70400489a41bc8b477/ethereum-waffle-ens-4.0.3-dev.9bdd800.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.9bdd800.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-HfXzNXAyWbBGl8R5Q0GRbhyQzU3/9dJIfjxQvU8nGQi03RSVYjScyhJ1ialY4C76V2b7tMPoMMhrxp+HxBKJ/w==","shasum":"74eb0b5a1b5bc0ab1db6e534460b4f3b58c9ef9c","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.9bdd800.tgz","fileCount":66,"unpackedSize":2402874,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBOiLDM1ozNR99ksv1iEqDhnVk96Xg0++Lwc1lrb2xfSAiEAh3fUQyeY7MKAfrfUsJBe7tmnnbPvzpsWshh/4nXQp0A="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjOtPWACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoG0g/+In9iTcEuuSiBqvzNTelepZwCqF2qH/yT3wL51Uwb1z3ViRta\r\n00TKNPQWjVIoJnxnnTXNkU5xVdQPXkaL8tlBGGgzcbI6X7XUaDhQ3RrcYDjU\r\n7ty8N8uROq/58XKlqSqsIn210R4yleeeRIMJ+VzeFmwcAqNSJUY+AGWMxl8N\r\nPudDZdOVY2Mc79mwLmRgC21V58ylMjth9Oshkt6OEIniLnAdVztAzv+r2d5J\r\nx5ZNbzULhq4mGrWONnwMuJfEB3KDirfzCr6Q5MbujK6dyGMOOUwED23SVW27\r\nMavUwAgRM0wDtvQSoVd/MNtiz0Pf/qlRDeY+oKz4LlG0tL8Eft7JHQA3WjKP\r\nlptaU3rAD14q0hTVN1LXkp5DL0cbeJuMujVqkqKpJ4X7YhSAmvbHJaAJxnh2\r\nLXIdwEVcnGOtr1bscONo/qu9Aguwk4oIMMYXlyRPRPTkiWKFCzGSzLcXinEa\r\nFb1L0XVP0muV6WlidX5o1QbByTZc//zrag1EQCxoar4Djtxzz/xmWgNxVB7J\r\nKZYlFdIt7y70zsNjRQktT87IZWZxT4U5KKhH/uobySnhoE9WWsMKu9L8+AX/\r\n610e5Kymc4jz7A/252Ai1qX5zVO6l4WaYHvtHfmcOpxGm2/O/vZJOTU4wn5Y\r\nNHrmy6ctBS5ZX+LIkA3iF3EE/OkbHwu07Ic=\r\n=4Db5\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.9bdd800_1664799702621_0.30782504023297275"},"_hasShrinkwrap":false},"4.0.3-dev.06c4b26":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.06c4b26","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.06c4b26","_integrity":"sha512-87+dJPJAotTg6IzBp/WUfFJQGgjMt/WoecCaCLlHHRgrBUzy9ecWgnMcwIuzLo2P5cNt352DVSiBYT4EZSLlcQ==","_resolved":"/tmp/3339e125d00fca02743069a4350e0ed3/ethereum-waffle-ens-4.0.3-dev.06c4b26.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.06c4b26.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-87+dJPJAotTg6IzBp/WUfFJQGgjMt/WoecCaCLlHHRgrBUzy9ecWgnMcwIuzLo2P5cNt352DVSiBYT4EZSLlcQ==","shasum":"4c2401dc8bfbea88e3ac5534d8d4cf1b40071b1c","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.06c4b26.tgz","fileCount":66,"unpackedSize":2403783,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIC2Vou8X0p34ABALbknQHU7kEjDrfj/XqJRg7O11Z4YFAiBcfnPo355mcQAswGCQaRHtmF3UtyiEnsXSWYe8XI3QYw=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjPB+rACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpU5w//aZxOIQI1pma6Ey7dyuJn113+1ZrLG7AxOz9dUqWvilcQrcXI\r\ntMD/BTINjMYMIOuAUrLywAfJqwXCulQidGFs6CH8wWFGtcz7RLOXIm7tSwj6\r\nowlKJa0XS912cKr102YzYMkjfnpEoFua9ki6DeUXry5oMbHP/EW1T+VsX5Jb\r\nzfTjVVjuYeF5hIyrNX9RlROpZ/youNVNxvOFc+X0uhb0eD64v+kh9RL+YhY6\r\nuOfkYcTrDb8SLGDQSXiRkFUib8skOIve9I6aycAYDuIEP48LA7UOwC4xX5+A\r\nRdg0Xu27OTRlNWYe3zojIJpoxZW8tt/4II9ZozmfHCwdcr63j9qwawD/UDKO\r\nNlDTSQ4vxGLRsGjK/cNAyoVbikVnFZ6JBvLt9GPOOLOwMOQRyyOsHDvV4BaN\r\nVVVVa5ToaqZ7uYRP2OYMK8ycODX3Yq0Oo4EBuEaSCnoUuL4CZdk/gg1tO+7P\r\nVNw1xdm+bcML5Up16FCBkI4KL98ZfE5grsGf0JkTBR32VhADFBlejMO2iH4+\r\np7gLdOmcBe0P5MhcHdOLuKTEXRgar3tmQy53Zn+YPScXSVVBNqf9DfFuEwg+\r\n3DQJ2iDjP9qEYQSolx5wkPAJnzu0D1Qpxb5+fSm3LWH5OyMqQu4mT1fXmLW8\r\nGs12oHQ5V5+xnLDS4SscDeFDrzhfqkVt8UE=\r\n=nrF5\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.06c4b26_1664884651496_0.3608934223346476"},"_hasShrinkwrap":false},"4.0.3-dev.90390a9":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.90390a9","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.90390a9","_integrity":"sha512-07NWsSguRNGyK1Ya0I3jBP1/VN2cUGKpgBF/tZC99jFEtVm2GM880X3/2/vU0cnfd32t13WcSgMT+5bd/a1/pw==","_resolved":"/tmp/a54b851aa90ac9c6185964506b913121/ethereum-waffle-ens-4.0.3-dev.90390a9.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.90390a9.tgz","_nodeVersion":"16.17.0","_npmVersion":"8.15.0","dist":{"integrity":"sha512-07NWsSguRNGyK1Ya0I3jBP1/VN2cUGKpgBF/tZC99jFEtVm2GM880X3/2/vU0cnfd32t13WcSgMT+5bd/a1/pw==","shasum":"fe94cccd02ea95b85ba3fad303480d6568273a4b","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.90390a9.tgz","fileCount":66,"unpackedSize":2405933,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEZNDvQHulQ/lQhMTLHjYqnECILLbsw2HY+lstfIp3JwAiAHyNIQIjzHWuab+BHCfl3km9kZJ6kt75N4F77jgfw4BQ=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjPFNZACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrOIw/8CA3S3k1QYlxZew/KWwkje5zf9NjaTzkpWKziRZZynP3StV/D\r\ngXhf06qd9lKig0FSUbFKYGtj6+WWSHfP+oC0T70bnRC14bDfyErhSGQCOQXJ\r\nDTy4D9aUog4dcHWrVikCQWsJXJ9IFxdAlXB1paN5MdPnK55qyqX9gca3sXQD\r\nMVHiUzxpQIqKGhpKN3lhxrExV9nzAF8EUPzyRMWhLLaMZsZwY0rDYXea7nLu\r\njXv0AMvHsXe+PmLgC9XLmVt/GABtnJLA0ePF1mJ4gVuyp4YdR6RccTw5LbPg\r\n1IJu0719/TeXMBn4HpUcb8THEXpdw0dcgtgay660WOK2aGZ7qQLao44fH+l7\r\nheQDqodt4O0EZemdvArCEl7NeEFN+D+914SWyewr7dKnhLLYwIfvAmRhWxx5\r\nk/yIsKCmD2EsODNjnmIsxg8xGYUv1SLtZtnwNRVDVRCXZu7jW2411Z/7qzxP\r\nJyaeoVqiRSTjZme1N2E1zVdrtC7lIYNwoI/Npi5Lf6zLUQhSX456bVdjocpj\r\nGAx5abxLh4TdUlDxD4cw2rgQtUEnPKyM5P1tqrkXdLjOPZet5TY51yebizSx\r\nkKMRKK0G5rVYe+knOe1uTSD6ZwfjNYB6kmtf//zt7xeTub3K0yI8THrZSbjR\r\n4cWBQbIZmQTqDH7igAHvU5pisPcErgE0Vh8=\r\n=7wUK\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.90390a9_1664897881340_0.37708961435953126"},"_hasShrinkwrap":false},"4.0.3-dev.cf42065":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.cf42065","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.cf42065","_integrity":"sha512-Wu9Xz84Vp6xNp01R0qv99DB+tLT1dfOVzcIAsowZpLUzPzC+JcX2XU+QTc1rf1Z4mWWMZJctqHXSIQ7xj4n0GQ==","_resolved":"/tmp/d55e8a450fb87efe888f13d45f126580/ethereum-waffle-ens-4.0.3-dev.cf42065.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.cf42065.tgz","_nodeVersion":"16.17.1","_npmVersion":"8.15.0","dist":{"integrity":"sha512-Wu9Xz84Vp6xNp01R0qv99DB+tLT1dfOVzcIAsowZpLUzPzC+JcX2XU+QTc1rf1Z4mWWMZJctqHXSIQ7xj4n0GQ==","shasum":"d966ce935ecc2d1bfd4d2959c1c866577efe53fe","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.cf42065.tgz","fileCount":66,"unpackedSize":2405933,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDoUcDzG6D9WlYKW7zo9FJQPoU3o6UOpnglhkBrcba7tAiBy0/e43LJpD4pK3bJ3/rpzVSurA82w1sa9/8Aqq46cmQ=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjX6bcACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpKjA//Wh8uUzJr8F4oA94oo9LZGfNXjr3Vk1BW0CkIHEeQek/U7KzY\r\n2VgIpxggtv6KehXvTGc6tWtBy20cARLk9aM4gD+9LuQJJgSTex6IcqdnRk+x\r\nk1DAhb2fOs1qq3K0+J5lA35o4vL45hkhH8Z74M3BH2f5uZXBsubrxpO/Pf1l\r\nQT/XdS7oXjeCZUw+oj9eYdgDDVe3KBr7Q9EzUPPt15eIuppukX+DDDB0Ny7E\r\n5WGKZCZTToboTSDRFaNqv1AIqYaDlAPyNsjc4qaAzMiW2+6kltn+tQ99Nz2I\r\nVvWoyU8/H+WqG607k8XYAXUH/33x+2qDCsdDsZRTQTOS8hUtGKQsvVYe0OSg\r\nSXKmQeLwokB//WQDX/Gxayb/Sec4cl4FRRwlJGz5t3MWY3hPQfvbtFlqAEOn\r\nKKHcsqqQRbEVXGJ76rQJatKzl/xNMX1hRXnAtd8/TRI9znUEL1mOToM6PnTs\r\nWxYmtPGWXgkXx9dVYEu1MvrojRL1hpcX8UogNGvskzWwRrlFlMNEoMkRibsD\r\nbNN3Nw84b1BZ5TFTm9hWCjUMAl3VWWWDQbzUDXQxyzPYMj5XeCi7I08w9JYH\r\n1HoZui6sorgVtSPibaFTbBCxoO6tkY9DVrHOdxSrc3cOgVois3ZpMhA3fKih\r\nV9gPvQSCdL49Zg7G4rIMTeXtSHMA8umJtxg=\r\n=Zgta\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.cf42065_1667213020157_0.028020703910185407"},"_hasShrinkwrap":false},"4.0.3-dev.8671be4":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.8671be4","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.8671be4","_integrity":"sha512-f7HhHMRnjiwLMGy8HMbJNAq0pDJ681FOXcvWstLOw9C7/WKZ5M9apBQulbZPW012gYFvR+2yhhj97qYOu4UUPg==","_resolved":"/tmp/0663ae87ee725a0cc1b1748513f37d66/ethereum-waffle-ens-4.0.3-dev.8671be4.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.8671be4.tgz","_nodeVersion":"16.17.1","_npmVersion":"8.15.0","dist":{"integrity":"sha512-f7HhHMRnjiwLMGy8HMbJNAq0pDJ681FOXcvWstLOw9C7/WKZ5M9apBQulbZPW012gYFvR+2yhhj97qYOu4UUPg==","shasum":"5bee2d427f398d41879361df8f1c5590b4854ee0","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.8671be4.tgz","fileCount":66,"unpackedSize":2405933,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIG4tK7AMNhzs377FEPA1VtqV+cmJNudBknzZe6q9N0MrAiAmq1SthYMSJbmI72G3WTcFNeE/KhIL14s52dMtkNp0uQ=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjX9xbACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoE1RAAmf1KQCGe2PA900Wx2oXOAaRPpRSBY7M6ht07DrujjZP9osL9\r\nfzk5O9Lx99pvSxCGYFfjrYWTT6pUnjgR0xg3avXye0fSmStoHGIPgefu8M4p\r\nTb1HekDEBrQuPKI/jgWOaE0h7Hr8g9xP1vZI80D8Now/uskoXfZsc1wSRqd+\r\neAlocgurezaJDgO9EJHJ5zlgYFELtnFTFB/pZizUwghdBFpG145v/C0Wg4aJ\r\nWNZTz63vr2EgFHMKMqB+K+sFG8Mo/xiNGUl9Sc0SPNwiFLhL5EWsv9LcQSX8\r\nHRY8jrEujZs0UVrveBz+d2WwpxV7C4FTCQYE7jjM8u64sC0+T4PUcoJ+NT0x\r\nOPHu5vaqmNJJ/M0ElfGEKKttrFiJSXK0mNRW/j73YXGUyPUhJbvFQm4rErPi\r\n1Y99FatCJxnLQ4e0RGL9F0A6RojMVxKgPsJ7P4uN0LxuV0hbFFXDCLNHfiNA\r\nsfCTOLuAaw5jbm3slX98eQFzYtRgA0HJzypuRqfW/zxQB4L9+n9vTz9O487v\r\nk0N6YZjaZJ0FXMN/Tuj0ghnOo9b3f2eXK2mEMb073jZ9JtZn6SaBa6bMGguj\r\nerZbKRl16EuvtkuoszBCg2Wj+sPun04J1z6vVsXyYhrCel/N4onf6/StDLhK\r\nxVpLt2L58S+rCiXnrsdYTG0KxQKSwAH2r0g=\r\n=Hn+s\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.8671be4_1667226715507_0.708056944154688"},"_hasShrinkwrap":false},"4.0.3-dev.4541f86":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.4541f86","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.4541f86","_integrity":"sha512-Ia5W/GTE0tseq/O2Od4NH8OsFIB9OqT3IadD8AdFJUBQg1QBhnhnrpMw1GBKIRvH/c9kA8WphGyQ754H4TBS/Q==","_resolved":"/tmp/b0d3e2115d138781da7a3cfe7431e375/ethereum-waffle-ens-4.0.3-dev.4541f86.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.4541f86.tgz","_nodeVersion":"16.17.1","_npmVersion":"8.15.0","dist":{"integrity":"sha512-Ia5W/GTE0tseq/O2Od4NH8OsFIB9OqT3IadD8AdFJUBQg1QBhnhnrpMw1GBKIRvH/c9kA8WphGyQ754H4TBS/Q==","shasum":"65dc3abbffad03959f155f03ca08509b0f2a850f","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.4541f86.tgz","fileCount":66,"unpackedSize":2405933,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCzZ72/42LL71Vrq4Ff6A8ck08nIWOe7iC3C7A0uriXkAIhAMn2o2GbhcqIMntXXGVqAwn7N9rDctqjVGfr1w6EUeCT"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjX+2TACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpaIQ/7BEYIKxE6rKAIhF4ZabY5ukQiedCZ4TNrtTG202ed9U8Rtrc5\r\nuGvWh5BYAji3lEcsjdrWR4OjvpdLU9A0cVFYRYDIGpee80Ug2H1XPEmFmTKe\r\nmtqtRhGUtKDenxdmtXHpCD5Gz3V4gz2UI8ZAgYECBmm/WicaUNmrmPYuUK6N\r\noelA8GFL4APnyDwodi4DxyvzymFQDo6tGXukB8ohWsZNPQjp4Ube/0KC+1rF\r\nMIiDzbDoNI/3UJ9fAwWAeMnpUtlXxjHfKfSTvN4EhC1pR7lcXXgSf7DIL+7k\r\nzwog7Mfr+470CCyn/DI1K/7Fzy/qSmiGUjyyN9z1YuGp41cMaCGP+DYtaZhs\r\nWzngtK0nbpr+14lt6jjVnOn8G9q5ffjCzHoExGGTMxMemzIJvk3bdKwOHaA5\r\nUo+7wgSzE44/5kSBK6rYYDKj7VgWZY1aonKwOtvdMeTB9fdXVI4ofkzaWIUX\r\nah6gC48Nn8Ab06oLhKJa7eKlkzItBc0rodo0xBr4vCJxJf6QYf9B6nV2ouM+\r\nMqVK0/zRSYhtXxeS7xGcYJiZH61+3+ek4b+iTx9SSRadfxkLPjr8iCvfC9G0\r\nXny1/ghIFmBlKoVMDJ/k7JXSjWdzE0ZWqETATIUmKAjPV+ZSbqsR+4oEuark\r\ncnmN3TdOB2zCNsZ7NJOt3YbJXHE8+R8zTG0=\r\n=wnzK\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.4541f86_1667231122954_0.9272077389766034"},"_hasShrinkwrap":false},"4.0.3-dev.4946c9b":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.4946c9b","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.4946c9b","_integrity":"sha512-WZqgcPSplteo7CQ448p1TJVswfky3f9PzXaoFOgCn5VZ6Sokj07enNr2t6RsWSDZgt3rqbM/M8isNbV0AQNr7Q==","_resolved":"/tmp/1939795c34aa1adb92a30b3e36698daa/ethereum-waffle-ens-4.0.3-dev.4946c9b.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.4946c9b.tgz","_nodeVersion":"16.18.0","_npmVersion":"8.19.2","dist":{"integrity":"sha512-WZqgcPSplteo7CQ448p1TJVswfky3f9PzXaoFOgCn5VZ6Sokj07enNr2t6RsWSDZgt3rqbM/M8isNbV0AQNr7Q==","shasum":"037cfb317824fc4a24820097aae67cf7248d9057","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.4946c9b.tgz","fileCount":66,"unpackedSize":2405933,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDcaxIITK32wvV7dq4wppyuo2UeXEKSDaYPon9m9kJC9AiEAh8t+olQlzi+grDPfiNYNRch6lOfFVBdMP7eAwvMIYfw="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjbRH8ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpZ7BAAoTnnWciRWvik/E+y3ogTtQrUpuObI0llDrrjk5lAGR4oOfY+\r\nb2QuLlDaeDnjqCdwxqwmTDUFAQIgEaFezcJeYwjboQ5tCkJNsehR/7H5DDKS\r\n/sNW61gM4E83kDXKeBwcKZjTO8dJesCjsjpQjoJS/rh7WZoVuJoIT2OLGiO5\r\nwaieC8mqhC+iiCESBpmhuHwi52BBPD37IYK2HyEMfqOADZrP5V5SWJw/BMDC\r\n+DfQrecDieu9z2EzqET+qzJkFtIXnP6tXQ+1ur/FIESVP5wYWzsxtQrmcqOo\r\nGRzwgZByxvLA8CmRL6dhun9W+DGwPBeEAaBIVWg/BmduIo26ISgbZ3QI9WOc\r\njHEVVUN1U5LPWg41e5DbFPKpbUa6ZGTxVhthV5f54MypJCZbhpJ2TBjsH7Ky\r\nt80dXl/yKVENODpjpgd0/0Mt/ZaId21xiAjwOJggEm6U3e9gF9nWkgyANbtO\r\nbbgMnGGzqITyy5FxtJxgAiOT8pUH/ilHXCDfkRvItM47TTtm5kBXBNcuHu4n\r\nGcS6vZZYWSYtyujNDiHKGS7II30jetTgTYcE62pQ919x8W6WWn5ovMzvDG8f\r\n99yM9itKLcmhZ9Nb47FMQIYzdzzhUHXqBLHgrBxpS3g7MCdtXmKLOZNOauFi\r\nLMuzmLArSHqseWRlkV/De0fe8LUNlZkOwpU=\r\n=e4Sa\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.4946c9b_1668092412310_0.9203782684365975"},"_hasShrinkwrap":false},"4.0.3-dev.edcb2d5":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.edcb2d5","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.edcb2d5","_integrity":"sha512-pLrXjV6E6Ne5Rfi6iu8ROlAJXq1vdl+UijvJ8A6GvZcW5e4HWkxV7bx1x5yNzTk7tLhpWOUQpmYtPf+x74XxUQ==","_resolved":"/tmp/e0d06f024c3080d8af5ce37d7e27e222/ethereum-waffle-ens-4.0.3-dev.edcb2d5.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.edcb2d5.tgz","_nodeVersion":"16.18.1","_npmVersion":"8.19.2","dist":{"integrity":"sha512-pLrXjV6E6Ne5Rfi6iu8ROlAJXq1vdl+UijvJ8A6GvZcW5e4HWkxV7bx1x5yNzTk7tLhpWOUQpmYtPf+x74XxUQ==","shasum":"99268f8ff6ed46b94c459586bd97082a55e0a49f","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.edcb2d5.tgz","fileCount":66,"unpackedSize":2405933,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIH8cQzkgx3w9N6HwEru9e7ycUQSSuL8Uo50i6uy5SthqAiBOmJiWU9CWBBxidSGEdqCO0pa0Z4ipmG90zswbLT5SkA=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjhMCjACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr7HQ//Rt8m4odKHNTFtswF20ObvWVc0obX7y1b7OasMYbPfv2tbZoY\r\nLsqqJxuVcSxL80MiRHZhNfs0i1AjF2GP7PqyDk4bw/WT3diU1UQQRiIE5C8I\r\nsVeRRnA1zLrz0EOJDy2vKdz9cRuaMtuFvlaTIczN6Feas8sQDziPjQTkhRGd\r\nBYL7wWJSDjLxtvMoZaH5EOO9wnHBAVrNuXGx7qqTB2CBsRp5FaGsJh1kHvdr\r\nu1cBHoddyL4VAC05P4tWA4hTUNt7l6DNWR3Dzw4zI4NwbNcZRuqvCD1fv/Cm\r\nP+1BRr3g2dKP6xDxpAIIV//He0hlU4B78E2j6VCnOjPPTU0yg+mAdndi4Pvi\r\nRZei9hAo8Xf86E53riYGgoy4bF2OvF6bPNPJTDPkOrgL896pgHpLHtIRWY42\r\n9315kws0zRvvfETejpfJonCk/jTV9vxAybPj+p3xYUgwpb0tqr9xua/XZXol\r\nzLXNna9zzS7t9g40C+uY+kUfg4kl1gnR6gPCVVxN45c3SVB1BoAWfkqpS2uP\r\nJjt5Uzki6DkbPsTq2fWxNOcMXc7yXzpr+Tekot+YrUw33vuZYezFlvPyMoZl\r\ngTKKcuONod7n8rtY6X2NjycaWZ5WMlTLZOyxcI55zW/6QVmNJC/Z5z4d2yGc\r\noM8AjCN75hCtpf3WHS9wxdkpDNsHR2hyeXk=\r\n=LD+g\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.edcb2d5_1669644450900_0.7807441945031726"},"_hasShrinkwrap":false},"4.0.3-dev.4557ff9":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.4557ff9","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.4557ff9","_integrity":"sha512-k+Db5mNENTGIHIK+sRpDQcZBK/KF/Li0fOg5wCYr6r8DloX0Z7+747y40PqdjO+J5zHA6QVT1GkfEqM2zPc9CQ==","_resolved":"/tmp/4ec866029d0ee18d39c6c5ce1883f53d/ethereum-waffle-ens-4.0.3-dev.4557ff9.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.4557ff9.tgz","_nodeVersion":"16.18.1","_npmVersion":"8.19.2","dist":{"integrity":"sha512-k+Db5mNENTGIHIK+sRpDQcZBK/KF/Li0fOg5wCYr6r8DloX0Z7+747y40PqdjO+J5zHA6QVT1GkfEqM2zPc9CQ==","shasum":"f06548c57cee8efb1406ac6d8162e8199806b25a","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.4557ff9.tgz","fileCount":66,"unpackedSize":2405933,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCarC3QImnK3JdfmRDiz6DIC5D/zwAQVS5z0h0jX5C8fgIgLe6hE2rc77vCLf3Tq/j0hBppEK4YyLhvoB9G/F/8WgI="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjtE8TACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq6wxAAi5UbmcADPlc1CCeOgtGsy2jBQFIkIyvzrJZNpWaihmiyrCyZ\r\nY+UDuOTTYfm7XTfPcUlQ7l+ZV9xJj6oRCzzy8HOWCszBB4D4BYLL5P+aJAB7\r\nxqrCjzF8g+Ifnlu2/1YCjYHIcvxB4rdJ9AG573fAywExNKccWLrcTDqSZ7XH\r\n5Vf6ui/9z7Ymvc9d5Ge78poXGG86WcHSvyaJej6UZGsh7NgkOdFQUFAh8mC3\r\nqQEVH0pQh3fKHZipiZ5PNo8U90ak9lj6X/fhtJUYasC5Z3FJn8PcXjVmDu/V\r\nsANCrtvo/NKPot2DCd9U052+rgpUZS+3XdKV92DSlOlsReD6WorBPlcrxm2/\r\nXiMvP6f2J4u53xfsDj/tAPt9A9qt2XmV+za+Lgb583HgHdEdJZpIn1n+lpFf\r\n45QGMfCeJtjasLChFbfhXXqrej01XWyVHmqZrX9XydcX/4Rq3pKl2mVVRoVL\r\nH34eGLbvKPT7Xx6RdkHRDtVPRHKg27f9O2VrJWzvIFFYsDe9rf40jRlHtpbz\r\n0Vzhvw22dVI2pIE+bJ6V7eYRaOZIpOHjqMGDve9b5Pm5T2Y8p6hQ53mH0AfL\r\nkBSGE4BogXCHE5fk+aqt2mwNhC5PsglDL57QIdzOMYZchW7pZZGFgwaGFTFN\r\nI8wsAs4gPSfXsRr3IevtWuCzT4czRHCTQsE=\r\n=un8F\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.4557ff9_1672761107180_0.4765512038732733"},"_hasShrinkwrap":false},"4.0.3-dev.d4cc0eb":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.d4cc0eb","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.d4cc0eb","_integrity":"sha512-ky7QrVOZ2JjV2pY7ZMvjiRapNrED+5pyCFqjD1HeBfwG3lOAwcuA1EjeEGGDFYrxHC6fdp3R5h8Fx1iOkZLdJg==","_resolved":"/tmp/9e1a1f45221e9fbb45c912e5d24611e4/ethereum-waffle-ens-4.0.3-dev.d4cc0eb.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.d4cc0eb.tgz","_nodeVersion":"16.18.1","_npmVersion":"8.19.2","dist":{"integrity":"sha512-ky7QrVOZ2JjV2pY7ZMvjiRapNrED+5pyCFqjD1HeBfwG3lOAwcuA1EjeEGGDFYrxHC6fdp3R5h8Fx1iOkZLdJg==","shasum":"452e1ed108a25a213b11d4e073c715de82597235","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.d4cc0eb.tgz","fileCount":66,"unpackedSize":2405933,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDFXki99FA9NcWNBr2JGpGocvWZKmYNTCf2gN9GxSJUiAIgCuOsl7cpgbDkpwQpP1ff6t9HIbhu+vlRdCSolAi9pGs="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjvV23ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr6pw/5AIxzk1ePl0aYGDHP5pHSbH9L0JbCVKYuu2aaO9orqm1oAai1\r\nkD2GCD5cghARGzCt4ZPD70qpvM0iwfIiK1r3yZeTcLpQ/QUOoOHEU1sUGxgu\r\nGPuPccIvr8WaenXuN2yss3E6wh6l5xdiB8z34CrUn2pC1cY0hVAzzbfVWSTu\r\nTDHrkxSMsiPOSGQA4fl19KgBCxCGZcFgUka4a6SwT55UZH8vIoNEz5fzKqby\r\nAbV7FcEibNvATMLP35pS6p+ggB9Iii8zlm5hiE/QCy0nxJPB76vnw79VOo4s\r\nCIpfXhXcLxs/RCpy9WSg8gV+LBg9qB7ME7P9eKXyNEDnvM+qyYJcJsfbpi3v\r\n5TIKCNLpjt8VElJsFS2PvL+l8m239C4cWMhRSBnVWHVydHUVnW1zZWc4DEE+\r\nFPQvBzJ4OE55OIknHBfp4HxontCcjJu5Wbm4t/P4FwdL//vo4zwtC2GN+GRC\r\n+xP6wjx7KqXq+rk+WLRHS8vm+TaEObh96ggyEIuopcueIZOdnWNrU4ncRNDE\r\nAalLpgYqvz6kmk1gAPMqeFMfSzfoJ0rz4FIwYd8CgoPIlrlG30ibVdINr/jA\r\nl/iXxMM0Fp1MwAfFTqfpgfeqLJd2w0EO1UBo9kS3kC1qMATDlCTg3ElkfOrD\r\nGFxR/iClfpjlMloulMTQPNhsu0M/j/ecoSc=\r\n=Qgt0\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.d4cc0eb_1673354678889_0.729747647836698"},"_hasShrinkwrap":false},"4.0.3-dev.e1d3ccd":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.e1d3ccd","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.e1d3ccd","_integrity":"sha512-95uAW0IAwWJlHKO3SQSO6CRF6Jr2kRMcE9xfZtUXngLrkBvNQ5KfFMLXXBm0R3PH0vALF9sUcCNZa+PhbpmtcQ==","_resolved":"/tmp/1e83cabc2a64312954a81dfb1abe821b/ethereum-waffle-ens-4.0.3-dev.e1d3ccd.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.e1d3ccd.tgz","_nodeVersion":"16.18.1","_npmVersion":"8.19.2","dist":{"integrity":"sha512-95uAW0IAwWJlHKO3SQSO6CRF6Jr2kRMcE9xfZtUXngLrkBvNQ5KfFMLXXBm0R3PH0vALF9sUcCNZa+PhbpmtcQ==","shasum":"e4873031f600cc253c82032579c2ea796dd6d3d7","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.e1d3ccd.tgz","fileCount":66,"unpackedSize":2405933,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCqPbnPa60JwPk9TBjr9E4zqQjYtTE/P6NRp0tX7+V6zwIgARtOfmdpVnf/waHGTCFJbyaNkzF+34jX/nqu7G8M3dw="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjvp9qACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp06A/+JBWOwQBsgTp2aDUuUAjU5iEBZEyM5ZliWtP6bFctgVdAcb+C\r\nJteZ0dTs3U0vAWT//q+IiBchOW5XTQ+75C9AE9CPmqzjNmRsQpxtMRg6YE1p\r\nSLRqHu4Oo4tNTLKmVyXPy7JEfnJ/rXtlQianvaOMY1jPK16izLdhdQRlARwh\r\nW2cqL0i9HAupVYNQLdFV7tu8PgJGJkUb8PLZvG68l6tphBcPpHIPg6Ek4F0H\r\nhrtWWhwLoTtPHbxefl/gH47RpzSauq+B7R1knyd18yuPGZolsQbYsZDe59+9\r\n+0G6hSCaJLu4fbl9Ra8lrIzzA25b2hpFCHp1c7z15MR38/ukQj1YxXa9atTE\r\n4dwsvtR7Y1B8eiXdBpsfM6tM9yWktZ8qo7L3KPFibr2djLtZtZZETsHq7kwa\r\nXGRCx/DJxaXFTcNGEQVZHA5aPNWpX6GbN5QaoTrpeVDKapZwEVsebq2MYiX7\r\ndJU/cDyMOTLTlOknia24zs52UoBMoA9mjLDrkhnwBXPYpeN6XQxFZsziAUJX\r\nHouXYWsvkiKpegHnTWH+sXUTGu7EwieX9uL5G6BQdeMiWuOf/cmZ/Ov9UAtY\r\nc/casxkWx+M10VeV7drAoFa5exxNI4FrBMVqJr9zdraCBSu435rVh9ouoSHn\r\nQi4OyeRU9ba2wrmIrHMg/iVO1IpgMUMcMO8=\r\n=UW0B\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.e1d3ccd_1673437034347_0.2558218914404904"},"_hasShrinkwrap":false},"4.0.3-dev.4d27a34":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.4d27a34","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.4d27a34","_integrity":"sha512-mR7FSjtKvyoX76jkVzVrUjDubw8+kW8g1Zf0Ioe9pCgCFJJ1bb4J5pEcqLB5FekpGQuqrnmz8wyCXHZMzNLrjg==","_resolved":"/tmp/ac010fac87dcf92e2eb07772b29f7e7b/ethereum-waffle-ens-4.0.3-dev.4d27a34.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.4d27a34.tgz","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-mR7FSjtKvyoX76jkVzVrUjDubw8+kW8g1Zf0Ioe9pCgCFJJ1bb4J5pEcqLB5FekpGQuqrnmz8wyCXHZMzNLrjg==","shasum":"85309f8dd91f6794c7e2c94a9396a4f0d34e3f0f","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.4d27a34.tgz","fileCount":66,"unpackedSize":2405933,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDwYkUjbuBy6rrs2ukQSytMCJlcC761I9Ai6t19qqks7QIhAIBoAZ2zJ50DZ0mECUiOofgNKLKSrdNUPzfEIPWJV2uO"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjzqb/ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpqahAAjVti3y6eexKm91+GNECk5iQsMMbH4ss2DLsA6tbb4ehBsGPo\r\nTKGmI6Y173c2ELpM+DYRkBpLGziDigjhMe/Myas/gsrcStTUvpv5F5G/4Hg+\r\n58pdpW4rLlrV+g2tCO0nSpYF47mkMZJuoeL+8tvZt4KoHt+KXXkAnhCWJLpU\r\n+/ESZkArC9nK9cMSZ0+jz4pzglwcCxZ03Hjm42ghAF6MtlT1gPay3BR5ac5s\r\nnjNWHPdQHBmiTeOqCqnNEs4jzbD0+BF7rCSrycLpol96rw0craX+Tb+g6+v3\r\n0rs/tjR1T+ZX5oafuEwbG9x1Pffdq2sgZnODkmGNbyreBzYFKefu+LFDfG21\r\nIjGpEmx44G/igec7YxatLFetzUsYAaXYC3C26V+t0e/OFUVdeer0gyZ1p4+Z\r\nFW7SBHbjjQDopAoAWE4VmUnURMsrUgaYM3dItLvOdIUI+X/fJkXTFJE1RggM\r\n7krFhrH8w9tvf9imUIF2GlYtb1OjC3hrUjIjjSV7UbCbd9jwW6MhP0jCV2Aa\r\nG1uZ1hXqweTFq8EEeGXRrxJ+gga1G+2xIGInlmwPGrrA+Yh8idzAZMhdvTm/\r\n8YXRB89u6od99mbsAp2YMJdICq6gGnDv88MMDzP4IM0O3JQpFKJ36qtQ8OMH\r\nDRbmhPqI/bpUDBagC3Vfq9thr0It9Tpwl/E=\r\n=fV0L\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.4d27a34_1674487550731_0.5509448043285319"},"_hasShrinkwrap":false},"4.0.3-dev.a50814e":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.a50814e","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.a50814e","_integrity":"sha512-FGjwEe/67nAQmQwSJJPRG+U1c9tWBYoKOgE026qbzgbnk3OxZTRdbxxMFgZznQ7K8wUvSHW+Ih58CiokaPcTyQ==","_resolved":"/tmp/b4bc3cdbec1403565a5e574d3375675b/ethereum-waffle-ens-4.0.3-dev.a50814e.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.a50814e.tgz","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-FGjwEe/67nAQmQwSJJPRG+U1c9tWBYoKOgE026qbzgbnk3OxZTRdbxxMFgZznQ7K8wUvSHW+Ih58CiokaPcTyQ==","shasum":"74c84e232a3eacbbb5a8096fef37466a85b7c021","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.a50814e.tgz","fileCount":66,"unpackedSize":2405933,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFlIprJdczqDlrERw/umG2zl39kD0ACg9eisIgUbnJ4gAiBGcEnOfxRDe0P95HWgwjO+zw0tY6zlHAAZDHoBYzuGPw=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjz/o2ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqouQ/9FVXwXyi6yCp2t8ipNCRh/NTLA9+jdM0HtsljyySQ0N3HOoDL\r\nQ7Akyr82GlJrpYqg6KYJpP5hL0jGBPNWa6WqEeHFzu/M15uPRlTyNxIuIj6t\r\n3oqKUazPG9rXA52N7/573UBeoxw/qeHlMWdWu1P94W9jUY/M68WfywCyxfzR\r\nJJI15HAT8zCT6yGs6RKFs0HAr30LNlP2RQluM3rMfsFIrx710uOhKw6dIB1T\r\n9X3T34E+6V0/fZ8pGfREr7WJS2Rt09pBxfuZbeC2JLzJEkSotm67klXYZOd1\r\nEI8qTdC2vTaaHntPZUeRjum3j1Ggdhmdu3itWG89eY0OrAnWV4j5u2fJTuAB\r\nACrIV9+T3ipyNV232mRDqGshRsZZ914eQVEvRf9ps6CexaAnw/18bbeAanxi\r\nH/yd165HmxhfJwagVRdMXHWWhpVoFZwksaWHKEuZjimG5QZVA24+IdXjolhB\r\nbcbQs4E8IZlhxkSPXBWnJh0rBRuYIY7SFPDmCTF2HDWVME54Y12rBCCnxXCc\r\np9Su8AjUJ50zIH+bonMvpfPghSfOwqcwaVyrEicmAeCG53S+qbvJJo4cCFsz\r\nNxgawKgyQlC+AKFGvaS9zcB2Re0yd7hTeQopSssiv5A0KpiWIjVn3M7w7uBx\r\n4Q6kbCPJiAqx0bgYRgGwVOM0nnOi/H/f6iQ=\r\n=V8Sv\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.a50814e_1674574390176_0.9590543849020001"},"_hasShrinkwrap":false},"4.0.3-dev.166b72c":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.166b72c","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.166b72c","_integrity":"sha512-UnZcO4LYoI3ysvDd9UvlsoxXzk5aMGmxeQHKYdbR0uBmLhYHWIBUdQ2ANQuGWw7lNo+P/d2PUAa7TJQYM/SlKw==","_resolved":"/tmp/cd83f4013d429b1d9f33b2c6820c0568/ethereum-waffle-ens-4.0.3-dev.166b72c.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.166b72c.tgz","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-UnZcO4LYoI3ysvDd9UvlsoxXzk5aMGmxeQHKYdbR0uBmLhYHWIBUdQ2ANQuGWw7lNo+P/d2PUAa7TJQYM/SlKw==","shasum":"09bd82dfc927f28db69c19959fca0c9278117c69","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.166b72c.tgz","fileCount":66,"unpackedSize":2405933,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCwQAWYsNGe3TnFCDaU7zsVYD8BbuRdMY6PtvVuPAx5agIgRKIpOQ8adQZxpXQ90LZu+s+ez0l8O4M4LX0Wah9opVE="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj0l37ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmppuQ/9G6P2sc57Cr0MF3gIV0e25V81pDxY5OrOFcpiM4S9rDzvnuor\r\nzs6kpBiZU3SHKL4SbNuIjsJr6X88X/uP2QLEhAoWNUzdwl0qGgu6InMLseyR\r\nUksXCEaDtAHAeaXZx76+S+8LcKPAEU4TXGvd3niuBN1Ou593rYd9WI2+jgJ7\r\n0LTaLHtgqmFeFAi1qpz9QsPisR0ao6+5tsTnJsgwGm4wNPKFDHOQ3NHTz0jw\r\nyhw8X7PxQCx83FmDeCaC7GoAEzkFHgU1Tm6RGujZqv5qnx3UwpQAPbncwbnp\r\nl6kpAhb3+qOm1QY9b4tbF6iezWyVfEvWNIL1g5ZQ0XpkYJ9aiPV+lqG70QYa\r\nk1afAuefco3OG3LZ7z7GzYdRwvMP3CWWfcc1ff3Z/8n9mn/19F4xS9S3aYEo\r\nBFDyl926abWxWTkvSyeJfeYg0ZOpOZXlt5mZ0ZitPZPXvT3/tKYSK+dyjq2+\r\nO1w0nya5fBgzKN3acxMYbhdIKjDpVMIwT4/m0yMr9ZtaPEhX9shXhMGPETCr\r\ngv4Pssj5c5eTeluGW6H8ocG5zgsPcwoR0oCFR2xKsyV5bmXv7hyd7kJbvcH4\r\nchao+PJ+8v+Oe0zSjZTOMji5516DIkpvQsw4okYSFGmT2t9jOQNhAyNNaPOq\r\n1ZXLozMus9nsDcuewRrbbxsmML4x4NR0WYE=\r\n=FSb/\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.166b72c_1674731003625_0.7516431088399906"},"_hasShrinkwrap":false},"4.0.3-dev.0bc9af4":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.0bc9af4","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.0bc9af4","_integrity":"sha512-tvXLSUOc3cxPf95G62eCiHaSqVcAU9fLrqn1PW4u7Fcu006XRN+2UpoNXdoYE3kUClFFvpyVugegLiMd/+BM8Q==","_resolved":"/tmp/5d84c3ba2a664e07f8691b8b14220c26/ethereum-waffle-ens-4.0.3-dev.0bc9af4.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.0bc9af4.tgz","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-tvXLSUOc3cxPf95G62eCiHaSqVcAU9fLrqn1PW4u7Fcu006XRN+2UpoNXdoYE3kUClFFvpyVugegLiMd/+BM8Q==","shasum":"0892c7792eafe4583a3735841112138f78b834a4","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.0bc9af4.tgz","fileCount":66,"unpackedSize":2405933,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCh0BJu1tv6WxTydaVVxlQMo4FrI+MIkskzGDnvVBPzyAIhAO3NLdmZHXT6Ft4fDVpy+Y5Py06kLVVbe9dj+YBrWFg1"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj0nm+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoOJQ//e6X64jeA0D31VoRPD0096jx5JglkdvNMr2t49I1on8p6+AcY\r\nIz/e9WaG8b3p7/ZXO0kbEGZfbmWmA8ohFzQxsmGP6BLQ3H18HnSlBd77ox8z\r\nsh+nMJNswRTT6W9niBTQ3eEc7oB0v1C5NWtzU1f62qWGFuDlhDh52N8sgYUd\r\ntedTRq48BGzHnp7hv1QYafM4TIkVAju/O4Y+LqIzONF492OoXhBNO2zAOXNq\r\n/I3+WqH+iyKOTLPr5S27z6uKVR10u/ARMzC5hxlGu683Bjuj8rV1ciIJV6V0\r\nMFUspammVfBYC4VP5v++2ap4WAgw4ORbyOmuxmF4NA9Kauz/gnDmftQr0G32\r\nJC7hWy4aZyQvO+NDvVkH3mGR4zEt8D6sBNTpQDK9ppbOTC1qU6SCIY+Ijwiw\r\nL/A4UDnrMdGDr2kVFmeXnR/DuEU4yu5NfTeJQbN7CH3JALW3pGOKGv8J2U48\r\nC9Nfr/oH20arermyoaLkd2y0yUTFCSh0pLj5WiF6ym5A2a4nwjrfmv65qzux\r\nMJUMmdADHvj86FLKAm+NyG8kwE0MsF3jqfg85Sfc3lD6K+5VK1ZV1r7cpqxr\r\nvKOwfLOm6FG3eI16o/iImMrC7rJ8slt0JSYTk1hGsZTArk/HTgTj4UBWZxO7\r\nIJIpCN9iyQ5JLANut9xlnzq5KjqTrRVzGKU=\r\n=D4cu\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.0bc9af4_1674738110418_0.48794387176664133"},"_hasShrinkwrap":false},"4.0.3":{"name":"@ethereum-waffle/ens","version":"4.0.3","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"_id":"@ethereum-waffle/ens@4.0.3","_integrity":"sha512-PVLcdnTbaTfCrfSOrvtlA9Fih73EeDvFS28JQnT5M5P4JMplqmchhcZB1yg/fCtx4cvgHlZXa0+rOCAk2Jk0Jw==","_resolved":"/tmp/f03736466f3c7642276b9106c4296ec9/ethereum-waffle-ens-4.0.3.tgz","_from":"file:ethereum-waffle-ens-4.0.3.tgz","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-PVLcdnTbaTfCrfSOrvtlA9Fih73EeDvFS28JQnT5M5P4JMplqmchhcZB1yg/fCtx4cvgHlZXa0+rOCAk2Jk0Jw==","shasum":"4a46ac926414f3c83b4e8cc2562c8e2aee06377a","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3.tgz","fileCount":66,"unpackedSize":2405903,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCGXKywj/31y3+ozlBtj3o05C5L8sSSYxm9juilVmulNwIgEjX7OolkmgpgeC8QK3tgvVqCmPWWIhmuJKbUJhxwGc0="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj0oLNACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoZNQ/9H82qUdminPo8Jj+iy9rhpHjXz7wBLXtNZtNAz3czWTCW9E4l\r\nOVP75LQbiaNy+pfdmcblrbN60dK+8YOYpVkeDL3Sfo0Umb4uXa25IQCN8I4V\r\nQ7LMIps/cjOZ4zE0GdBElDxmR9oc+qUYq4hz9IpS9zVqKa2t8NH0w8OrCj9y\r\nQ8sdeH3nprRdnah3zZIRmIn58NPMtIqakhxxN7dWuVy+K0ksVqz6hiNiNcUc\r\nutw+YEiJMhyfjkTemigX0SfemqtyM1kpbLUTPSnspqOWxx/YJa7I5b0NDWcq\r\no5mVNsVDf9CPv8Q7TjWPGhl1J9lPbTOmhzWUOrrZHkLjOTnMu1X8oDM6j3oJ\r\nkyqeMyJqCkKxAdpE6wszXt4X/svB5+TKRRMmq+IxcwjXnHawcks6X/4rPHn6\r\n58zcDdA84XeKGwwgzThtnbmJXN3l25bbgc19psI5F5j30UyHzFtAfWnZLaPw\r\nnCC3BfUZk9hOPDp84m2YXugtewI5tQzQeKmmyd0Bs4bvD/4B9RVIGfXgGM63\r\njf9VfZcqaQEmfV3fs6Z8HEOmM5CdymFF2ltQURbJZH30h6u+QR6fV8h84dY3\r\nIbuGw/kNtP3dzmuLIDCQTqOt+3b4/Lku3oaSjQKFV/QxXFpki3RBKNUd9f9W\r\nLeeUUWlfD3Y2UETVUfkgiBkQHEJ6cyPEDHI=\r\n=xXZD\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3_1674740429007_0.2580486980307197"},"_hasShrinkwrap":false},"4.0.3-dev.13d1af0":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.13d1af0","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.13d1af0","_integrity":"sha512-608jixCIQ+SHlTL4tJfmZF/DbgloD9lMIu4EqVrddL8R7vBDQHjtDPK4cTyNXtBexEvWqqmi8ThI7RTsalRBDA==","_resolved":"/tmp/cf88f996940a9c7993b3ab9a89712746/ethereum-waffle-ens-4.0.3-dev.13d1af0.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.13d1af0.tgz","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-608jixCIQ+SHlTL4tJfmZF/DbgloD9lMIu4EqVrddL8R7vBDQHjtDPK4cTyNXtBexEvWqqmi8ThI7RTsalRBDA==","shasum":"873f1b3003544f2c95b83002d3797308ae4a9c7f","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.13d1af0.tgz","fileCount":66,"unpackedSize":2405933,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIEOXhd2VhO+DbL/DhH5UdreRC43fp1IfAt+DMlFzD8KyAiEA57tn4qSGZISCb4vLK3j4rjTukoUFrgDyCfajcT3rcbA="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj0oOyACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoSSA/+MZn8t9Qg6qr46cR/TIxeGbXKJFFcST6rpwC3Pfv6jGWoFkLl\r\n6pTajyjhg84ZR3uOa6vSReg6/Xu1SA2L1FplS48hnU7govoXZ3hos2BxCnwa\r\ngnFourebu3qlHsX5Nx0i309CIFVXacQ79CJOLzg44GIxoH8d4f2LI2wgl34w\r\nyLSnzulYPp+fh39il+cw2FaTtR2XDSADIpuEWcbbEdFMRTJb4FfjLybxicTE\r\njEZjedRfoN52zYJryxnNmXKFzQtifnLWGQ5Xd5/U+WZHi1vTDJIG9erOscA2\r\nV1Dp3q66zTJDMrILPyWq7nTHC7Sxvt2QRr1RPIbJxnf/P4QWDRhBlBhgVtEA\r\ndz2Ky7IrQ8G+ok3IqIPFyVW3Ke5pwI3Gdk4e6Dik60DmKdFWgsApepJwugtO\r\noBvuZZZ8Nq931t/lmEwTlfNMasHXJNkHnpj74/CqtYifEbQVVgSOagg7DE75\r\ngoc8oE77VgmtZ/DNu/cSgWC5KzD9JaELMPVITekz1HbLmlqKtA8FOtJ93ePQ\r\no/UuZ1+yANmfCNU2OIEnMTR3VTdO2kNw3/cpECYp3Cxx/YcVqiHiFSutu1d/\r\nKHpQZOEh/rAhbDf3M58ylWuzG8WTCGsgQQc1JHtstIxrPM6N64l0SgIlDrvB\r\nc07K540dvW2tQ2UD1PjduEqvx0WXQ67L6EY=\r\n=upDy\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.13d1af0_1674740658629_0.24264712720100468"},"_hasShrinkwrap":false},"4.0.3-dev.f8ca718":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.f8ca718","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.f8ca718","_integrity":"sha512-f+YX2vguZ3N1NT1dYMWIq7arrni/eDoUQJb8lo0ag5gOtx6k1myIbjPOpeUeIGXRsvfLzWEFieEZ3NCTvWa5hw==","_resolved":"/tmp/81df40708bcd5e9c7fb8ac316fbeb0f5/ethereum-waffle-ens-4.0.3-dev.f8ca718.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.f8ca718.tgz","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-f+YX2vguZ3N1NT1dYMWIq7arrni/eDoUQJb8lo0ag5gOtx6k1myIbjPOpeUeIGXRsvfLzWEFieEZ3NCTvWa5hw==","shasum":"49ded2041ebf1a4224bb98a430360ced7ba3f889","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.f8ca718.tgz","fileCount":66,"unpackedSize":2405933,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDndHHuFHUJMbTNV5KjWzJvdblLxIbGAC2oI7y8IIi7KAiBBTsH9V5w/QsneHMcD5ePpmTVz4XhygCAp9ckpJH7CMg=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj0sNrACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq8+w//a5d5nywBQaBACzNVYaQzyu2TzwMDTcEDzlzNSvOP5IXwHyx1\r\nGnAqIMalgnE9e2x+A308e/9NvhmpXIqRLkInd60UNcrElVsncggP/5EzDNPP\r\n4SCeksso/SEdBwH60hrwCH1OqIT5tRk/cO5INcJ8+kX/MvhdTSQ3hhT7BJqs\r\np5GbdfWWIOJTBTu8xyFQhFPz9k+mIWK5ALcBfG2fOe6jpYbWsiIfsE0BtreR\r\nKtvPEMx/vnYQHgxrC8dk9WiaXY8BU4TBPDA1+F+UgSOGwhoiDaBMe6ZjKeuv\r\n7f/llP34gpMFgltwtaDP1RzHxC9KETcBjs5HHXMcGW9Tm+5hWYkuodCv1Bjt\r\nY6YjCWOgnAc/KyHZVD3CZreSjNQri80mDO2xWDxJ1ZgMhQV8KGKJRROXaWId\r\nOKp8eoJhKHhZStiAd97sPqhb0ZRr6f81Sqvc+M6rxdu0izzfIPCcBp/n8xY7\r\nG97nbL27cWhAvbFuI2d36wkhgXJ4lO+Q4coup2Njf7SFlYPxHzQr6h1zzBUw\r\nrzgIXdKY44BHt0qQciF5zSOeKo6Vz+7WBSC5+lXrG4yYrcYOJnU2nTl+EUOV\r\nWfUZj8m+6elU/rEKyWYP3z9wahJvRBEMyTlfrO4np820Xb5v+MhGjIOj0HlF\r\n2M/ynavafjM7M26HRkFETxpiS0bff+musGI=\r\n=/VVh\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.f8ca718_1674756971130_0.49155285962436723"},"_hasShrinkwrap":false},"4.0.3-dev.a1d89d0":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.a1d89d0","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.a1d89d0","_integrity":"sha512-eZaYx1GzR9o4fpePiUs9c7ixBReCHCCsWO/XmO94CSPx+fqQqo4gjCJFuulpNxgZaEAw27mNbDGeTI3O5fuskw==","_resolved":"/tmp/93862568455a9564c013405481398585/ethereum-waffle-ens-4.0.3-dev.a1d89d0.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.a1d89d0.tgz","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-eZaYx1GzR9o4fpePiUs9c7ixBReCHCCsWO/XmO94CSPx+fqQqo4gjCJFuulpNxgZaEAw27mNbDGeTI3O5fuskw==","shasum":"b0d769f7c562378fe03c3eacd1cea09eb7522363","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.a1d89d0.tgz","fileCount":66,"unpackedSize":2405933,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGju79BWFgNifcAEiTm/lOTc5sXO4SA97Y2QAbqIY2PxAiBseMzdXgGzl4X+RUNmlBR8hlj9KJ1eIeJrGlBGBFixGA=="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj09MmACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo5bA/9ENZFG67l3OIiOedqesSVJ1wucvX6S/zH255R3EhwRfvfoiC/\r\n58Yaxrt4n2DEcKKq2/bfiFJR+J2Q+ztMmKiGMAUQQXSgqNKDd7TIyFV8XOr+\r\n5HYX2w+Z9vYwmt4Z7qTMAW18myKH1D5b49YRFgDLnuVWekyze7QePBRBgdZ3\r\nD0z0cSOw7DGNV4mVEYuBJCWbNY5gVvebencemXEUnbPBOWAuKYYsrifxyT5C\r\ndbocCxpj/q6hVYlXPNGNXQoCWZ1wpKyFlSuJQq+F3a6xusv2FE/6O+xgMV8+\r\nqJEKLBGhiNrMIx/Tm6V+c4YbyU9OF1+Ez6LaguYfTKnrS7+WgdnwJHggPlvo\r\nm+b+moQhksXkIFMtKeEXoctTbbu9Nnw49XdMtPWc4qUSH0atW9e2tGZ7Byp+\r\nNtU5+qvBXx6y3bCnno4BoSKKgoD9NVPKs8Xna3+rbtcOxZ4z3GvnItc6zE6R\r\nGky+H7NuRVt5cPSkbbJC8Jq7Cnc7gXCDgiFmBKA3T/k2USsW2Hj3ktmLjN/s\r\nuHPyHmtHHM8+tZTFXZjU8BJfy/tma1PCd2Q+xgqtyI6eUqTH1UrJKxeBJ+Sk\r\nPdrE9dHZOqgpPAAsckx7xjZLhey5c/RxIZlq+YPA7fduhfbZuicrACuwOZdN\r\n150OGbYi5qgRBWNlwD4y6MvJ56F695QXu0U=\r\n=nBMh\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.a1d89d0_1674826533898_0.3131797776129981"},"_hasShrinkwrap":false},"4.0.3-dev.4740ec6":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.4740ec6","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.4740ec6","_integrity":"sha512-rw9JeAB9mEPxMQ3ocjklb75ht7xqZi39cSnxnwrITKGN/QnpMnzsPFvoHjixL9Shvhp66N+dGPINMOFGIQ1umw==","_resolved":"/tmp/277d5890cbb0c09151927c9c74e7d2c3/ethereum-waffle-ens-4.0.3-dev.4740ec6.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.4740ec6.tgz","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-rw9JeAB9mEPxMQ3ocjklb75ht7xqZi39cSnxnwrITKGN/QnpMnzsPFvoHjixL9Shvhp66N+dGPINMOFGIQ1umw==","shasum":"fc83eb02611a7e143aa58b9510ce195f8e0b4738","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.4740ec6.tgz","fileCount":66,"unpackedSize":2405933,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDu8NqIRoMXgLEqOWcYulmPmwF/LV9pJBHRgo7O+IIFlgIhALsLHWmgyzkqozKeKLJFzw4dYbqhBvg/zMxVAUtO9fsE"}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj4Ob/ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo/DQ/+KkVLSvuqUoOeAkCIQFZ6sMZ+FQXe2geTv0QIlkSwcQVy/jWm\r\nE99+ijBvpPNLYMWHiaZ+vP5X4+vu7YE7uNDLPVLtgH2BOmrq9CLEIRqugztR\r\nr8LoPDdyWkUt5MScngx5k6tFBD6Xm3alqbumjSLnW1O/EFZJ26w1c94wpgVi\r\nivrk6I/MlSKO2VAfg9maOZLHbqdv9CrFuiDDnZc8XekDRvEZbvej7JydAKhY\r\np7HlDFDB7JeDJfJ5Oyk01VwHvOs/hla9tR9vdOON3PqEyEWGicP867kbTZOq\r\nDXtKouQMGfH3MSRSB8FdUqT/Sl0uF/AKik9aecVyKZWk71YqG1Q8Nue126AW\r\ndTv6rs/xEOnIh+IDgwMTtCn6n52eF0GTPRS4DRBQERwmw/xhRoQH47CkwFJa\r\nNvjwScBw3qQoxklpowF29Ig1CsZ7FXKuR/693OLeEYXLhEhC/DD4XfOzH5Sj\r\ncwkOCbPmGgsPsuEwmUWm1o+2Gdy4yPiG2/UZYSIeziw8NjkwvVlVEkIMGCj0\r\nu25Z5RYOvaxVHGcTwCiOwhKxIIxoGHnJ8NEC/ETnCLVdh80WnUzYclif6d9D\r\nHNtHE6VVjZNcxtf2BJhgX9+jQ8gvMVUuNUU+dkhZlFPuFHPrCNKvj69rt6l/\r\n1nhbHaLl7vytk/qUvhUSCMmmQtJP6VyhtdU=\r\n=x/Cf\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.4740ec6_1675683583017_0.3800694334632946"},"_hasShrinkwrap":false},"4.0.3-dev.0915e72":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.0915e72","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.0915e72","_integrity":"sha512-W9zCzBm2xaNDTvGFs1Mw73j8YSbuIiUcd10MzKyrg4AX5W3+4bk+RFgaxwSXLP/IhEOmFIbW4M/3tgwXX+4p0w==","_resolved":"/tmp/8851ce853f1d558f2b44f7702a8f1817/ethereum-waffle-ens-4.0.3-dev.0915e72.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.0915e72.tgz","_nodeVersion":"16.19.0","_npmVersion":"8.19.3","dist":{"integrity":"sha512-W9zCzBm2xaNDTvGFs1Mw73j8YSbuIiUcd10MzKyrg4AX5W3+4bk+RFgaxwSXLP/IhEOmFIbW4M/3tgwXX+4p0w==","shasum":"c29bd5220112d2c781e287029ee85cb92006a03b","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.0915e72.tgz","fileCount":66,"unpackedSize":2405933,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIEcozsZB5n31qsKgUT+iNOy4DFffATSeDpg7v4RKZldpAiEA/Av25NgcKJsXVJ3ksutEzEQ3xdZJzkNbtkv0WJdUR/c="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj7QsYACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrLKw/9EQgTIy2ie/UNd0dp0Jl3meM0U3afKHJtyAqTHJYQXe29piaX\r\nSFT+xfP+S9PY5bldhXcpEIzn3BMiCm25yR8mvCz1uz+l8WQ1NfdkNjztix8h\r\nOnA3hw94DaJzeB60Yk+02Npwem20yr3DlNYYHpXt3Zu6ME/JFEk9JQ9empzR\r\n92j8LbsZtQXZ0WURJEzy8foeiKtpWViD02QPfUORHM6C8I0SB5CcYhaP+BdQ\r\n731HpvPqW5MmffgtK8Ff6349sU4dfJa4lbKsuikmpCwdRpfZEw6yvqcb85Ta\r\ndccBmFBKntTzhgA2lF2r7oVG/sdDNG9tWZlcde5iUIH7OXQPJghZdaMC3lhn\r\nCEIfNWAES89nxR46XStipmaIhznSDX1QLz/3rlYa+uyPk5TXnDPxbKDIeeX6\r\nYq1YDDAbxNx/HAkx+G+Epsez235HhgTZ/Ja8m06e1DvJ2XAopEeM3pqtgTX3\r\nci6nDMrsqy6wCqNKF8KBGEezH7jehUMTUcnPYWhIayQT2HrNjy38A3v0VhbU\r\nw34a2pMy1ttHUS9H6O8tzNQL0Y2HInitwEeNO2DUfxalK8U/ufiL1YFy/+QR\r\nyda4aOVzd7gRoLUHvwTZIpP0ybOyK/bMwRG4yCvtPNcqEaYfx+h84nRtPunZ\r\ns9/n3emUrG/F09RGBvPZWR/YGWvJhfLs9Sw=\r\n=ej/L\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ethworks","email":"code@trusttoken.com"},"directories":{},"maintainers":[{"name":"ethworks","email":"code@trusttoken.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.0915e72_1676479255836_0.86953363118411"},"_hasShrinkwrap":false},"4.0.3-dev.efd5f2a":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.efd5f2a","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.efd5f2a","_integrity":"sha512-DOxJoRdXiCDcHukAffRXEBSooAOZa2vKQhR49b3gnccv20KFLLIreMivs1auXCTsLPH980hedO97siuxqLRNoQ==","_resolved":"/tmp/4d86cc487d41ecf7e259806f731e736c/ethereum-waffle-ens-4.0.3-dev.efd5f2a.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.efd5f2a.tgz","_nodeVersion":"16.20.2","_npmVersion":"8.19.4","dist":{"integrity":"sha512-DOxJoRdXiCDcHukAffRXEBSooAOZa2vKQhR49b3gnccv20KFLLIreMivs1auXCTsLPH980hedO97siuxqLRNoQ==","shasum":"fef529931015772777fe7ba9ac4be27c59773e62","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.efd5f2a.tgz","fileCount":66,"unpackedSize":2405933,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC/LY8eOzxAsoVqCOsk796SkK0K1V2L3h+8gprGdrGqKgIgHfxTveyfVumpL5mgyp3DLcIDoc8UGkis14MIvpdsON8="}]},"_npmUser":{"name":"ethworks","email":"eng-services@wallfacer.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"eng-services@wallfacer.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.efd5f2a_1697111499231_0.1263876034901512"},"_hasShrinkwrap":false},"4.0.3-dev.238c11c":{"name":"@ethereum-waffle/ens","version":"4.0.3-dev.238c11c","description":"A mock ens implementation for testing.","repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"private":false,"license":"MIT","publishConfig":{"access":"public","tag":"dev"},"keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"homepage":"https://github.com/EthWorks/Waffle","bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"main":"dist/cjs/src/index.js","module":"dist/esm/src/index.ts","types":"dist/esm/src/index.d.ts","engines":{"node":">=10.0"},"devDependencies":{"@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4","eslint":"^7.14.0","ethers":"5.6.2","ganache":"7.4.3","mocha":"^8.2.1","rimraf":"^3.0.2","typescript":"^4.6.2"},"peerDependencies":{"ethers":"*","@ensdomains/ens":"^0.4.4","@ensdomains/resolver":"^0.2.4"},"scripts":{"test":"mocha","lint":"eslint '{src,test}/**/*.ts'","lint:fix":"eslint --fix '{src,test}/**/*.ts'","build":"rimraf ./dist && pnpm build:artifacts && pnpm build:esm && pnpm build:cjs","build:esm":"tsc -p tsconfig.build.json --outDir dist/esm --module ES6","build:cjs":"tsc -p tsconfig.build.json --outDir dist/cjs","build:artifacts":"node build-artifacts.js"},"readme":"![CI](https://github.com/EthWorks/Waffle/workflows/CI/badge.svg)\n[![](https://img.shields.io/npm/v/@ethereum-waffle/ens.svg)](https://www.npmjs.com/package/@ethereum-waffle/ens)\n\n![Ethereum Waffle](https://raw.githubusercontent.com/EthWorks/Waffle/master/docs/source/logo.png)\n\n# @ethereum-waffle/ens\n\nA simple `ENS` for testing.\n\n## Installation\n\nIn the current version of waffle (v2.x.x) you will install this package as a dependency of the main waffle package - `ethereum-waffle`.\n\n```\nyarn add --dev ethereum-waffle\nnpm install --save-dev ethereum-waffle\n```\n\nIf you want to use this package directly, please install it via:\n```\nyarn add --dev @ethereum-waffle/ens\nnpm install --save-dev @ethereum-waffle/ens\n```\n\n## Feature overview\n\n**NOTE**: You do not need to use this package directly. You can install it through the main package (`ethereum-waffle`) and use it instead.\n\n### ENS\n\nThe `ENS` class allows to create ENS domains for testing.\n\nIt will deploy ENS smart contracts system to your test node.\n\nTo create `ENS`, you should submit your `wallet`, available in `MockProvider` class in package `@ethereum-waffle/provider`.\n\nYou can read more about ENS [in the ENS's documentation](https://docs.ens.domains/).\n\n### Examples:\nCreating ENS:\n```ts\nimport {MockProvider} from '@ethereum-waffle/provider';\nimport {deployENS, ENS} from '@ethereum-waffle/ens';\n\nconst provider = new MockProvider();\nconst [wallet] = provider.getWallets();\nconst ens: ENS = await deployENS(wallet);\n```\n\n### Usage\n\nUse `createTopLevelDomain` function to create a top level domain:\n\n```ts\nawait ens.createTopLevelDomain('test');\n```\n\nUse `createSubDomain` function for creating a sub domain:\n\n```ts\nawait ens.createSubDomain('ethworks.test');\n```\n\nAlso, it's possible to create a sub domain recursively, if the top domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.createSubDomain('ethworks.tld', {recursive: true});\n```\n\nUse `setAddress` function for setting address for the domain:\n\n```ts\nawait ens.setAddress('vlad.ethworks.test', '0x001...03');\n```\nAlso, it's possible to set an address for the domain recursively, if the domain doesn't exist, by specifying the appropriate option:\n\n```ts\nawait ens.setAddress('vlad.ethworks.tld', '0x001...03', {recursive: true});\n```\n\nUse `setAddressWithReverse` function for setting address for the domain and make this domain reverse. Add recursive option if the domain doesn't exist:\n\n```ts\nawait ens.setAddressWithReverse('vlad.ethworks.tld', wallet, {recursive: true});\n```\n","readmeFilename":"README.md","_id":"@ethereum-waffle/ens@4.0.3-dev.238c11c","_integrity":"sha512-qNn2q4B8VZx/WRBf7aJk3+N7SCCOAkf3KLSclt692srFD3vusvFwZHXKO9OugURBurWyd5ISG7ZYCWskBkXGYA==","_resolved":"/tmp/912216dc42d747d4a2eccdfc12fbe424/ethereum-waffle-ens-4.0.3-dev.238c11c.tgz","_from":"file:ethereum-waffle-ens-4.0.3-dev.238c11c.tgz","_nodeVersion":"16.20.2","_npmVersion":"8.19.4","dist":{"integrity":"sha512-qNn2q4B8VZx/WRBf7aJk3+N7SCCOAkf3KLSclt692srFD3vusvFwZHXKO9OugURBurWyd5ISG7ZYCWskBkXGYA==","shasum":"96670045f0ba2cd480ffb320d5fc8a704db6ae60","tarball":"https://registry.npmjs.org/@ethereum-waffle/ens/-/ens-4.0.3-dev.238c11c.tgz","fileCount":66,"unpackedSize":2405933,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDnuEL5gtL90G/w5fgVgSdMX/Ye5tNfkTIY+ZdQXcwxRQIgd4iKMTseNjrr1deVgb0CegVHAZFpMbnCh752a+ZVrNw="}]},"_npmUser":{"name":"ethworks","email":"eng-services@wallfacer.io"},"directories":{},"maintainers":[{"name":"ethworks","email":"eng-services@wallfacer.io"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/ens_4.0.3-dev.238c11c_1697112517219_0.36448341026592534"},"_hasShrinkwrap":false}},"time":{"created":"2020-05-05T11:46:07.648Z","2.4.1":"2020-05-05T11:46:08.034Z","modified":"2023-10-12T12:08:37.646Z","2.5.0":"2020-05-05T14:18:36.184Z","3.0.0-beta.1":"2020-05-05T18:32:19.095Z","2.5.1":"2020-05-20T15:44:58.874Z","3.0.0-beta.2":"2020-05-25T18:20:37.967Z","3.0.0-beta.3":"2020-06-12T12:01:39.966Z","3.0.0":"2020-06-13T05:48:37.265Z","3.0.1":"2020-07-05T10:23:06.083Z","3.0.2":"2020-07-11T09:08:50.815Z","3.0.3":"2020-08-31T15:48:06.756Z","3.1.0":"2020-09-02T08:27:44.772Z","3.1.1":"2020-09-26T12:23:30.505Z","3.1.2":"2020-10-23T12:57:23.104Z","3.2.0":"2020-10-31T07:18:54.056Z","3.2.1":"2020-11-24T15:50:07.787Z","3.2.2":"2021-01-23T17:21:43.480Z","3.2.3":"2021-02-28T07:50:05.968Z","3.2.4":"2021-03-24T10:03:59.474Z","3.3.0":"2021-06-17T12:55:34.927Z","3.3.1":"2021-12-24T20:39:48.285Z","4.0.0-alpha.0":"2022-03-10T13:55:01.019Z","4.0.0-alpha.1":"2022-03-23T10:23:00.022Z","3.4.4":"2022-03-23T12:32:56.650Z","4.0.0-alpha.2":"2022-03-24T15:07:29.572Z","4.0.0-alpha.3":"2022-03-25T11:21:38.405Z","4.0.0-alpha.4":"2022-03-25T14:01:25.874Z","4.0.0-alpha.5":"2022-03-25T15:50:56.652Z","4.0.0-alpha.6":"2022-03-28T14:45:27.050Z","4.0.0-alpha.7":"2022-03-28T16:10:18.735Z","4.0.0-alpha.8":"2022-03-29T14:25:22.528Z","4.0.0-alpha.9":"2022-04-05T15:28:22.907Z","4.0.0-alpha.10":"2022-04-08T10:05:20.304Z","4.0.0-alpha.11":"2022-04-08T13:22:15.425Z","4.0.0-alpha.12":"2022-04-08T13:34:18.007Z","4.0.0-alpha.13":"2022-04-08T13:41:11.570Z","4.0.0-alpha.14":"2022-04-08T13:54:23.218Z","4.0.0-alpha.15":"2022-04-08T16:01:39.239Z","4.0.0-alpha.b94c36":"2022-04-11T09:18:42.072Z","4.0.0-alpha.16":"2022-04-11T11:01:34.192Z","4.0.0-alpha.17":"2022-04-11T11:47:18.066Z","4.0.0-alpha.17.4":"2022-04-12T14:19:12.081Z","4.0.0-alpha.18":"2022-04-13T10:16:12.947Z","4.0.0-alpha.19":"2022-04-13T10:52:36.799Z","4.0.0-alpha.20":"2022-04-13T16:56:30.656Z","4.0.0-dev.b82389f":"2022-04-21T11:43:39.519Z","4.0.0-dev.8d4934c":"2022-04-21T12:23:20.790Z","4.0.0-dev.baa1b2f":"2022-04-21T12:48:26.593Z","4.0.0-dev.8f72c9c":"2022-04-21T13:45:32.114Z","4.0.0-alpha.21":"2022-04-21T13:57:43.237Z","4.0.0-dev.51e05d8":"2022-04-21T14:00:06.504Z","4.0.0-dev.498bffb":"2022-04-27T14:30:39.941Z","4.0.0-dev.de3905f":"2022-04-27T14:42:50.974Z","4.0.0-dev.0e1e2e5":"2022-05-04T10:15:19.788Z","4.0.0-dev.b7bb3ba":"2022-05-05T11:26:38.753Z","4.0.0-dev.c694a2a":"2022-05-06T08:59:53.785Z","4.0.0-dev.ba7033f":"2022-05-06T09:19:21.137Z","4.0.0-dev.bc0a5b5":"2022-05-06T12:35:35.340Z","4.0.0-dev.900b71d":"2022-05-06T14:07:51.856Z","4.0.0-dev.ba8cde5":"2022-05-13T09:05:19.232Z","4.0.0-dev.104f4a3":"2022-05-16T16:16:25.841Z","4.0.0-dev.e3fa452":"2022-05-16T16:34:18.324Z","4.0.0-dev.9e7c3d6":"2022-05-17T12:53:55.859Z","4.0.0-dev.d9a8ab2":"2022-05-17T13:05:19.874Z","4.0.0-dev.e275a26":"2022-05-17T13:09:00.485Z","4.0.0-dev.8aa0bc2":"2022-05-17T13:17:54.362Z","4.0.0-dev.219fe4f":"2022-05-17T13:37:28.395Z","4.0.0-dev.7e092e8":"2022-05-17T14:30:22.357Z","4.0.0-dev.2ef3d81":"2022-05-17T14:44:31.304Z","4.0.0-dev.539c432":"2022-06-07T07:02:10.372Z","4.0.0-dev.2fe3f15":"2022-06-07T09:45:34.872Z","4.0.0-dev.b2ee4d0":"2022-06-07T09:58:39.871Z","4.0.0-dev.4fd670d":"2022-06-07T11:27:01.532Z","4.0.0-dev.0f1b253":"2022-06-07T11:39:14.374Z","4.0.0-dev.b21809a":"2022-06-08T15:49:17.654Z","4.0.0-dev.1c384e6":"2022-06-15T11:32:00.586Z","4.0.0-dev.d8521e6":"2022-06-30T11:59:58.974Z","4.0.0-dev.4867133":"2022-07-07T13:39:49.314Z","4.0.0-dev.838cf4d":"2022-07-08T10:05:34.722Z","4.0.0-dev.06401c4":"2022-07-12T14:09:53.744Z","4.0.0-dev.79d1c7b":"2022-07-13T14:16:48.381Z","4.0.0-dev.5587e09":"2022-07-19T10:07:21.939Z","4.0.0-alpha.22":"2022-07-19T10:21:29.509Z","4.0.0-dev.5c29ca4":"2022-07-19T10:24:02.412Z","4.0.0-dev.4ce739d":"2022-07-21T13:19:56.756Z","4.0.0-dev.c98112a":"2022-07-21T14:18:20.842Z","4.0.0-dev.b028d7f":"2022-07-21T16:02:15.325Z","4.0.1":"2022-07-22T09:28:14.776Z","4.0.1-dev.37f589d":"2022-07-22T09:30:36.452Z","4.0.1-dev.2e1837c":"2022-07-25T13:18:11.565Z","4.0.1-dev.0a87072":"2022-07-26T13:46:21.096Z","4.0.1-dev.b329845":"2022-07-26T14:14:55.833Z","4.0.1-dev.c513a49":"2022-07-28T12:37:31.876Z","4.0.1-dev.382de5b":"2022-07-28T14:26:19.898Z","4.0.1-dev.4e0598e":"2022-07-28T15:26:42.176Z","4.0.1-dev.1fe07bb":"2022-07-29T11:46:43.626Z","4.0.1-dev.bd741a4":"2022-07-29T13:54:07.095Z","4.0.1-dev.3b7020d":"2022-08-01T08:27:49.930Z","4.0.1-dev.0c13fb9":"2022-08-01T08:45:22.794Z","4.0.1-dev.0f5af9a":"2022-08-01T09:20:02.819Z","4.0.1-dev.d1f8ca7":"2022-08-01T13:55:11.414Z","4.0.1-dev.cae5bac":"2022-08-02T08:28:05.842Z","4.0.1-dev.41bc646":"2022-08-03T09:43:04.223Z","4.0.1-dev.18b219e":"2022-08-03T09:48:31.066Z","4.0.1-dev.e7e18f6":"2022-08-03T10:03:06.078Z","4.0.2-dev.8eb1578":"2022-08-05T10:53:46.020Z","4.0.2-dev.e22c4e6":"2022-08-05T13:06:39.898Z","4.0.2-dev.89498ae":"2022-08-10T10:21:07.623Z","4.0.2-dev.71e4b73":"2022-08-19T10:31:27.159Z","4.0.2":"2022-08-19T11:46:01.291Z","4.0.2-dev.2f8bbd1":"2022-08-19T11:48:44.252Z","4.0.2-dev.b96f0af":"2022-08-30T08:27:26.438Z","4.0.2-dev.f0bea18":"2022-08-30T11:11:33.440Z","4.0.2-dev.6f16299":"2022-08-30T11:34:36.496Z","4.0.2-dev.60ae4b4":"2022-09-16T13:40:41.038Z","4.0.2-dev.2d19dde":"2022-09-16T13:45:12.677Z","4.0.2-dev.dd21fb0":"2022-09-16T15:34:40.630Z","4.0.2-dev.cc2dc55":"2022-09-16T16:03:46.006Z","4.0.2-dev.cf5427e":"2022-09-16T16:53:05.631Z","4.0.3-dev.d863d0a":"2022-09-19T10:42:55.402Z","4.0.3-dev.0c72c63":"2022-09-26T11:17:39.170Z","4.0.3-dev.f3d5029":"2022-09-27T09:41:13.455Z","4.0.3-dev.379ba2f":"2022-09-27T10:11:55.388Z","4.0.3-dev.9bdd800":"2022-10-03T12:21:42.897Z","4.0.3-dev.06c4b26":"2022-10-04T11:57:31.699Z","4.0.3-dev.90390a9":"2022-10-04T15:38:01.564Z","4.0.3-dev.cf42065":"2022-10-31T10:43:40.519Z","4.0.3-dev.8671be4":"2022-10-31T14:31:55.719Z","4.0.3-dev.4541f86":"2022-10-31T15:45:23.181Z","4.0.3-dev.4946c9b":"2022-11-10T15:00:12.617Z","4.0.3-dev.edcb2d5":"2022-11-28T14:07:31.112Z","4.0.3-dev.4557ff9":"2023-01-03T15:51:47.393Z","4.0.3-dev.d4cc0eb":"2023-01-10T12:44:39.116Z","4.0.3-dev.e1d3ccd":"2023-01-11T11:37:14.549Z","4.0.3-dev.4d27a34":"2023-01-23T15:25:50.981Z","4.0.3-dev.a50814e":"2023-01-24T15:33:10.455Z","4.0.3-dev.166b72c":"2023-01-26T11:03:23.846Z","4.0.3-dev.0bc9af4":"2023-01-26T13:01:50.643Z","4.0.3":"2023-01-26T13:40:29.215Z","4.0.3-dev.13d1af0":"2023-01-26T13:44:18.838Z","4.0.3-dev.f8ca718":"2023-01-26T18:16:11.308Z","4.0.3-dev.a1d89d0":"2023-01-27T13:35:34.147Z","4.0.3-dev.4740ec6":"2023-02-06T11:39:43.232Z","4.0.3-dev.0915e72":"2023-02-15T16:40:56.042Z","4.0.3-dev.efd5f2a":"2023-10-12T11:51:39.473Z","4.0.3-dev.238c11c":"2023-10-12T12:08:37.460Z"},"maintainers":[{"name":"ethworks","email":"eng-services@wallfacer.io"}],"description":"A mock ens implementation for testing.","homepage":"https://github.com/EthWorks/Waffle","keywords":["ethereum","smart-contracts","solidity","testing","javascript","typescript","library","ens"],"repository":{"type":"git","url":"git+ssh://git@github.com/EthWorks/Waffle.git"},"author":{"name":"Marek Kirejczyk","email":"account@ethworks.io","url":"http://ethworks.io"},"bugs":{"url":"https://github.com/EthWorks/Waffle/issues"},"license":"MIT","readme":"","readmeFilename":""}